// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`testing ChatCard snapshot ChatCard 1`] = `
<ChatCard
  chat={
    Object {
      "id": 1,
      "messages": Array [],
      "users": Array [
        Object {
          "avatar": "test",
          "id": 1,
          "name": "test",
          "status": "Online",
        },
        Object {
          "avatar": "test2",
          "id": 2,
          "name": "test2",
          "status": "Online",
        },
      ],
    }
  }
  isActive=""
  onChangeChat={
    [MockFunction] {
      "calls": Array [
        Array [
          SyntheticEvent {
            "_dispatchInstances": null,
            "_dispatchListeners": null,
            "_targetInst": FiberNode {
              "_debugID": 52,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": FiberNode {
                "_debugID": 51,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 50,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 49,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 47,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugID": 47,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 1,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                              class="sc-kAzzGY dxEwPq"
                            >
                              <div
                                class="sc-chPdSV gWxTLm"
                              >
                                <img
                                  bordercolor="white"
                                  bordersize="1px"
                                  class="ui tiny circular image sc-ifAKCX irlmET"
                                  maxheight="65px"
                                  maxwidth="65px"
                                  src="test"
                                />
                                <span
                                  class="sc-kgoBCf gMvtpI"
                                  color="green"
                                />
                              </div>
                              <div
                                class="sc-kGXeez dCpFuT"
                              >
                                <p
                                  class="sc-kpOJdX bxSrEP"
                                >
                                  test
                                </p>
                                <p
                                  class="sc-fjdhpX gAKYZH"
                                />
                              </div>
                              <p
                                class="sc-dxgOiQ eGtYgX"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 12,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "timeoutHandle": -1,
                        },
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 32,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            }
                          }
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                            class="sc-kAzzGY dxEwPq"
                          >
                            <div
                              class="sc-chPdSV gWxTLm"
                            >
                              <img
                                bordercolor="white"
                                bordersize="1px"
                                class="ui tiny circular image sc-ifAKCX irlmET"
                                maxheight="65px"
                                maxwidth="65px"
                                src="test"
                              />
                              <span
                                class="sc-kgoBCf gMvtpI"
                                color="green"
                              />
                            </div>
                            <div
                              class="sc-kGXeez dCpFuT"
                            >
                              <p
                                class="sc-kpOJdX bxSrEP"
                              >
                                test
                              </p>
                              <p
                                class="sc-fjdhpX gAKYZH"
                              />
                            </div>
                            <p
                              class="sc-dxgOiQ eGtYgX"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 12,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "timeoutHandle": -1,
                      },
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              }
                            }
                          />,
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "chat": Object {
                      "id": 1,
                      "messages": Array [],
                      "users": Array [
                        Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                        Object {
                          "avatar": "test2",
                          "id": 2,
                          "name": "test2",
                          "status": "Online",
                        },
                      ],
                    },
                    "isActive": "",
                    "onChangeChat": [MockFunction] {
                      "calls": [Circular],
                    },
                    "user": Object {
                      "avatar": "test",
                      "id": 1,
                      "name": "test",
                      "status": "Online",
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "chat": Object {
                      "id": 1,
                      "messages": Array [],
                      "users": Array [
                        Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                        Object {
                          "avatar": "test2",
                          "id": 2,
                          "name": "test2",
                          "status": "Online",
                        },
                      ],
                    },
                    "isActive": "",
                    "onChangeChat": [MockFunction] {
                      "calls": [Circular],
                    },
                    "user": Object {
                      "avatar": "test",
                      "id": 1,
                      "name": "test",
                      "status": "Online",
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 49,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 47,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugID": 47,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 1,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                              class="sc-kAzzGY dxEwPq"
                            >
                              <div
                                class="sc-chPdSV gWxTLm"
                              >
                                <img
                                  bordercolor="white"
                                  bordersize="1px"
                                  class="ui tiny circular image sc-ifAKCX irlmET"
                                  maxheight="65px"
                                  maxwidth="65px"
                                  src="test"
                                />
                                <span
                                  class="sc-kgoBCf gMvtpI"
                                  color="green"
                                />
                              </div>
                              <div
                                class="sc-kGXeez dCpFuT"
                              >
                                <p
                                  class="sc-kpOJdX bxSrEP"
                                >
                                  test
                                </p>
                                <p
                                  class="sc-fjdhpX gAKYZH"
                                />
                              </div>
                              <p
                                class="sc-dxgOiQ eGtYgX"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 12,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "timeoutHandle": -1,
                        },
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 32,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            }
                          }
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                            class="sc-kAzzGY dxEwPq"
                          >
                            <div
                              class="sc-chPdSV gWxTLm"
                            >
                              <img
                                bordercolor="white"
                                bordersize="1px"
                                class="ui tiny circular image sc-ifAKCX irlmET"
                                maxheight="65px"
                                maxwidth="65px"
                                src="test"
                              />
                              <span
                                class="sc-kgoBCf gMvtpI"
                                color="green"
                              />
                            </div>
                            <div
                              class="sc-kGXeez dCpFuT"
                            >
                              <p
                                class="sc-kpOJdX bxSrEP"
                              >
                                test
                              </p>
                              <p
                                class="sc-fjdhpX gAKYZH"
                              />
                            </div>
                            <p
                              class="sc-dxgOiQ eGtYgX"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 12,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "timeoutHandle": -1,
                      },
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              }
                            }
                          />,
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 0,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 1,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <styled.div>
                      <Styled(Image)
                        bordercolor="white"
                        bordersize="1px"
                        circular={true}
                        maxheight="65px"
                        maxwidth="65px"
                        size="tiny"
                        src="test"
                      />
                      <styled.span
                        color="green"
                      />
                    </styled.div>,
                    <styled.div>
                      <styled.p>
                        test
                      </styled.p>
                      <styled.p>
                        
                      </styled.p>
                    </styled.div>,
                    <styled.p>
                      
                    </styled.p>,
                  ],
                  "className": "",
                  "onClick": [MockFunction] {
                    "calls": [Circular],
                  },
                },
                "memoizedState": Object {
                  "generatedClassName": "dxEwPq",
                  "theme": null,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <styled.div>
                      <Styled(Image)
                        bordercolor="white"
                        bordersize="1px"
                        circular={true}
                        maxheight="65px"
                        maxwidth="65px"
                        size="tiny"
                        src="test"
                      />
                      <styled.span
                        color="green"
                      />
                    </styled.div>,
                    <styled.div>
                      <styled.p>
                        test
                      </styled.p>
                      <styled.p>
                        
                      </styled.p>
                    </styled.div>,
                    <styled.p>
                      
                    </styled.p>,
                  ],
                  "className": "",
                  "onClick": [MockFunction] {
                    "calls": [Circular],
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 50,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 49,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 47,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugID": 47,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 1,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                              class="sc-kAzzGY dxEwPq"
                            >
                              <div
                                class="sc-chPdSV gWxTLm"
                              >
                                <img
                                  bordercolor="white"
                                  bordersize="1px"
                                  class="ui tiny circular image sc-ifAKCX irlmET"
                                  maxheight="65px"
                                  maxwidth="65px"
                                  src="test"
                                />
                                <span
                                  class="sc-kgoBCf gMvtpI"
                                  color="green"
                                />
                              </div>
                              <div
                                class="sc-kGXeez dCpFuT"
                              >
                                <p
                                  class="sc-kpOJdX bxSrEP"
                                >
                                  test
                                </p>
                                <p
                                  class="sc-fjdhpX gAKYZH"
                                />
                              </div>
                              <p
                                class="sc-dxgOiQ eGtYgX"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 12,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "timeoutHandle": -1,
                        },
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 32,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            }
                          }
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                            class="sc-kAzzGY dxEwPq"
                          >
                            <div
                              class="sc-chPdSV gWxTLm"
                            >
                              <img
                                bordercolor="white"
                                bordersize="1px"
                                class="ui tiny circular image sc-ifAKCX irlmET"
                                maxheight="65px"
                                maxwidth="65px"
                                src="test"
                              />
                              <span
                                class="sc-kgoBCf gMvtpI"
                                color="green"
                              />
                            </div>
                            <div
                              class="sc-kGXeez dCpFuT"
                            >
                              <p
                                class="sc-kpOJdX bxSrEP"
                              >
                                test
                              </p>
                              <p
                                class="sc-fjdhpX gAKYZH"
                              />
                            </div>
                            <p
                              class="sc-dxgOiQ eGtYgX"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 12,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "timeoutHandle": -1,
                      },
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              }
                            }
                          />,
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "chat": Object {
                      "id": 1,
                      "messages": Array [],
                      "users": Array [
                        Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                        Object {
                          "avatar": "test2",
                          "id": 2,
                          "name": "test2",
                          "status": "Online",
                        },
                      ],
                    },
                    "isActive": "",
                    "onChangeChat": [MockFunction] {
                      "calls": [Circular],
                    },
                    "user": Object {
                      "avatar": "test",
                      "id": 1,
                      "name": "test",
                      "status": "Online",
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "chat": Object {
                      "id": 1,
                      "messages": Array [],
                      "users": Array [
                        Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                        Object {
                          "avatar": "test2",
                          "id": 2,
                          "name": "test2",
                          "status": "Online",
                        },
                      ],
                    },
                    "isActive": "",
                    "onChangeChat": [MockFunction] {
                      "calls": [Circular],
                    },
                    "user": Object {
                      "avatar": "test",
                      "id": 1,
                      "name": "test",
                      "status": "Online",
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 49,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 47,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugID": 47,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 1,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                              class="sc-kAzzGY dxEwPq"
                            >
                              <div
                                class="sc-chPdSV gWxTLm"
                              >
                                <img
                                  bordercolor="white"
                                  bordersize="1px"
                                  class="ui tiny circular image sc-ifAKCX irlmET"
                                  maxheight="65px"
                                  maxwidth="65px"
                                  src="test"
                                />
                                <span
                                  class="sc-kgoBCf gMvtpI"
                                  color="green"
                                />
                              </div>
                              <div
                                class="sc-kGXeez dCpFuT"
                              >
                                <p
                                  class="sc-kpOJdX bxSrEP"
                                >
                                  test
                                </p>
                                <p
                                  class="sc-fjdhpX gAKYZH"
                                />
                              </div>
                              <p
                                class="sc-dxgOiQ eGtYgX"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 12,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "timeoutHandle": -1,
                        },
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 32,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            }
                          }
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                            class="sc-kAzzGY dxEwPq"
                          >
                            <div
                              class="sc-chPdSV gWxTLm"
                            >
                              <img
                                bordercolor="white"
                                bordersize="1px"
                                class="ui tiny circular image sc-ifAKCX irlmET"
                                maxheight="65px"
                                maxwidth="65px"
                                src="test"
                              />
                              <span
                                class="sc-kgoBCf gMvtpI"
                                color="green"
                              />
                            </div>
                            <div
                              class="sc-kGXeez dCpFuT"
                            >
                              <p
                                class="sc-kpOJdX bxSrEP"
                              >
                                test
                              </p>
                              <p
                                class="sc-fjdhpX gAKYZH"
                              />
                            </div>
                            <p
                              class="sc-dxgOiQ eGtYgX"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 12,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "timeoutHandle": -1,
                      },
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              }
                            }
                          />,
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 0,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": StyledComponent {
                  "__reactInternalMemoizedMaskedChildContext": Object {
                    "__styled-components-stylesheet__": undefined,
                    "__styled-components__": undefined,
                    "__styled-components__next__": undefined,
                  },
                  "__reactInternalMemoizedUnmaskedChildContext": Object {},
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "attrs": Object {},
                  "context": Object {
                    "__styled-components-stylesheet__": undefined,
                    "__styled-components__": undefined,
                    "__styled-components__next__": undefined,
                  },
                  "props": Object {
                    "children": Array [
                      <styled.div>
                        <Styled(Image)
                          bordercolor="white"
                          bordersize="1px"
                          circular={true}
                          maxheight="65px"
                          maxwidth="65px"
                          size="tiny"
                          src="test"
                        />
                        <styled.span
                          color="green"
                        />
                      </styled.div>,
                      <styled.div>
                        <styled.p>
                          test
                        </styled.p>
                        <styled.p>
                          
                        </styled.p>
                      </styled.div>,
                      <styled.p>
                        
                      </styled.p>,
                    ],
                    "className": "",
                    "onClick": [MockFunction] {
                      "calls": [Circular],
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "generatedClassName": "dxEwPq",
                    "theme": null,
                  },
                  "unsubscribeId": -1,
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseState": Object {
                    "generatedClassName": "dxEwPq",
                    "theme": null,
                  },
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 53,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 50,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 49,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 47,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugID": 47,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 1,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                              class="sc-kAzzGY dxEwPq"
                            >
                              <div
                                class="sc-chPdSV gWxTLm"
                              >
                                <img
                                  bordercolor="white"
                                  bordersize="1px"
                                  class="ui tiny circular image sc-ifAKCX irlmET"
                                  maxheight="65px"
                                  maxwidth="65px"
                                  src="test"
                                />
                                <span
                                  class="sc-kgoBCf gMvtpI"
                                  color="green"
                                />
                              </div>
                              <div
                                class="sc-kGXeez dCpFuT"
                              >
                                <p
                                  class="sc-kpOJdX bxSrEP"
                                >
                                  test
                                </p>
                                <p
                                  class="sc-fjdhpX gAKYZH"
                                />
                              </div>
                              <p
                                class="sc-dxgOiQ eGtYgX"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 12,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "timeoutHandle": -1,
                        },
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 32,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            }
                          }
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                            class="sc-kAzzGY dxEwPq"
                          >
                            <div
                              class="sc-chPdSV gWxTLm"
                            >
                              <img
                                bordercolor="white"
                                bordersize="1px"
                                class="ui tiny circular image sc-ifAKCX irlmET"
                                maxheight="65px"
                                maxwidth="65px"
                                src="test"
                              />
                              <span
                                class="sc-kgoBCf gMvtpI"
                                color="green"
                              />
                            </div>
                            <div
                              class="sc-kGXeez dCpFuT"
                            >
                              <p
                                class="sc-kpOJdX bxSrEP"
                              >
                                test
                              </p>
                              <p
                                class="sc-fjdhpX gAKYZH"
                              />
                            </div>
                            <p
                              class="sc-dxgOiQ eGtYgX"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 12,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "timeoutHandle": -1,
                      },
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              }
                            }
                          />,
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 51,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <styled.div>
                          <Styled(Image)
                            bordercolor="white"
                            bordersize="1px"
                            circular={true}
                            maxheight="65px"
                            maxwidth="65px"
                            size="tiny"
                            src="test"
                          />
                          <styled.span
                            color="green"
                          />
                        </styled.div>,
                        <styled.div>
                          <styled.p>
                            test
                          </styled.p>
                          <styled.p>
                            
                          </styled.p>
                        </styled.div>,
                        <styled.p>
                          
                        </styled.p>,
                      ],
                      "className": "",
                      "onClick": [MockFunction] {
                        "calls": [Circular],
                      },
                    },
                    "memoizedState": Object {
                      "generatedClassName": "dxEwPq",
                      "theme": null,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <styled.div>
                          <Styled(Image)
                            bordercolor="white"
                            bordersize="1px"
                            circular={true}
                            maxheight="65px"
                            maxwidth="65px"
                            size="tiny"
                            src="test"
                          />
                          <styled.span
                            color="green"
                          />
                        </styled.div>,
                        <styled.div>
                          <styled.p>
                            test
                          </styled.p>
                          <styled.p>
                            
                          </styled.p>
                        </styled.div>,
                        <styled.p>
                          
                        </styled.p>,
                      ],
                      "className": "",
                      "onClick": [MockFunction] {
                        "calls": [Circular],
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": StyledComponent {
                      "__reactInternalMemoizedMaskedChildContext": Object {
                        "__styled-components-stylesheet__": undefined,
                        "__styled-components__": undefined,
                        "__styled-components__next__": undefined,
                      },
                      "__reactInternalMemoizedUnmaskedChildContext": Object {},
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "attrs": Object {},
                      "context": Object {
                        "__styled-components-stylesheet__": undefined,
                        "__styled-components__": undefined,
                        "__styled-components__next__": undefined,
                      },
                      "props": Object {
                        "children": Array [
                          <styled.div>
                            <Styled(Image)
                              bordercolor="white"
                              bordersize="1px"
                              circular={true}
                              maxheight="65px"
                              maxwidth="65px"
                              size="tiny"
                              src="test"
                            />
                            <styled.span
                              color="green"
                            />
                          </styled.div>,
                          <styled.div>
                            <styled.p>
                              test
                            </styled.p>
                            <styled.p>
                              
                            </styled.p>
                          </styled.div>,
                          <styled.p>
                            
                          </styled.p>,
                        ],
                        "className": "",
                        "onClick": [MockFunction] {
                          "calls": [Circular],
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "generatedClassName": "dxEwPq",
                        "theme": null,
                      },
                      "unsubscribeId": -1,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseState": Object {
                        "generatedClassName": "dxEwPq",
                        "theme": null,
                      },
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": null,
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": null,
                    },
                  },
                  "childExpirationTime": 0,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "chat": Object {
                      "id": 1,
                      "messages": Array [],
                      "users": Array [
                        Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                        Object {
                          "avatar": "test2",
                          "id": 2,
                          "name": "test2",
                          "status": "Online",
                        },
                      ],
                    },
                    "isActive": "",
                    "onChangeChat": [MockFunction] {
                      "calls": [Circular],
                    },
                    "user": Object {
                      "avatar": "test",
                      "id": 1,
                      "name": "test",
                      "status": "Online",
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "chat": Object {
                      "id": 1,
                      "messages": Array [],
                      "users": Array [
                        Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                        Object {
                          "avatar": "test2",
                          "id": 2,
                          "name": "test2",
                          "status": "Online",
                        },
                      ],
                    },
                    "isActive": "",
                    "onChangeChat": [MockFunction] {
                      "calls": [Circular],
                    },
                    "user": Object {
                      "avatar": "test",
                      "id": 1,
                      "name": "test",
                      "status": "Online",
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 49,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 47,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugID": 47,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 1,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                              class="sc-kAzzGY dxEwPq"
                            >
                              <div
                                class="sc-chPdSV gWxTLm"
                              >
                                <img
                                  bordercolor="white"
                                  bordersize="1px"
                                  class="ui tiny circular image sc-ifAKCX irlmET"
                                  maxheight="65px"
                                  maxwidth="65px"
                                  src="test"
                                />
                                <span
                                  class="sc-kgoBCf gMvtpI"
                                  color="green"
                                />
                              </div>
                              <div
                                class="sc-kGXeez dCpFuT"
                              >
                                <p
                                  class="sc-kpOJdX bxSrEP"
                                >
                                  test
                                </p>
                                <p
                                  class="sc-fjdhpX gAKYZH"
                                />
                              </div>
                              <p
                                class="sc-dxgOiQ eGtYgX"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 12,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "timeoutHandle": -1,
                        },
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 32,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            }
                          }
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                            class="sc-kAzzGY dxEwPq"
                          >
                            <div
                              class="sc-chPdSV gWxTLm"
                            >
                              <img
                                bordercolor="white"
                                bordersize="1px"
                                class="ui tiny circular image sc-ifAKCX irlmET"
                                maxheight="65px"
                                maxwidth="65px"
                                src="test"
                              />
                              <span
                                class="sc-kgoBCf gMvtpI"
                                color="green"
                              />
                            </div>
                            <div
                              class="sc-kGXeez dCpFuT"
                            >
                              <p
                                class="sc-kpOJdX bxSrEP"
                              >
                                test
                              </p>
                              <p
                                class="sc-fjdhpX gAKYZH"
                              />
                            </div>
                            <p
                              class="sc-dxgOiQ eGtYgX"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 12,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "timeoutHandle": -1,
                      },
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              }
                            }
                          />,
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 0,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 56,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 57,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 50,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 49,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 47,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugID": 47,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childExpirationTime": 1,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="sc-kAzzGY dxEwPq"
                                >
                                  <div
                                    class="sc-chPdSV gWxTLm"
                                  >
                                    <img
                                      bordercolor="white"
                                      bordersize="1px"
                                      class="ui tiny circular image sc-ifAKCX irlmET"
                                      maxheight="65px"
                                      maxwidth="65px"
                                      src="test"
                                    />
                                    <span
                                      class="sc-kgoBCf gMvtpI"
                                      color="green"
                                    />
                                  </div>
                                  <div
                                    class="sc-kGXeez dCpFuT"
                                  >
                                    <p
                                      class="sc-kpOJdX bxSrEP"
                                    >
                                      test
                                    </p>
                                    <p
                                      class="sc-fjdhpX gAKYZH"
                                    />
                                  </div>
                                  <p
                                    class="sc-dxgOiQ eGtYgX"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "didError": false,
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "expirationTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "interactionThreadID": 12,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "memoizedInteractions": Set {},
                              "nextExpirationTimeToWorkOn": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "timeoutHandle": -1,
                            },
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "tag": 0,
                              },
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "tag": 0,
                              },
                            },
                          },
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                }
                              }
                            />,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="sc-kAzzGY dxEwPq"
                              >
                                <div
                                  class="sc-chPdSV gWxTLm"
                                >
                                  <img
                                    bordercolor="white"
                                    bordersize="1px"
                                    class="ui tiny circular image sc-ifAKCX irlmET"
                                    maxheight="65px"
                                    maxwidth="65px"
                                    src="test"
                                  />
                                  <span
                                    class="sc-kgoBCf gMvtpI"
                                    color="green"
                                  />
                                </div>
                                <div
                                  class="sc-kGXeez dCpFuT"
                                >
                                  <p
                                    class="sc-kpOJdX bxSrEP"
                                  >
                                    test
                                  </p>
                                  <p
                                    class="sc-fjdhpX gAKYZH"
                                  />
                                </div>
                                <p
                                  class="sc-dxgOiQ eGtYgX"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "didError": false,
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "expirationTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "interactionThreadID": 12,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextExpirationTimeToWorkOn": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "timeoutHandle": -1,
                          },
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 51,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <styled.div>
                              <Styled(Image)
                                bordercolor="white"
                                bordersize="1px"
                                circular={true}
                                maxheight="65px"
                                maxwidth="65px"
                                size="tiny"
                                src="test"
                              />
                              <styled.span
                                color="green"
                              />
                            </styled.div>,
                            <styled.div>
                              <styled.p>
                                test
                              </styled.p>
                              <styled.p>
                                
                              </styled.p>
                            </styled.div>,
                            <styled.p>
                              
                            </styled.p>,
                          ],
                          "className": "",
                          "onClick": [MockFunction] {
                            "calls": [Circular],
                          },
                        },
                        "memoizedState": Object {
                          "generatedClassName": "dxEwPq",
                          "theme": null,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <styled.div>
                              <Styled(Image)
                                bordercolor="white"
                                bordersize="1px"
                                circular={true}
                                maxheight="65px"
                                maxwidth="65px"
                                size="tiny"
                                src="test"
                              />
                              <styled.span
                                color="green"
                              />
                            </styled.div>,
                            <styled.div>
                              <styled.p>
                                test
                              </styled.p>
                              <styled.p>
                                
                              </styled.p>
                            </styled.div>,
                            <styled.p>
                              
                            </styled.p>,
                          ],
                          "className": "",
                          "onClick": [MockFunction] {
                            "calls": [Circular],
                          },
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": StyledComponent {
                          "__reactInternalMemoizedMaskedChildContext": Object {
                            "__styled-components-stylesheet__": undefined,
                            "__styled-components__": undefined,
                            "__styled-components__next__": undefined,
                          },
                          "__reactInternalMemoizedUnmaskedChildContext": Object {},
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "attrs": Object {},
                          "context": Object {
                            "__styled-components-stylesheet__": undefined,
                            "__styled-components__": undefined,
                            "__styled-components__next__": undefined,
                          },
                          "props": Object {
                            "children": Array [
                              <styled.div>
                                <Styled(Image)
                                  bordercolor="white"
                                  bordersize="1px"
                                  circular={true}
                                  maxheight="65px"
                                  maxwidth="65px"
                                  size="tiny"
                                  src="test"
                                />
                                <styled.span
                                  color="green"
                                />
                              </styled.div>,
                              <styled.div>
                                <styled.p>
                                  test
                                </styled.p>
                                <styled.p>
                                  
                                </styled.p>
                              </styled.div>,
                              <styled.p>
                                
                              </styled.p>,
                            ],
                            "className": "",
                            "onClick": [MockFunction] {
                              "calls": [Circular],
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "generatedClassName": "dxEwPq",
                            "theme": null,
                          },
                          "unsubscribeId": -1,
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": Object {
                          "baseState": Object {
                            "generatedClassName": "dxEwPq",
                            "theme": null,
                          },
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "childExpirationTime": 0,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 49,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 47,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugID": 47,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childExpirationTime": 1,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="sc-kAzzGY dxEwPq"
                                >
                                  <div
                                    class="sc-chPdSV gWxTLm"
                                  >
                                    <img
                                      bordercolor="white"
                                      bordersize="1px"
                                      class="ui tiny circular image sc-ifAKCX irlmET"
                                      maxheight="65px"
                                      maxwidth="65px"
                                      src="test"
                                    />
                                    <span
                                      class="sc-kgoBCf gMvtpI"
                                      color="green"
                                    />
                                  </div>
                                  <div
                                    class="sc-kGXeez dCpFuT"
                                  >
                                    <p
                                      class="sc-kpOJdX bxSrEP"
                                    >
                                      test
                                    </p>
                                    <p
                                      class="sc-fjdhpX gAKYZH"
                                    />
                                  </div>
                                  <p
                                    class="sc-dxgOiQ eGtYgX"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "didError": false,
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "expirationTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "interactionThreadID": 12,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "memoizedInteractions": Set {},
                              "nextExpirationTimeToWorkOn": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "timeoutHandle": -1,
                            },
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "tag": 0,
                              },
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "tag": 0,
                              },
                            },
                          },
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                }
                              }
                            />,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="sc-kAzzGY dxEwPq"
                              >
                                <div
                                  class="sc-chPdSV gWxTLm"
                                >
                                  <img
                                    bordercolor="white"
                                    bordersize="1px"
                                    class="ui tiny circular image sc-ifAKCX irlmET"
                                    maxheight="65px"
                                    maxwidth="65px"
                                    src="test"
                                  />
                                  <span
                                    class="sc-kgoBCf gMvtpI"
                                    color="green"
                                  />
                                </div>
                                <div
                                  class="sc-kGXeez dCpFuT"
                                >
                                  <p
                                    class="sc-kpOJdX bxSrEP"
                                  >
                                    test
                                  </p>
                                  <p
                                    class="sc-fjdhpX gAKYZH"
                                  />
                                </div>
                                <p
                                  class="sc-dxgOiQ eGtYgX"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "didError": false,
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "expirationTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "interactionThreadID": 12,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextExpirationTimeToWorkOn": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "timeoutHandle": -1,
                          },
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 59,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 60,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "bordercolor": "white",
                          "bordersize": "1px",
                          "className": "ui tiny circular image sc-ifAKCX irlmET",
                          "maxheight": "65px",
                          "maxwidth": "65px",
                          "src": "test",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "bordercolor": "white",
                          "bordersize": "1px",
                          "className": "ui tiny circular image sc-ifAKCX irlmET",
                          "maxheight": "65px",
                          "maxwidth": "65px",
                          "src": "test",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <img
                          bordercolor="white"
                          bordersize="1px"
                          class="ui tiny circular image sc-ifAKCX irlmET"
                          maxheight="65px"
                          maxwidth="65px"
                          src="test"
                        />,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "img",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "as": "img",
                        "bordercolor": "white",
                        "bordersize": "1px",
                        "circular": true,
                        "className": "sc-ifAKCX irlmET",
                        "maxheight": "65px",
                        "maxwidth": "65px",
                        "size": "tiny",
                        "src": "test",
                        "ui": true,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "as": "img",
                        "bordercolor": "white",
                        "bordersize": "1px",
                        "circular": true,
                        "className": "sc-ifAKCX irlmET",
                        "maxheight": "65px",
                        "maxwidth": "65px",
                        "size": "tiny",
                        "src": "test",
                        "ui": true,
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "bordercolor": "white",
                      "bordersize": "1px",
                      "circular": true,
                      "maxheight": "65px",
                      "maxwidth": "65px",
                      "size": "tiny",
                      "src": "test",
                    },
                    "memoizedState": Object {
                      "generatedClassName": "irlmET",
                      "theme": Object {},
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "bordercolor": "white",
                      "bordersize": "1px",
                      "circular": true,
                      "maxheight": "65px",
                      "maxwidth": "65px",
                      "size": "tiny",
                      "src": "test",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 58,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 50,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 49,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 47,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": [Circular],
                              "child": null,
                              "childExpirationTime": 1,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="sc-kAzzGY dxEwPq"
                                  >
                                    <div
                                      class="sc-chPdSV gWxTLm"
                                    >
                                      <img
                                        bordercolor="white"
                                        bordersize="1px"
                                        class="ui tiny circular image sc-ifAKCX irlmET"
                                        maxheight="65px"
                                        maxwidth="65px"
                                        src="test"
                                      />
                                      <span
                                        class="sc-kgoBCf gMvtpI"
                                        color="green"
                                      />
                                    </div>
                                    <div
                                      class="sc-kGXeez dCpFuT"
                                    >
                                      <p
                                        class="sc-kpOJdX bxSrEP"
                                      >
                                        test
                                      </p>
                                      <p
                                        class="sc-fjdhpX gAKYZH"
                                      />
                                    </div>
                                    <p
                                      class="sc-dxgOiQ eGtYgX"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "chat": Object {
                                            "id": 1,
                                            "messages": Array [],
                                            "users": Array [
                                              Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                              Object {
                                                "avatar": "test2",
                                                "id": 2,
                                                "name": "test2",
                                                "status": "Online",
                                              },
                                            ],
                                          },
                                          "isActive": "",
                                          "onChangeChat": [MockFunction] {
                                            "calls": [Circular],
                                          },
                                          "user": Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                        }
                                      }
                                    />,
                                  },
                                  "tag": 0,
                                },
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "chat": Object {
                                            "id": 1,
                                            "messages": Array [],
                                            "users": Array [
                                              Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                              Object {
                                                "avatar": "test2",
                                                "id": 2,
                                                "name": "test2",
                                                "status": "Online",
                                              },
                                            ],
                                          },
                                          "isActive": "",
                                          "onChangeChat": [MockFunction] {
                                            "calls": [Circular],
                                          },
                                          "user": Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                        }
                                      }
                                    />,
                                  },
                                  "tag": 0,
                                },
                              },
                            },
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="sc-kAzzGY dxEwPq"
                                >
                                  <div
                                    class="sc-chPdSV gWxTLm"
                                  >
                                    <img
                                      bordercolor="white"
                                      bordersize="1px"
                                      class="ui tiny circular image sc-ifAKCX irlmET"
                                      maxheight="65px"
                                      maxwidth="65px"
                                      src="test"
                                    />
                                    <span
                                      class="sc-kgoBCf gMvtpI"
                                      color="green"
                                    />
                                  </div>
                                  <div
                                    class="sc-kGXeez dCpFuT"
                                  >
                                    <p
                                      class="sc-kpOJdX bxSrEP"
                                    >
                                      test
                                    </p>
                                    <p
                                      class="sc-fjdhpX gAKYZH"
                                    />
                                  </div>
                                  <p
                                    class="sc-dxgOiQ eGtYgX"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "didError": false,
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "expirationTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "interactionThreadID": 12,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "memoizedInteractions": Set {},
                              "nextExpirationTimeToWorkOn": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "timeoutHandle": -1,
                            },
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": null,
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": null,
                            },
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 51,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <styled.div>
                                <Styled(Image)
                                  bordercolor="white"
                                  bordersize="1px"
                                  circular={true}
                                  maxheight="65px"
                                  maxwidth="65px"
                                  size="tiny"
                                  src="test"
                                />
                                <styled.span
                                  color="green"
                                />
                              </styled.div>,
                              <styled.div>
                                <styled.p>
                                  test
                                </styled.p>
                                <styled.p>
                                  
                                </styled.p>
                              </styled.div>,
                              <styled.p>
                                
                              </styled.p>,
                            ],
                            "className": "",
                            "onClick": [MockFunction] {
                              "calls": [Circular],
                            },
                          },
                          "memoizedState": Object {
                            "generatedClassName": "dxEwPq",
                            "theme": null,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <styled.div>
                                <Styled(Image)
                                  bordercolor="white"
                                  bordersize="1px"
                                  circular={true}
                                  maxheight="65px"
                                  maxwidth="65px"
                                  size="tiny"
                                  src="test"
                                />
                                <styled.span
                                  color="green"
                                />
                              </styled.div>,
                              <styled.div>
                                <styled.p>
                                  test
                                </styled.p>
                                <styled.p>
                                  
                                </styled.p>
                              </styled.div>,
                              <styled.p>
                                
                              </styled.p>,
                            ],
                            "className": "",
                            "onClick": [MockFunction] {
                              "calls": [Circular],
                            },
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": StyledComponent {
                            "__reactInternalMemoizedMaskedChildContext": Object {
                              "__styled-components-stylesheet__": undefined,
                              "__styled-components__": undefined,
                              "__styled-components__next__": undefined,
                            },
                            "__reactInternalMemoizedUnmaskedChildContext": Object {},
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "attrs": Object {},
                            "context": Object {
                              "__styled-components-stylesheet__": undefined,
                              "__styled-components__": undefined,
                              "__styled-components__next__": undefined,
                            },
                            "props": Object {
                              "children": Array [
                                <styled.div>
                                  <Styled(Image)
                                    bordercolor="white"
                                    bordersize="1px"
                                    circular={true}
                                    maxheight="65px"
                                    maxwidth="65px"
                                    size="tiny"
                                    src="test"
                                  />
                                  <styled.span
                                    color="green"
                                  />
                                </styled.div>,
                                <styled.div>
                                  <styled.p>
                                    test
                                  </styled.p>
                                  <styled.p>
                                    
                                  </styled.p>
                                </styled.div>,
                                <styled.p>
                                  
                                </styled.p>,
                              ],
                              "className": "",
                              "onClick": [MockFunction] {
                                "calls": [Circular],
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "generatedClassName": "dxEwPq",
                              "theme": null,
                            },
                            "unsubscribeId": -1,
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": Object {
                            "baseState": Object {
                              "generatedClassName": "dxEwPq",
                              "theme": null,
                            },
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "childExpirationTime": 0,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 49,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 47,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": [Circular],
                              "child": null,
                              "childExpirationTime": 1,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="sc-kAzzGY dxEwPq"
                                  >
                                    <div
                                      class="sc-chPdSV gWxTLm"
                                    >
                                      <img
                                        bordercolor="white"
                                        bordersize="1px"
                                        class="ui tiny circular image sc-ifAKCX irlmET"
                                        maxheight="65px"
                                        maxwidth="65px"
                                        src="test"
                                      />
                                      <span
                                        class="sc-kgoBCf gMvtpI"
                                        color="green"
                                      />
                                    </div>
                                    <div
                                      class="sc-kGXeez dCpFuT"
                                    >
                                      <p
                                        class="sc-kpOJdX bxSrEP"
                                      >
                                        test
                                      </p>
                                      <p
                                        class="sc-fjdhpX gAKYZH"
                                      />
                                    </div>
                                    <p
                                      class="sc-dxgOiQ eGtYgX"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "chat": Object {
                                            "id": 1,
                                            "messages": Array [],
                                            "users": Array [
                                              Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                              Object {
                                                "avatar": "test2",
                                                "id": 2,
                                                "name": "test2",
                                                "status": "Online",
                                              },
                                            ],
                                          },
                                          "isActive": "",
                                          "onChangeChat": [MockFunction] {
                                            "calls": [Circular],
                                          },
                                          "user": Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                        }
                                      }
                                    />,
                                  },
                                  "tag": 0,
                                },
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "chat": Object {
                                            "id": 1,
                                            "messages": Array [],
                                            "users": Array [
                                              Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                              Object {
                                                "avatar": "test2",
                                                "id": 2,
                                                "name": "test2",
                                                "status": "Online",
                                              },
                                            ],
                                          },
                                          "isActive": "",
                                          "onChangeChat": [MockFunction] {
                                            "calls": [Circular],
                                          },
                                          "user": Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                        }
                                      }
                                    />,
                                  },
                                  "tag": 0,
                                },
                              },
                            },
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="sc-kAzzGY dxEwPq"
                                >
                                  <div
                                    class="sc-chPdSV gWxTLm"
                                  >
                                    <img
                                      bordercolor="white"
                                      bordersize="1px"
                                      class="ui tiny circular image sc-ifAKCX irlmET"
                                      maxheight="65px"
                                      maxwidth="65px"
                                      src="test"
                                    />
                                    <span
                                      class="sc-kgoBCf gMvtpI"
                                      color="green"
                                    />
                                  </div>
                                  <div
                                    class="sc-kGXeez dCpFuT"
                                  >
                                    <p
                                      class="sc-kpOJdX bxSrEP"
                                    >
                                      test
                                    </p>
                                    <p
                                      class="sc-fjdhpX gAKYZH"
                                    />
                                  </div>
                                  <p
                                    class="sc-dxgOiQ eGtYgX"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "didError": false,
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "expirationTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "interactionThreadID": 12,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "memoizedInteractions": Set {},
                              "nextExpirationTimeToWorkOn": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "timeoutHandle": -1,
                            },
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": null,
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": null,
                            },
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 0,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 61,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "className": "sc-kgoBCf gMvtpI",
                          "color": "green",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "className": "sc-kgoBCf gMvtpI",
                          "color": "green",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <span
                          class="sc-kgoBCf gMvtpI"
                          color="green"
                        />,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "span",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "color": "green",
                      },
                      "memoizedState": Object {
                        "generatedClassName": "gMvtpI",
                        "theme": Object {},
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "color": "green",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": StyledComponent {
                        "__reactInternalMemoizedMaskedChildContext": Object {
                          "__styled-components-stylesheet__": undefined,
                          "__styled-components__": undefined,
                          "__styled-components__next__": undefined,
                        },
                        "__reactInternalMemoizedUnmaskedChildContext": Object {},
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "attrs": Object {},
                        "context": Object {
                          "__styled-components-stylesheet__": undefined,
                          "__styled-components__": undefined,
                          "__styled-components__next__": undefined,
                        },
                        "props": Object {
                          "color": "green",
                        },
                        "refs": Object {},
                        "state": Object {
                          "generatedClassName": "gMvtpI",
                          "theme": Object {},
                        },
                        "unsubscribeId": -1,
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": Object {
                        "baseState": Object {
                          "generatedClassName": "gMvtpI",
                          "theme": Object {},
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "stateNode": StyledComponent {
                      "__reactInternalMemoizedMaskedChildContext": Object {
                        "__styled-components-stylesheet__": undefined,
                        "__styled-components__": undefined,
                        "__styled-components__next__": undefined,
                      },
                      "__reactInternalMemoizedUnmaskedChildContext": Object {},
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "attrs": Object {},
                      "context": Object {
                        "__styled-components-stylesheet__": undefined,
                        "__styled-components__": undefined,
                        "__styled-components__next__": undefined,
                      },
                      "props": Object {
                        "bordercolor": "white",
                        "bordersize": "1px",
                        "circular": true,
                        "maxheight": "65px",
                        "maxwidth": "65px",
                        "size": "tiny",
                        "src": "test",
                      },
                      "refs": Object {},
                      "state": Object {
                        "generatedClassName": "irlmET",
                        "theme": Object {},
                      },
                      "unsubscribeId": -1,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseState": Object {
                        "generatedClassName": "irlmET",
                        "theme": Object {},
                      },
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": null,
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": null,
                    },
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <Styled(Image)
                        bordercolor="white"
                        bordersize="1px"
                        circular={true}
                        maxheight="65px"
                        maxwidth="65px"
                        size="tiny"
                        src="test"
                      />,
                      <styled.span
                        color="green"
                      />,
                    ],
                    "className": "sc-chPdSV gWxTLm",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <Styled(Image)
                        bordercolor="white"
                        bordersize="1px"
                        circular={true}
                        maxheight="65px"
                        maxwidth="65px"
                        size="tiny"
                        src="test"
                      />,
                      <styled.span
                        color="green"
                      />,
                    ],
                    "className": "sc-chPdSV gWxTLm",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="sc-chPdSV gWxTLm"
                  >
                    <img
                      bordercolor="white"
                      bordersize="1px"
                      class="ui tiny circular image sc-ifAKCX irlmET"
                      maxheight="65px"
                      maxwidth="65px"
                      src="test"
                    />
                    <span
                      class="sc-kgoBCf gMvtpI"
                      color="green"
                    />
                  </div>,
                  "tag": 7,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 1,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <Styled(Image)
                      bordercolor="white"
                      bordersize="1px"
                      circular={true}
                      maxheight="65px"
                      maxwidth="65px"
                      size="tiny"
                      src="test"
                    />,
                    <styled.span
                      color="green"
                    />,
                  ],
                },
                "memoizedState": Object {
                  "generatedClassName": "gWxTLm",
                  "theme": null,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <Styled(Image)
                      bordercolor="white"
                      bordersize="1px"
                      circular={true}
                      maxheight="65px"
                      maxwidth="65px"
                      size="tiny"
                      src="test"
                    />,
                    <styled.span
                      color="green"
                    />,
                  ],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": FiberNode {
                  "_debugID": 54,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 50,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 49,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 47,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": FiberNode {
                          "_debugID": 47,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": [Circular],
                          "child": null,
                          "childExpirationTime": 1,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="sc-kAzzGY dxEwPq"
                              >
                                <div
                                  class="sc-chPdSV gWxTLm"
                                >
                                  <img
                                    bordercolor="white"
                                    bordersize="1px"
                                    class="ui tiny circular image sc-ifAKCX irlmET"
                                    maxheight="65px"
                                    maxwidth="65px"
                                    src="test"
                                  />
                                  <span
                                    class="sc-kgoBCf gMvtpI"
                                    color="green"
                                  />
                                </div>
                                <div
                                  class="sc-kGXeez dCpFuT"
                                >
                                  <p
                                    class="sc-kpOJdX bxSrEP"
                                  >
                                    test
                                  </p>
                                  <p
                                    class="sc-fjdhpX gAKYZH"
                                  />
                                </div>
                                <p
                                  class="sc-dxgOiQ eGtYgX"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "didError": false,
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "expirationTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "interactionThreadID": 12,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextExpirationTimeToWorkOn": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "timeoutHandle": -1,
                          },
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "tag": 0,
                            },
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "tag": 0,
                            },
                          },
                        },
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              }
                            }
                          />,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                              class="sc-kAzzGY dxEwPq"
                            >
                              <div
                                class="sc-chPdSV gWxTLm"
                              >
                                <img
                                  bordercolor="white"
                                  bordersize="1px"
                                  class="ui tiny circular image sc-ifAKCX irlmET"
                                  maxheight="65px"
                                  maxwidth="65px"
                                  src="test"
                                />
                                <span
                                  class="sc-kgoBCf gMvtpI"
                                  color="green"
                                />
                              </div>
                              <div
                                class="sc-kGXeez dCpFuT"
                              >
                                <p
                                  class="sc-kpOJdX bxSrEP"
                                >
                                  test
                                </p>
                                <p
                                  class="sc-fjdhpX gAKYZH"
                                />
                              </div>
                              <p
                                class="sc-dxgOiQ eGtYgX"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 12,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "timeoutHandle": -1,
                        },
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                }
                              }
                            />,
                          },
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 51,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <styled.div>
                            <Styled(Image)
                              bordercolor="white"
                              bordersize="1px"
                              circular={true}
                              maxheight="65px"
                              maxwidth="65px"
                              size="tiny"
                              src="test"
                            />
                            <styled.span
                              color="green"
                            />
                          </styled.div>,
                          <styled.div>
                            <styled.p>
                              test
                            </styled.p>
                            <styled.p>
                              
                            </styled.p>
                          </styled.div>,
                          <styled.p>
                            
                          </styled.p>,
                        ],
                        "className": "",
                        "onClick": [MockFunction] {
                          "calls": [Circular],
                        },
                      },
                      "memoizedState": Object {
                        "generatedClassName": "dxEwPq",
                        "theme": null,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <styled.div>
                            <Styled(Image)
                              bordercolor="white"
                              bordersize="1px"
                              circular={true}
                              maxheight="65px"
                              maxwidth="65px"
                              size="tiny"
                              src="test"
                            />
                            <styled.span
                              color="green"
                            />
                          </styled.div>,
                          <styled.div>
                            <styled.p>
                              test
                            </styled.p>
                            <styled.p>
                              
                            </styled.p>
                          </styled.div>,
                          <styled.p>
                            
                          </styled.p>,
                        ],
                        "className": "",
                        "onClick": [MockFunction] {
                          "calls": [Circular],
                        },
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": StyledComponent {
                        "__reactInternalMemoizedMaskedChildContext": Object {
                          "__styled-components-stylesheet__": undefined,
                          "__styled-components__": undefined,
                          "__styled-components__next__": undefined,
                        },
                        "__reactInternalMemoizedUnmaskedChildContext": Object {},
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "attrs": Object {},
                        "context": Object {
                          "__styled-components-stylesheet__": undefined,
                          "__styled-components__": undefined,
                          "__styled-components__next__": undefined,
                        },
                        "props": Object {
                          "children": Array [
                            <styled.div>
                              <Styled(Image)
                                bordercolor="white"
                                bordersize="1px"
                                circular={true}
                                maxheight="65px"
                                maxwidth="65px"
                                size="tiny"
                                src="test"
                              />
                              <styled.span
                                color="green"
                              />
                            </styled.div>,
                            <styled.div>
                              <styled.p>
                                test
                              </styled.p>
                              <styled.p>
                                
                              </styled.p>
                            </styled.div>,
                            <styled.p>
                              
                            </styled.p>,
                          ],
                          "className": "",
                          "onClick": [MockFunction] {
                            "calls": [Circular],
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "generatedClassName": "dxEwPq",
                          "theme": null,
                        },
                        "unsubscribeId": -1,
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": Object {
                        "baseState": Object {
                          "generatedClassName": "dxEwPq",
                          "theme": null,
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "childExpirationTime": 0,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "chat": Object {
                        "id": 1,
                        "messages": Array [],
                        "users": Array [
                          Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                          Object {
                            "avatar": "test2",
                            "id": 2,
                            "name": "test2",
                            "status": "Online",
                          },
                        ],
                      },
                      "isActive": "",
                      "onChangeChat": [MockFunction] {
                        "calls": [Circular],
                      },
                      "user": Object {
                        "avatar": "test",
                        "id": 1,
                        "name": "test",
                        "status": "Online",
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "chat": Object {
                        "id": 1,
                        "messages": Array [],
                        "users": Array [
                          Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                          Object {
                            "avatar": "test2",
                            "id": 2,
                            "name": "test2",
                            "status": "Online",
                          },
                        ],
                      },
                      "isActive": "",
                      "onChangeChat": [MockFunction] {
                        "calls": [Circular],
                      },
                      "user": Object {
                        "avatar": "test",
                        "id": 1,
                        "name": "test",
                        "status": "Online",
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 49,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 47,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": FiberNode {
                          "_debugID": 47,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": [Circular],
                          "child": null,
                          "childExpirationTime": 1,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="sc-kAzzGY dxEwPq"
                              >
                                <div
                                  class="sc-chPdSV gWxTLm"
                                >
                                  <img
                                    bordercolor="white"
                                    bordersize="1px"
                                    class="ui tiny circular image sc-ifAKCX irlmET"
                                    maxheight="65px"
                                    maxwidth="65px"
                                    src="test"
                                  />
                                  <span
                                    class="sc-kgoBCf gMvtpI"
                                    color="green"
                                  />
                                </div>
                                <div
                                  class="sc-kGXeez dCpFuT"
                                >
                                  <p
                                    class="sc-kpOJdX bxSrEP"
                                  >
                                    test
                                  </p>
                                  <p
                                    class="sc-fjdhpX gAKYZH"
                                  />
                                </div>
                                <p
                                  class="sc-dxgOiQ eGtYgX"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "didError": false,
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "expirationTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "interactionThreadID": 12,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextExpirationTimeToWorkOn": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "timeoutHandle": -1,
                          },
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "tag": 0,
                            },
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "tag": 0,
                            },
                          },
                        },
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              }
                            }
                          />,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                              class="sc-kAzzGY dxEwPq"
                            >
                              <div
                                class="sc-chPdSV gWxTLm"
                              >
                                <img
                                  bordercolor="white"
                                  bordersize="1px"
                                  class="ui tiny circular image sc-ifAKCX irlmET"
                                  maxheight="65px"
                                  maxwidth="65px"
                                  src="test"
                                />
                                <span
                                  class="sc-kgoBCf gMvtpI"
                                  color="green"
                                />
                              </div>
                              <div
                                class="sc-kGXeez dCpFuT"
                              >
                                <p
                                  class="sc-kpOJdX bxSrEP"
                                >
                                  test
                                </p>
                                <p
                                  class="sc-fjdhpX gAKYZH"
                                />
                              </div>
                              <p
                                class="sc-dxgOiQ eGtYgX"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 12,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "timeoutHandle": -1,
                        },
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                }
                              }
                            />,
                          },
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 0,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 62,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 63,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 50,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 49,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 47,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": [Circular],
                              "child": null,
                              "childExpirationTime": 1,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="sc-kAzzGY dxEwPq"
                                  >
                                    <div
                                      class="sc-chPdSV gWxTLm"
                                    >
                                      <img
                                        bordercolor="white"
                                        bordersize="1px"
                                        class="ui tiny circular image sc-ifAKCX irlmET"
                                        maxheight="65px"
                                        maxwidth="65px"
                                        src="test"
                                      />
                                      <span
                                        class="sc-kgoBCf gMvtpI"
                                        color="green"
                                      />
                                    </div>
                                    <div
                                      class="sc-kGXeez dCpFuT"
                                    >
                                      <p
                                        class="sc-kpOJdX bxSrEP"
                                      >
                                        test
                                      </p>
                                      <p
                                        class="sc-fjdhpX gAKYZH"
                                      />
                                    </div>
                                    <p
                                      class="sc-dxgOiQ eGtYgX"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "chat": Object {
                                            "id": 1,
                                            "messages": Array [],
                                            "users": Array [
                                              Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                              Object {
                                                "avatar": "test2",
                                                "id": 2,
                                                "name": "test2",
                                                "status": "Online",
                                              },
                                            ],
                                          },
                                          "isActive": "",
                                          "onChangeChat": [MockFunction] {
                                            "calls": [Circular],
                                          },
                                          "user": Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                        }
                                      }
                                    />,
                                  },
                                  "tag": 0,
                                },
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "chat": Object {
                                            "id": 1,
                                            "messages": Array [],
                                            "users": Array [
                                              Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                              Object {
                                                "avatar": "test2",
                                                "id": 2,
                                                "name": "test2",
                                                "status": "Online",
                                              },
                                            ],
                                          },
                                          "isActive": "",
                                          "onChangeChat": [MockFunction] {
                                            "calls": [Circular],
                                          },
                                          "user": Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                        }
                                      }
                                    />,
                                  },
                                  "tag": 0,
                                },
                              },
                            },
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="sc-kAzzGY dxEwPq"
                                >
                                  <div
                                    class="sc-chPdSV gWxTLm"
                                  >
                                    <img
                                      bordercolor="white"
                                      bordersize="1px"
                                      class="ui tiny circular image sc-ifAKCX irlmET"
                                      maxheight="65px"
                                      maxwidth="65px"
                                      src="test"
                                    />
                                    <span
                                      class="sc-kgoBCf gMvtpI"
                                      color="green"
                                    />
                                  </div>
                                  <div
                                    class="sc-kGXeez dCpFuT"
                                  >
                                    <p
                                      class="sc-kpOJdX bxSrEP"
                                    >
                                      test
                                    </p>
                                    <p
                                      class="sc-fjdhpX gAKYZH"
                                    />
                                  </div>
                                  <p
                                    class="sc-dxgOiQ eGtYgX"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "didError": false,
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "expirationTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "interactionThreadID": 12,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "memoizedInteractions": Set {},
                              "nextExpirationTimeToWorkOn": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "timeoutHandle": -1,
                            },
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": null,
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": null,
                            },
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 51,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <styled.div>
                                <Styled(Image)
                                  bordercolor="white"
                                  bordersize="1px"
                                  circular={true}
                                  maxheight="65px"
                                  maxwidth="65px"
                                  size="tiny"
                                  src="test"
                                />
                                <styled.span
                                  color="green"
                                />
                              </styled.div>,
                              <styled.div>
                                <styled.p>
                                  test
                                </styled.p>
                                <styled.p>
                                  
                                </styled.p>
                              </styled.div>,
                              <styled.p>
                                
                              </styled.p>,
                            ],
                            "className": "",
                            "onClick": [MockFunction] {
                              "calls": [Circular],
                            },
                          },
                          "memoizedState": Object {
                            "generatedClassName": "dxEwPq",
                            "theme": null,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <styled.div>
                                <Styled(Image)
                                  bordercolor="white"
                                  bordersize="1px"
                                  circular={true}
                                  maxheight="65px"
                                  maxwidth="65px"
                                  size="tiny"
                                  src="test"
                                />
                                <styled.span
                                  color="green"
                                />
                              </styled.div>,
                              <styled.div>
                                <styled.p>
                                  test
                                </styled.p>
                                <styled.p>
                                  
                                </styled.p>
                              </styled.div>,
                              <styled.p>
                                
                              </styled.p>,
                            ],
                            "className": "",
                            "onClick": [MockFunction] {
                              "calls": [Circular],
                            },
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": StyledComponent {
                            "__reactInternalMemoizedMaskedChildContext": Object {
                              "__styled-components-stylesheet__": undefined,
                              "__styled-components__": undefined,
                              "__styled-components__next__": undefined,
                            },
                            "__reactInternalMemoizedUnmaskedChildContext": Object {},
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "attrs": Object {},
                            "context": Object {
                              "__styled-components-stylesheet__": undefined,
                              "__styled-components__": undefined,
                              "__styled-components__next__": undefined,
                            },
                            "props": Object {
                              "children": Array [
                                <styled.div>
                                  <Styled(Image)
                                    bordercolor="white"
                                    bordersize="1px"
                                    circular={true}
                                    maxheight="65px"
                                    maxwidth="65px"
                                    size="tiny"
                                    src="test"
                                  />
                                  <styled.span
                                    color="green"
                                  />
                                </styled.div>,
                                <styled.div>
                                  <styled.p>
                                    test
                                  </styled.p>
                                  <styled.p>
                                    
                                  </styled.p>
                                </styled.div>,
                                <styled.p>
                                  
                                </styled.p>,
                              ],
                              "className": "",
                              "onClick": [MockFunction] {
                                "calls": [Circular],
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "generatedClassName": "dxEwPq",
                              "theme": null,
                            },
                            "unsubscribeId": -1,
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": Object {
                            "baseState": Object {
                              "generatedClassName": "dxEwPq",
                              "theme": null,
                            },
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "childExpirationTime": 0,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 49,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 47,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": [Circular],
                              "child": null,
                              "childExpirationTime": 1,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="sc-kAzzGY dxEwPq"
                                  >
                                    <div
                                      class="sc-chPdSV gWxTLm"
                                    >
                                      <img
                                        bordercolor="white"
                                        bordersize="1px"
                                        class="ui tiny circular image sc-ifAKCX irlmET"
                                        maxheight="65px"
                                        maxwidth="65px"
                                        src="test"
                                      />
                                      <span
                                        class="sc-kgoBCf gMvtpI"
                                        color="green"
                                      />
                                    </div>
                                    <div
                                      class="sc-kGXeez dCpFuT"
                                    >
                                      <p
                                        class="sc-kpOJdX bxSrEP"
                                      >
                                        test
                                      </p>
                                      <p
                                        class="sc-fjdhpX gAKYZH"
                                      />
                                    </div>
                                    <p
                                      class="sc-dxgOiQ eGtYgX"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "chat": Object {
                                            "id": 1,
                                            "messages": Array [],
                                            "users": Array [
                                              Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                              Object {
                                                "avatar": "test2",
                                                "id": 2,
                                                "name": "test2",
                                                "status": "Online",
                                              },
                                            ],
                                          },
                                          "isActive": "",
                                          "onChangeChat": [MockFunction] {
                                            "calls": [Circular],
                                          },
                                          "user": Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                        }
                                      }
                                    />,
                                  },
                                  "tag": 0,
                                },
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "chat": Object {
                                            "id": 1,
                                            "messages": Array [],
                                            "users": Array [
                                              Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                              Object {
                                                "avatar": "test2",
                                                "id": 2,
                                                "name": "test2",
                                                "status": "Online",
                                              },
                                            ],
                                          },
                                          "isActive": "",
                                          "onChangeChat": [MockFunction] {
                                            "calls": [Circular],
                                          },
                                          "user": Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                        }
                                      }
                                    />,
                                  },
                                  "tag": 0,
                                },
                              },
                            },
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="sc-kAzzGY dxEwPq"
                                >
                                  <div
                                    class="sc-chPdSV gWxTLm"
                                  >
                                    <img
                                      bordercolor="white"
                                      bordersize="1px"
                                      class="ui tiny circular image sc-ifAKCX irlmET"
                                      maxheight="65px"
                                      maxwidth="65px"
                                      src="test"
                                    />
                                    <span
                                      class="sc-kgoBCf gMvtpI"
                                      color="green"
                                    />
                                  </div>
                                  <div
                                    class="sc-kGXeez dCpFuT"
                                  >
                                    <p
                                      class="sc-kpOJdX bxSrEP"
                                    >
                                      test
                                    </p>
                                    <p
                                      class="sc-fjdhpX gAKYZH"
                                    />
                                  </div>
                                  <p
                                    class="sc-dxgOiQ eGtYgX"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "didError": false,
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "expirationTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "interactionThreadID": 12,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "memoizedInteractions": Set {},
                              "nextExpirationTimeToWorkOn": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "timeoutHandle": -1,
                            },
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": null,
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": null,
                            },
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 0,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 65,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "test",
                          "className": "sc-kpOJdX bxSrEP",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "test",
                          "className": "sc-kpOJdX bxSrEP",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <p
                          class="sc-kpOJdX bxSrEP"
                        >
                          test
                        </p>,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "p",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "test",
                      },
                      "memoizedState": Object {
                        "generatedClassName": "bxSrEP",
                        "theme": null,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "test",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 64,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 50,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 49,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 1,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                      class="sc-kAzzGY dxEwPq"
                                    >
                                      <div
                                        class="sc-chPdSV gWxTLm"
                                      >
                                        <img
                                          bordercolor="white"
                                          bordersize="1px"
                                          class="ui tiny circular image sc-ifAKCX irlmET"
                                          maxheight="65px"
                                          maxwidth="65px"
                                          src="test"
                                        />
                                        <span
                                          class="sc-kgoBCf gMvtpI"
                                          color="green"
                                        />
                                      </div>
                                      <div
                                        class="sc-kGXeez dCpFuT"
                                      >
                                        <p
                                          class="sc-kpOJdX bxSrEP"
                                        >
                                          test
                                        </p>
                                        <p
                                          class="sc-fjdhpX gAKYZH"
                                        />
                                      </div>
                                      <p
                                        class="sc-dxgOiQ eGtYgX"
                                      />
                                    </div>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "chat": Object {
                                              "id": 1,
                                              "messages": Array [],
                                              "users": Array [
                                                Object {
                                                  "avatar": "test",
                                                  "id": 1,
                                                  "name": "test",
                                                  "status": "Online",
                                                },
                                                Object {
                                                  "avatar": "test2",
                                                  "id": 2,
                                                  "name": "test2",
                                                  "status": "Online",
                                                },
                                              ],
                                            },
                                            "isActive": "",
                                            "onChangeChat": [MockFunction] {
                                              "calls": [Circular],
                                            },
                                            "user": Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "chat": Object {
                                              "id": 1,
                                              "messages": Array [],
                                              "users": Array [
                                                Object {
                                                  "avatar": "test",
                                                  "id": 1,
                                                  "name": "test",
                                                  "status": "Online",
                                                },
                                                Object {
                                                  "avatar": "test2",
                                                  "id": 2,
                                                  "name": "test2",
                                                  "status": "Online",
                                                },
                                              ],
                                            },
                                            "isActive": "",
                                            "onChangeChat": [MockFunction] {
                                              "calls": [Circular],
                                            },
                                            "user": Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="sc-kAzzGY dxEwPq"
                                  >
                                    <div
                                      class="sc-chPdSV gWxTLm"
                                    >
                                      <img
                                        bordercolor="white"
                                        bordersize="1px"
                                        class="ui tiny circular image sc-ifAKCX irlmET"
                                        maxheight="65px"
                                        maxwidth="65px"
                                        src="test"
                                      />
                                      <span
                                        class="sc-kgoBCf gMvtpI"
                                        color="green"
                                      />
                                    </div>
                                    <div
                                      class="sc-kGXeez dCpFuT"
                                    >
                                      <p
                                        class="sc-kpOJdX bxSrEP"
                                      >
                                        test
                                      </p>
                                      <p
                                        class="sc-fjdhpX gAKYZH"
                                      />
                                    </div>
                                    <p
                                      class="sc-dxgOiQ eGtYgX"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 51,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <styled.div>
                                  <Styled(Image)
                                    bordercolor="white"
                                    bordersize="1px"
                                    circular={true}
                                    maxheight="65px"
                                    maxwidth="65px"
                                    size="tiny"
                                    src="test"
                                  />
                                  <styled.span
                                    color="green"
                                  />
                                </styled.div>,
                                <styled.div>
                                  <styled.p>
                                    test
                                  </styled.p>
                                  <styled.p>
                                    
                                  </styled.p>
                                </styled.div>,
                                <styled.p>
                                  
                                </styled.p>,
                              ],
                              "className": "",
                              "onClick": [MockFunction] {
                                "calls": [Circular],
                              },
                            },
                            "memoizedState": Object {
                              "generatedClassName": "dxEwPq",
                              "theme": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <styled.div>
                                  <Styled(Image)
                                    bordercolor="white"
                                    bordersize="1px"
                                    circular={true}
                                    maxheight="65px"
                                    maxwidth="65px"
                                    size="tiny"
                                    src="test"
                                  />
                                  <styled.span
                                    color="green"
                                  />
                                </styled.div>,
                                <styled.div>
                                  <styled.p>
                                    test
                                  </styled.p>
                                  <styled.p>
                                    
                                  </styled.p>
                                </styled.div>,
                                <styled.p>
                                  
                                </styled.p>,
                              ],
                              "className": "",
                              "onClick": [MockFunction] {
                                "calls": [Circular],
                              },
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": StyledComponent {
                              "__reactInternalMemoizedMaskedChildContext": Object {
                                "__styled-components-stylesheet__": undefined,
                                "__styled-components__": undefined,
                                "__styled-components__next__": undefined,
                              },
                              "__reactInternalMemoizedUnmaskedChildContext": Object {},
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "attrs": Object {},
                              "context": Object {
                                "__styled-components-stylesheet__": undefined,
                                "__styled-components__": undefined,
                                "__styled-components__next__": undefined,
                              },
                              "props": Object {
                                "children": Array [
                                  <styled.div>
                                    <Styled(Image)
                                      bordercolor="white"
                                      bordersize="1px"
                                      circular={true}
                                      maxheight="65px"
                                      maxwidth="65px"
                                      size="tiny"
                                      src="test"
                                    />
                                    <styled.span
                                      color="green"
                                    />
                                  </styled.div>,
                                  <styled.div>
                                    <styled.p>
                                      test
                                    </styled.p>
                                    <styled.p>
                                      
                                    </styled.p>
                                  </styled.div>,
                                  <styled.p>
                                    
                                  </styled.p>,
                                ],
                                "className": "",
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "generatedClassName": "dxEwPq",
                                "theme": null,
                              },
                              "unsubscribeId": -1,
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": Object {
                              "baseState": Object {
                                "generatedClassName": "dxEwPq",
                                "theme": null,
                              },
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": null,
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": null,
                            },
                          },
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 49,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 1,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                      class="sc-kAzzGY dxEwPq"
                                    >
                                      <div
                                        class="sc-chPdSV gWxTLm"
                                      >
                                        <img
                                          bordercolor="white"
                                          bordersize="1px"
                                          class="ui tiny circular image sc-ifAKCX irlmET"
                                          maxheight="65px"
                                          maxwidth="65px"
                                          src="test"
                                        />
                                        <span
                                          class="sc-kgoBCf gMvtpI"
                                          color="green"
                                        />
                                      </div>
                                      <div
                                        class="sc-kGXeez dCpFuT"
                                      >
                                        <p
                                          class="sc-kpOJdX bxSrEP"
                                        >
                                          test
                                        </p>
                                        <p
                                          class="sc-fjdhpX gAKYZH"
                                        />
                                      </div>
                                      <p
                                        class="sc-dxgOiQ eGtYgX"
                                      />
                                    </div>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "chat": Object {
                                              "id": 1,
                                              "messages": Array [],
                                              "users": Array [
                                                Object {
                                                  "avatar": "test",
                                                  "id": 1,
                                                  "name": "test",
                                                  "status": "Online",
                                                },
                                                Object {
                                                  "avatar": "test2",
                                                  "id": 2,
                                                  "name": "test2",
                                                  "status": "Online",
                                                },
                                              ],
                                            },
                                            "isActive": "",
                                            "onChangeChat": [MockFunction] {
                                              "calls": [Circular],
                                            },
                                            "user": Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "chat": Object {
                                              "id": 1,
                                              "messages": Array [],
                                              "users": Array [
                                                Object {
                                                  "avatar": "test",
                                                  "id": 1,
                                                  "name": "test",
                                                  "status": "Online",
                                                },
                                                Object {
                                                  "avatar": "test2",
                                                  "id": 2,
                                                  "name": "test2",
                                                  "status": "Online",
                                                },
                                              ],
                                            },
                                            "isActive": "",
                                            "onChangeChat": [MockFunction] {
                                              "calls": [Circular],
                                            },
                                            "user": Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="sc-kAzzGY dxEwPq"
                                  >
                                    <div
                                      class="sc-chPdSV gWxTLm"
                                    >
                                      <img
                                        bordercolor="white"
                                        bordersize="1px"
                                        class="ui tiny circular image sc-ifAKCX irlmET"
                                        maxheight="65px"
                                        maxwidth="65px"
                                        src="test"
                                      />
                                      <span
                                        class="sc-kgoBCf gMvtpI"
                                        color="green"
                                      />
                                    </div>
                                    <div
                                      class="sc-kGXeez dCpFuT"
                                    >
                                      <p
                                        class="sc-kpOJdX bxSrEP"
                                      >
                                        test
                                      </p>
                                      <p
                                        class="sc-fjdhpX gAKYZH"
                                      />
                                    </div>
                                    <p
                                      class="sc-dxgOiQ eGtYgX"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 66,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "",
                            "className": "sc-fjdhpX gAKYZH",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "",
                            "className": "sc-fjdhpX gAKYZH",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <p
                            class="sc-fjdhpX gAKYZH"
                          />,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "p",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "",
                        },
                        "memoizedState": Object {
                          "generatedClassName": "gAKYZH",
                          "theme": null,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": StyledComponent {
                          "__reactInternalMemoizedMaskedChildContext": Object {
                            "__styled-components-stylesheet__": undefined,
                            "__styled-components__": undefined,
                            "__styled-components__next__": undefined,
                          },
                          "__reactInternalMemoizedUnmaskedChildContext": Object {},
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "attrs": Object {},
                          "context": Object {
                            "__styled-components-stylesheet__": undefined,
                            "__styled-components__": undefined,
                            "__styled-components__next__": undefined,
                          },
                          "props": Object {
                            "children": "",
                          },
                          "refs": Object {},
                          "state": Object {
                            "generatedClassName": "gAKYZH",
                            "theme": null,
                          },
                          "unsubscribeId": -1,
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": Object {
                          "baseState": Object {
                            "generatedClassName": "gAKYZH",
                            "theme": null,
                          },
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "stateNode": StyledComponent {
                        "__reactInternalMemoizedMaskedChildContext": Object {
                          "__styled-components-stylesheet__": undefined,
                          "__styled-components__": undefined,
                          "__styled-components__next__": undefined,
                        },
                        "__reactInternalMemoizedUnmaskedChildContext": Object {},
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "attrs": Object {},
                        "context": Object {
                          "__styled-components-stylesheet__": undefined,
                          "__styled-components__": undefined,
                          "__styled-components__next__": undefined,
                        },
                        "props": Object {
                          "children": "test",
                        },
                        "refs": Object {},
                        "state": Object {
                          "generatedClassName": "bxSrEP",
                          "theme": null,
                        },
                        "unsubscribeId": -1,
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": Object {
                        "baseState": Object {
                          "generatedClassName": "bxSrEP",
                          "theme": null,
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <styled.p>
                          test
                        </styled.p>,
                        <styled.p>
                          
                        </styled.p>,
                      ],
                      "className": "sc-kGXeez dCpFuT",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <styled.p>
                          test
                        </styled.p>,
                        <styled.p>
                          
                        </styled.p>,
                      ],
                      "className": "sc-kGXeez dCpFuT",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="sc-kGXeez dCpFuT"
                    >
                      <p
                        class="sc-kpOJdX bxSrEP"
                      >
                        test
                      </p>
                      <p
                        class="sc-fjdhpX gAKYZH"
                      />
                    </div>,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <styled.p>
                        test
                      </styled.p>,
                      <styled.p>
                        
                      </styled.p>,
                    ],
                  },
                  "memoizedState": Object {
                    "generatedClassName": "dCpFuT",
                    "theme": null,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <styled.p>
                        test
                      </styled.p>,
                      <styled.p>
                        
                      </styled.p>,
                    ],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 55,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 50,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 49,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 47,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugID": 47,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childExpirationTime": 1,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="sc-kAzzGY dxEwPq"
                                >
                                  <div
                                    class="sc-chPdSV gWxTLm"
                                  >
                                    <img
                                      bordercolor="white"
                                      bordersize="1px"
                                      class="ui tiny circular image sc-ifAKCX irlmET"
                                      maxheight="65px"
                                      maxwidth="65px"
                                      src="test"
                                    />
                                    <span
                                      class="sc-kgoBCf gMvtpI"
                                      color="green"
                                    />
                                  </div>
                                  <div
                                    class="sc-kGXeez dCpFuT"
                                  >
                                    <p
                                      class="sc-kpOJdX bxSrEP"
                                    >
                                      test
                                    </p>
                                    <p
                                      class="sc-fjdhpX gAKYZH"
                                    />
                                  </div>
                                  <p
                                    class="sc-dxgOiQ eGtYgX"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "didError": false,
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "expirationTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "interactionThreadID": 12,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "memoizedInteractions": Set {},
                              "nextExpirationTimeToWorkOn": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "timeoutHandle": -1,
                            },
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "tag": 0,
                              },
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "tag": 0,
                              },
                            },
                          },
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                }
                              }
                            />,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="sc-kAzzGY dxEwPq"
                              >
                                <div
                                  class="sc-chPdSV gWxTLm"
                                >
                                  <img
                                    bordercolor="white"
                                    bordersize="1px"
                                    class="ui tiny circular image sc-ifAKCX irlmET"
                                    maxheight="65px"
                                    maxwidth="65px"
                                    src="test"
                                  />
                                  <span
                                    class="sc-kgoBCf gMvtpI"
                                    color="green"
                                  />
                                </div>
                                <div
                                  class="sc-kGXeez dCpFuT"
                                >
                                  <p
                                    class="sc-kpOJdX bxSrEP"
                                  >
                                    test
                                  </p>
                                  <p
                                    class="sc-fjdhpX gAKYZH"
                                  />
                                </div>
                                <p
                                  class="sc-dxgOiQ eGtYgX"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "didError": false,
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "expirationTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "interactionThreadID": 12,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextExpirationTimeToWorkOn": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "timeoutHandle": -1,
                          },
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 51,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <styled.div>
                              <Styled(Image)
                                bordercolor="white"
                                bordersize="1px"
                                circular={true}
                                maxheight="65px"
                                maxwidth="65px"
                                size="tiny"
                                src="test"
                              />
                              <styled.span
                                color="green"
                              />
                            </styled.div>,
                            <styled.div>
                              <styled.p>
                                test
                              </styled.p>
                              <styled.p>
                                
                              </styled.p>
                            </styled.div>,
                            <styled.p>
                              
                            </styled.p>,
                          ],
                          "className": "",
                          "onClick": [MockFunction] {
                            "calls": [Circular],
                          },
                        },
                        "memoizedState": Object {
                          "generatedClassName": "dxEwPq",
                          "theme": null,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <styled.div>
                              <Styled(Image)
                                bordercolor="white"
                                bordersize="1px"
                                circular={true}
                                maxheight="65px"
                                maxwidth="65px"
                                size="tiny"
                                src="test"
                              />
                              <styled.span
                                color="green"
                              />
                            </styled.div>,
                            <styled.div>
                              <styled.p>
                                test
                              </styled.p>
                              <styled.p>
                                
                              </styled.p>
                            </styled.div>,
                            <styled.p>
                              
                            </styled.p>,
                          ],
                          "className": "",
                          "onClick": [MockFunction] {
                            "calls": [Circular],
                          },
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": StyledComponent {
                          "__reactInternalMemoizedMaskedChildContext": Object {
                            "__styled-components-stylesheet__": undefined,
                            "__styled-components__": undefined,
                            "__styled-components__next__": undefined,
                          },
                          "__reactInternalMemoizedUnmaskedChildContext": Object {},
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "attrs": Object {},
                          "context": Object {
                            "__styled-components-stylesheet__": undefined,
                            "__styled-components__": undefined,
                            "__styled-components__next__": undefined,
                          },
                          "props": Object {
                            "children": Array [
                              <styled.div>
                                <Styled(Image)
                                  bordercolor="white"
                                  bordersize="1px"
                                  circular={true}
                                  maxheight="65px"
                                  maxwidth="65px"
                                  size="tiny"
                                  src="test"
                                />
                                <styled.span
                                  color="green"
                                />
                              </styled.div>,
                              <styled.div>
                                <styled.p>
                                  test
                                </styled.p>
                                <styled.p>
                                  
                                </styled.p>
                              </styled.div>,
                              <styled.p>
                                
                              </styled.p>,
                            ],
                            "className": "",
                            "onClick": [MockFunction] {
                              "calls": [Circular],
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "generatedClassName": "dxEwPq",
                            "theme": null,
                          },
                          "unsubscribeId": -1,
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": Object {
                          "baseState": Object {
                            "generatedClassName": "dxEwPq",
                            "theme": null,
                          },
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "childExpirationTime": 0,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 49,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 47,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugID": 47,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childExpirationTime": 1,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="sc-kAzzGY dxEwPq"
                                >
                                  <div
                                    class="sc-chPdSV gWxTLm"
                                  >
                                    <img
                                      bordercolor="white"
                                      bordersize="1px"
                                      class="ui tiny circular image sc-ifAKCX irlmET"
                                      maxheight="65px"
                                      maxwidth="65px"
                                      src="test"
                                    />
                                    <span
                                      class="sc-kgoBCf gMvtpI"
                                      color="green"
                                    />
                                  </div>
                                  <div
                                    class="sc-kGXeez dCpFuT"
                                  >
                                    <p
                                      class="sc-kpOJdX bxSrEP"
                                    >
                                      test
                                    </p>
                                    <p
                                      class="sc-fjdhpX gAKYZH"
                                    />
                                  </div>
                                  <p
                                    class="sc-dxgOiQ eGtYgX"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "didError": false,
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "expirationTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "interactionThreadID": 12,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "memoizedInteractions": Set {},
                              "nextExpirationTimeToWorkOn": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "timeoutHandle": -1,
                            },
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "tag": 0,
                              },
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "tag": 0,
                              },
                            },
                          },
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                }
                              }
                            />,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="sc-kAzzGY dxEwPq"
                              >
                                <div
                                  class="sc-chPdSV gWxTLm"
                                >
                                  <img
                                    bordercolor="white"
                                    bordersize="1px"
                                    class="ui tiny circular image sc-ifAKCX irlmET"
                                    maxheight="65px"
                                    maxwidth="65px"
                                    src="test"
                                  />
                                  <span
                                    class="sc-kgoBCf gMvtpI"
                                    color="green"
                                  />
                                </div>
                                <div
                                  class="sc-kGXeez dCpFuT"
                                >
                                  <p
                                    class="sc-kpOJdX bxSrEP"
                                  >
                                    test
                                  </p>
                                  <p
                                    class="sc-fjdhpX gAKYZH"
                                  />
                                </div>
                                <p
                                  class="sc-dxgOiQ eGtYgX"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "didError": false,
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "expirationTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "interactionThreadID": 12,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextExpirationTimeToWorkOn": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "timeoutHandle": -1,
                          },
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 67,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "",
                        "className": "sc-dxgOiQ eGtYgX",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "",
                        "className": "sc-dxgOiQ eGtYgX",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <p
                        class="sc-dxgOiQ eGtYgX"
                      />,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "p",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 2,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "",
                    },
                    "memoizedState": Object {
                      "generatedClassName": "eGtYgX",
                      "theme": null,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": StyledComponent {
                      "__reactInternalMemoizedMaskedChildContext": Object {
                        "__styled-components-stylesheet__": undefined,
                        "__styled-components__": undefined,
                        "__styled-components__next__": undefined,
                      },
                      "__reactInternalMemoizedUnmaskedChildContext": Object {},
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "attrs": Object {},
                      "context": Object {
                        "__styled-components-stylesheet__": undefined,
                        "__styled-components__": undefined,
                        "__styled-components__next__": undefined,
                      },
                      "props": Object {
                        "children": "",
                      },
                      "refs": Object {},
                      "state": Object {
                        "generatedClassName": "eGtYgX",
                        "theme": null,
                      },
                      "unsubscribeId": -1,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseState": Object {
                        "generatedClassName": "eGtYgX",
                        "theme": null,
                      },
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": null,
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": null,
                    },
                  },
                  "stateNode": StyledComponent {
                    "__reactInternalMemoizedMaskedChildContext": Object {
                      "__styled-components-stylesheet__": undefined,
                      "__styled-components__": undefined,
                      "__styled-components__next__": undefined,
                    },
                    "__reactInternalMemoizedUnmaskedChildContext": Object {},
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "attrs": Object {},
                    "context": Object {
                      "__styled-components-stylesheet__": undefined,
                      "__styled-components__": undefined,
                      "__styled-components__next__": undefined,
                    },
                    "props": Object {
                      "children": Array [
                        <styled.p>
                          test
                        </styled.p>,
                        <styled.p>
                          
                        </styled.p>,
                      ],
                    },
                    "refs": Object {},
                    "state": Object {
                      "generatedClassName": "dCpFuT",
                      "theme": null,
                    },
                    "unsubscribeId": -1,
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "baseState": Object {
                      "generatedClassName": "dCpFuT",
                      "theme": null,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "stateNode": StyledComponent {
                  "__reactInternalMemoizedMaskedChildContext": Object {
                    "__styled-components-stylesheet__": undefined,
                    "__styled-components__": undefined,
                    "__styled-components__next__": undefined,
                  },
                  "__reactInternalMemoizedUnmaskedChildContext": Object {},
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "attrs": Object {},
                  "context": Object {
                    "__styled-components-stylesheet__": undefined,
                    "__styled-components__": undefined,
                    "__styled-components__next__": undefined,
                  },
                  "props": Object {
                    "children": Array [
                      <Styled(Image)
                        bordercolor="white"
                        bordersize="1px"
                        circular={true}
                        maxheight="65px"
                        maxwidth="65px"
                        size="tiny"
                        src="test"
                      />,
                      <styled.span
                        color="green"
                      />,
                    ],
                  },
                  "refs": Object {},
                  "state": Object {
                    "generatedClassName": "gWxTLm",
                    "theme": null,
                  },
                  "unsubscribeId": -1,
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseState": Object {
                    "generatedClassName": "gWxTLm",
                    "theme": null,
                  },
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "childExpirationTime": 0,
              "effectTag": 0,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <styled.div>
                    <Styled(Image)
                      bordercolor="white"
                      bordersize="1px"
                      circular={true}
                      maxheight="65px"
                      maxwidth="65px"
                      size="tiny"
                      src="test"
                    />
                    <styled.span
                      color="green"
                    />
                  </styled.div>,
                  <styled.div>
                    <styled.p>
                      test
                    </styled.p>
                    <styled.p>
                      
                    </styled.p>
                  </styled.div>,
                  <styled.p>
                    
                  </styled.p>,
                ],
                "className": "sc-kAzzGY dxEwPq",
                "onClick": [MockFunction] {
                  "calls": [Circular],
                },
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <styled.div>
                    <Styled(Image)
                      bordercolor="white"
                      bordersize="1px"
                      circular={true}
                      maxheight="65px"
                      maxwidth="65px"
                      size="tiny"
                      src="test"
                    />
                    <styled.span
                      color="green"
                    />
                  </styled.div>,
                  <styled.div>
                    <styled.p>
                      test
                    </styled.p>
                    <styled.p>
                      
                    </styled.p>
                  </styled.div>,
                  <styled.p>
                    
                  </styled.p>,
                ],
                "className": "sc-kAzzGY dxEwPq",
                "onClick": [MockFunction] {
                  "calls": [Circular],
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 51,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 50,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 49,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 47,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugID": 47,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 1,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                              class="sc-kAzzGY dxEwPq"
                            >
                              <div
                                class="sc-chPdSV gWxTLm"
                              >
                                <img
                                  bordercolor="white"
                                  bordersize="1px"
                                  class="ui tiny circular image sc-ifAKCX irlmET"
                                  maxheight="65px"
                                  maxwidth="65px"
                                  src="test"
                                />
                                <span
                                  class="sc-kgoBCf gMvtpI"
                                  color="green"
                                />
                              </div>
                              <div
                                class="sc-kGXeez dCpFuT"
                              >
                                <p
                                  class="sc-kpOJdX bxSrEP"
                                >
                                  test
                                </p>
                                <p
                                  class="sc-fjdhpX gAKYZH"
                                />
                              </div>
                              <p
                                class="sc-dxgOiQ eGtYgX"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 12,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "timeoutHandle": -1,
                        },
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 32,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            }
                          }
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                            class="sc-kAzzGY dxEwPq"
                          >
                            <div
                              class="sc-chPdSV gWxTLm"
                            >
                              <img
                                bordercolor="white"
                                bordersize="1px"
                                class="ui tiny circular image sc-ifAKCX irlmET"
                                maxheight="65px"
                                maxwidth="65px"
                                src="test"
                              />
                              <span
                                class="sc-kgoBCf gMvtpI"
                                color="green"
                              />
                            </div>
                            <div
                              class="sc-kGXeez dCpFuT"
                            >
                              <p
                                class="sc-kpOJdX bxSrEP"
                              >
                                test
                              </p>
                              <p
                                class="sc-fjdhpX gAKYZH"
                              />
                            </div>
                            <p
                              class="sc-dxgOiQ eGtYgX"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 12,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "timeoutHandle": -1,
                      },
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              }
                            }
                          />,
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "chat": Object {
                      "id": 1,
                      "messages": Array [],
                      "users": Array [
                        Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                        Object {
                          "avatar": "test2",
                          "id": 2,
                          "name": "test2",
                          "status": "Online",
                        },
                      ],
                    },
                    "isActive": "",
                    "onChangeChat": [MockFunction] {
                      "calls": [Circular],
                    },
                    "user": Object {
                      "avatar": "test",
                      "id": 1,
                      "name": "test",
                      "status": "Online",
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "chat": Object {
                      "id": 1,
                      "messages": Array [],
                      "users": Array [
                        Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                        Object {
                          "avatar": "test2",
                          "id": 2,
                          "name": "test2",
                          "status": "Online",
                        },
                      ],
                    },
                    "isActive": "",
                    "onChangeChat": [MockFunction] {
                      "calls": [Circular],
                    },
                    "user": Object {
                      "avatar": "test",
                      "id": 1,
                      "name": "test",
                      "status": "Online",
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 49,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 47,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugID": 47,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 1,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                              class="sc-kAzzGY dxEwPq"
                            >
                              <div
                                class="sc-chPdSV gWxTLm"
                              >
                                <img
                                  bordercolor="white"
                                  bordersize="1px"
                                  class="ui tiny circular image sc-ifAKCX irlmET"
                                  maxheight="65px"
                                  maxwidth="65px"
                                  src="test"
                                />
                                <span
                                  class="sc-kgoBCf gMvtpI"
                                  color="green"
                                />
                              </div>
                              <div
                                class="sc-kGXeez dCpFuT"
                              >
                                <p
                                  class="sc-kpOJdX bxSrEP"
                                >
                                  test
                                </p>
                                <p
                                  class="sc-fjdhpX gAKYZH"
                                />
                              </div>
                              <p
                                class="sc-dxgOiQ eGtYgX"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 12,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "timeoutHandle": -1,
                        },
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 32,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            }
                          }
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                            class="sc-kAzzGY dxEwPq"
                          >
                            <div
                              class="sc-chPdSV gWxTLm"
                            >
                              <img
                                bordercolor="white"
                                bordersize="1px"
                                class="ui tiny circular image sc-ifAKCX irlmET"
                                maxheight="65px"
                                maxwidth="65px"
                                src="test"
                              />
                              <span
                                class="sc-kgoBCf gMvtpI"
                                color="green"
                              />
                            </div>
                            <div
                              class="sc-kGXeez dCpFuT"
                            >
                              <p
                                class="sc-kpOJdX bxSrEP"
                              >
                                test
                              </p>
                              <p
                                class="sc-fjdhpX gAKYZH"
                              />
                            </div>
                            <p
                              class="sc-dxgOiQ eGtYgX"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 12,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "timeoutHandle": -1,
                      },
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              }
                            }
                          />,
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 0,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "effectTag": 1,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <styled.div>
                      <Styled(Image)
                        bordercolor="white"
                        bordersize="1px"
                        circular={true}
                        maxheight="65px"
                        maxwidth="65px"
                        size="tiny"
                        src="test"
                      />
                      <styled.span
                        color="green"
                      />
                    </styled.div>,
                    <styled.div>
                      <styled.p>
                        test
                      </styled.p>
                      <styled.p>
                        
                      </styled.p>
                    </styled.div>,
                    <styled.p>
                      
                    </styled.p>,
                  ],
                  "className": "",
                  "onClick": [MockFunction] {
                    "calls": [Circular],
                  },
                },
                "memoizedState": Object {
                  "generatedClassName": "dxEwPq",
                  "theme": null,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <styled.div>
                      <Styled(Image)
                        bordercolor="white"
                        bordersize="1px"
                        circular={true}
                        maxheight="65px"
                        maxwidth="65px"
                        size="tiny"
                        src="test"
                      />
                      <styled.span
                        color="green"
                      />
                    </styled.div>,
                    <styled.div>
                      <styled.p>
                        test
                      </styled.p>
                      <styled.p>
                        
                      </styled.p>
                    </styled.div>,
                    <styled.p>
                      
                    </styled.p>,
                  ],
                  "className": "",
                  "onClick": [MockFunction] {
                    "calls": [Circular],
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 50,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 49,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 47,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugID": 47,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 1,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                              class="sc-kAzzGY dxEwPq"
                            >
                              <div
                                class="sc-chPdSV gWxTLm"
                              >
                                <img
                                  bordercolor="white"
                                  bordersize="1px"
                                  class="ui tiny circular image sc-ifAKCX irlmET"
                                  maxheight="65px"
                                  maxwidth="65px"
                                  src="test"
                                />
                                <span
                                  class="sc-kgoBCf gMvtpI"
                                  color="green"
                                />
                              </div>
                              <div
                                class="sc-kGXeez dCpFuT"
                              >
                                <p
                                  class="sc-kpOJdX bxSrEP"
                                >
                                  test
                                </p>
                                <p
                                  class="sc-fjdhpX gAKYZH"
                                />
                              </div>
                              <p
                                class="sc-dxgOiQ eGtYgX"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 12,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "timeoutHandle": -1,
                        },
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 32,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            }
                          }
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                            class="sc-kAzzGY dxEwPq"
                          >
                            <div
                              class="sc-chPdSV gWxTLm"
                            >
                              <img
                                bordercolor="white"
                                bordersize="1px"
                                class="ui tiny circular image sc-ifAKCX irlmET"
                                maxheight="65px"
                                maxwidth="65px"
                                src="test"
                              />
                              <span
                                class="sc-kgoBCf gMvtpI"
                                color="green"
                              />
                            </div>
                            <div
                              class="sc-kGXeez dCpFuT"
                            >
                              <p
                                class="sc-kpOJdX bxSrEP"
                              >
                                test
                              </p>
                              <p
                                class="sc-fjdhpX gAKYZH"
                              />
                            </div>
                            <p
                              class="sc-dxgOiQ eGtYgX"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 12,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "timeoutHandle": -1,
                      },
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              }
                            }
                          />,
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "chat": Object {
                      "id": 1,
                      "messages": Array [],
                      "users": Array [
                        Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                        Object {
                          "avatar": "test2",
                          "id": 2,
                          "name": "test2",
                          "status": "Online",
                        },
                      ],
                    },
                    "isActive": "",
                    "onChangeChat": [MockFunction] {
                      "calls": [Circular],
                    },
                    "user": Object {
                      "avatar": "test",
                      "id": 1,
                      "name": "test",
                      "status": "Online",
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "chat": Object {
                      "id": 1,
                      "messages": Array [],
                      "users": Array [
                        Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                        Object {
                          "avatar": "test2",
                          "id": 2,
                          "name": "test2",
                          "status": "Online",
                        },
                      ],
                    },
                    "isActive": "",
                    "onChangeChat": [MockFunction] {
                      "calls": [Circular],
                    },
                    "user": Object {
                      "avatar": "test",
                      "id": 1,
                      "name": "test",
                      "status": "Online",
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 49,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 47,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugID": 47,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 1,
                        "effectTag": 0,
                        "expirationTime": 1,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                              class="sc-kAzzGY dxEwPq"
                            >
                              <div
                                class="sc-chPdSV gWxTLm"
                              >
                                <img
                                  bordercolor="white"
                                  bordersize="1px"
                                  class="ui tiny circular image sc-ifAKCX irlmET"
                                  maxheight="65px"
                                  maxwidth="65px"
                                  src="test"
                                />
                                <span
                                  class="sc-kgoBCf gMvtpI"
                                  color="green"
                                />
                              </div>
                              <div
                                class="sc-kGXeez dCpFuT"
                              >
                                <p
                                  class="sc-kpOJdX bxSrEP"
                                >
                                  test
                                </p>
                                <p
                                  class="sc-fjdhpX gAKYZH"
                                />
                              </div>
                              <p
                                class="sc-dxgOiQ eGtYgX"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 12,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "timeoutHandle": -1,
                        },
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 32,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            }
                          }
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <div
                            class="sc-kAzzGY dxEwPq"
                          >
                            <div
                              class="sc-chPdSV gWxTLm"
                            >
                              <img
                                bordercolor="white"
                                bordersize="1px"
                                class="ui tiny circular image sc-ifAKCX irlmET"
                                maxheight="65px"
                                maxwidth="65px"
                                src="test"
                              />
                              <span
                                class="sc-kgoBCf gMvtpI"
                                color="green"
                              />
                            </div>
                            <div
                              class="sc-kGXeez dCpFuT"
                            >
                              <p
                                class="sc-kpOJdX bxSrEP"
                              >
                                test
                              </p>
                              <p
                                class="sc-fjdhpX gAKYZH"
                              />
                            </div>
                            <p
                              class="sc-dxgOiQ eGtYgX"
                            />
                          </div>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "didError": false,
                        "earliestPendingTime": 0,
                        "earliestSuspendedTime": 0,
                        "expirationTime": 0,
                        "finishedWork": null,
                        "firstBatch": null,
                        "hydrate": false,
                        "interactionThreadID": 12,
                        "latestPendingTime": 0,
                        "latestPingedTime": 0,
                        "latestSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextExpirationTimeToWorkOn": 0,
                        "nextScheduledRoot": null,
                        "pendingChildren": null,
                        "pendingCommitExpirationTime": 0,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "timeoutHandle": -1,
                      },
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              }
                            }
                          />,
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 0,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": StyledComponent {
                  "__reactInternalMemoizedMaskedChildContext": Object {
                    "__styled-components-stylesheet__": undefined,
                    "__styled-components__": undefined,
                    "__styled-components__next__": undefined,
                  },
                  "__reactInternalMemoizedUnmaskedChildContext": Object {},
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "attrs": Object {},
                  "context": Object {
                    "__styled-components-stylesheet__": undefined,
                    "__styled-components__": undefined,
                    "__styled-components__next__": undefined,
                  },
                  "props": Object {
                    "children": Array [
                      <styled.div>
                        <Styled(Image)
                          bordercolor="white"
                          bordersize="1px"
                          circular={true}
                          maxheight="65px"
                          maxwidth="65px"
                          size="tiny"
                          src="test"
                        />
                        <styled.span
                          color="green"
                        />
                      </styled.div>,
                      <styled.div>
                        <styled.p>
                          test
                        </styled.p>
                        <styled.p>
                          
                        </styled.p>
                      </styled.div>,
                      <styled.p>
                        
                      </styled.p>,
                    ],
                    "className": "",
                    "onClick": [MockFunction] {
                      "calls": [Circular],
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "generatedClassName": "dxEwPq",
                    "theme": null,
                  },
                  "unsubscribeId": -1,
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseState": Object {
                    "generatedClassName": "dxEwPq",
                    "theme": null,
                  },
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": null,
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": null,
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <div
                class="sc-kAzzGY dxEwPq"
              >
                <div
                  class="sc-chPdSV gWxTLm"
                >
                  <img
                    bordercolor="white"
                    bordersize="1px"
                    class="ui tiny circular image sc-ifAKCX irlmET"
                    maxheight="65px"
                    maxwidth="65px"
                    src="test"
                  />
                  <span
                    class="sc-kgoBCf gMvtpI"
                    color="green"
                  />
                </div>
                <div
                  class="sc-kGXeez dCpFuT"
                >
                  <p
                    class="sc-kpOJdX bxSrEP"
                  >
                    test
                  </p>
                  <p
                    class="sc-fjdhpX gAKYZH"
                  />
                </div>
                <p
                  class="sc-dxgOiQ eGtYgX"
                />
              </div>,
              "tag": 7,
              "treeBaseDuration": 0,
              "type": "div",
              "updateQueue": null,
            },
            "bubbles": undefined,
            "cancelable": undefined,
            "currentTarget": null,
            "defaultPrevented": undefined,
            "dispatchConfig": Object {
              "dependencies": Array [
                "click",
              ],
              "isInteractive": true,
              "phasedRegistrationNames": Object {
                "bubbled": "onClick",
                "captured": "onClickCapture",
              },
            },
            "eventPhase": undefined,
            "isDefaultPrevented": [Function],
            "isPersistent": [Function],
            "isPropagationStopped": [Function],
            "isTrusted": undefined,
            "nativeEvent": Event {
              "target": <div
                class="sc-kAzzGY dxEwPq"
              >
                <div
                  class="sc-chPdSV gWxTLm"
                >
                  <img
                    bordercolor="white"
                    bordersize="1px"
                    class="ui tiny circular image sc-ifAKCX irlmET"
                    maxheight="65px"
                    maxwidth="65px"
                    src="test"
                  />
                  <span
                    class="sc-kgoBCf gMvtpI"
                    color="green"
                  />
                </div>
                <div
                  class="sc-kGXeez dCpFuT"
                >
                  <p
                    class="sc-kpOJdX bxSrEP"
                  >
                    test
                  </p>
                  <p
                    class="sc-fjdhpX gAKYZH"
                  />
                </div>
                <p
                  class="sc-dxgOiQ eGtYgX"
                />
              </div>,
              "type": "click",
            },
            "target": <div
              class="sc-kAzzGY dxEwPq"
            >
              <div
                class="sc-chPdSV gWxTLm"
              >
                <img
                  bordercolor="white"
                  bordersize="1px"
                  class="ui tiny circular image sc-ifAKCX irlmET"
                  maxheight="65px"
                  maxwidth="65px"
                  src="test"
                />
                <span
                  class="sc-kgoBCf gMvtpI"
                  color="green"
                />
              </div>
              <div
                class="sc-kGXeez dCpFuT"
              >
                <p
                  class="sc-kpOJdX bxSrEP"
                >
                  test
                </p>
                <p
                  class="sc-fjdhpX gAKYZH"
                />
              </div>
              <p
                class="sc-dxgOiQ eGtYgX"
              />
            </div>,
            "timeStamp": 2018-11-09T21:00:00.000Z,
            "type": "click",
          },
        ],
      ],
    }
  }
  user={
    Object {
      "avatar": "test",
      "id": 1,
      "name": "test",
      "status": "Online",
    }
  }
>
  <styled.div
    className=""
    onClick={
      [MockFunction] {
        "calls": Array [
          Array [
            SyntheticEvent {
              "_dispatchInstances": null,
              "_dispatchListeners": null,
              "_targetInst": FiberNode {
                "_debugID": 52,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 51,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 50,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 49,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 47,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": FiberNode {
                          "_debugID": 47,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": [Circular],
                          "child": null,
                          "childExpirationTime": 1,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="sc-kAzzGY dxEwPq"
                              >
                                <div
                                  class="sc-chPdSV gWxTLm"
                                >
                                  <img
                                    bordercolor="white"
                                    bordersize="1px"
                                    class="ui tiny circular image sc-ifAKCX irlmET"
                                    maxheight="65px"
                                    maxwidth="65px"
                                    src="test"
                                  />
                                  <span
                                    class="sc-kgoBCf gMvtpI"
                                    color="green"
                                  />
                                </div>
                                <div
                                  class="sc-kGXeez dCpFuT"
                                >
                                  <p
                                    class="sc-kpOJdX bxSrEP"
                                  >
                                    test
                                  </p>
                                  <p
                                    class="sc-fjdhpX gAKYZH"
                                  />
                                </div>
                                <p
                                  class="sc-dxgOiQ eGtYgX"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "didError": false,
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "expirationTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "interactionThreadID": 12,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextExpirationTimeToWorkOn": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "timeoutHandle": -1,
                          },
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "tag": 0,
                            },
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "tag": 0,
                            },
                          },
                        },
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              }
                            }
                          />,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                              class="sc-kAzzGY dxEwPq"
                            >
                              <div
                                class="sc-chPdSV gWxTLm"
                              >
                                <img
                                  bordercolor="white"
                                  bordersize="1px"
                                  class="ui tiny circular image sc-ifAKCX irlmET"
                                  maxheight="65px"
                                  maxwidth="65px"
                                  src="test"
                                />
                                <span
                                  class="sc-kgoBCf gMvtpI"
                                  color="green"
                                />
                              </div>
                              <div
                                class="sc-kGXeez dCpFuT"
                              >
                                <p
                                  class="sc-kpOJdX bxSrEP"
                                >
                                  test
                                </p>
                                <p
                                  class="sc-fjdhpX gAKYZH"
                                />
                              </div>
                              <p
                                class="sc-dxgOiQ eGtYgX"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 12,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "timeoutHandle": -1,
                        },
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                }
                              }
                            />,
                          },
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "chat": Object {
                        "id": 1,
                        "messages": Array [],
                        "users": Array [
                          Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                          Object {
                            "avatar": "test2",
                            "id": 2,
                            "name": "test2",
                            "status": "Online",
                          },
                        ],
                      },
                      "isActive": "",
                      "onChangeChat": [MockFunction] {
                        "calls": [Circular],
                      },
                      "user": Object {
                        "avatar": "test",
                        "id": 1,
                        "name": "test",
                        "status": "Online",
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "chat": Object {
                        "id": 1,
                        "messages": Array [],
                        "users": Array [
                          Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                          Object {
                            "avatar": "test2",
                            "id": 2,
                            "name": "test2",
                            "status": "Online",
                          },
                        ],
                      },
                      "isActive": "",
                      "onChangeChat": [MockFunction] {
                        "calls": [Circular],
                      },
                      "user": Object {
                        "avatar": "test",
                        "id": 1,
                        "name": "test",
                        "status": "Online",
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 49,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 47,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": FiberNode {
                          "_debugID": 47,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": [Circular],
                          "child": null,
                          "childExpirationTime": 1,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="sc-kAzzGY dxEwPq"
                              >
                                <div
                                  class="sc-chPdSV gWxTLm"
                                >
                                  <img
                                    bordercolor="white"
                                    bordersize="1px"
                                    class="ui tiny circular image sc-ifAKCX irlmET"
                                    maxheight="65px"
                                    maxwidth="65px"
                                    src="test"
                                  />
                                  <span
                                    class="sc-kgoBCf gMvtpI"
                                    color="green"
                                  />
                                </div>
                                <div
                                  class="sc-kGXeez dCpFuT"
                                >
                                  <p
                                    class="sc-kpOJdX bxSrEP"
                                  >
                                    test
                                  </p>
                                  <p
                                    class="sc-fjdhpX gAKYZH"
                                  />
                                </div>
                                <p
                                  class="sc-dxgOiQ eGtYgX"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "didError": false,
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "expirationTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "interactionThreadID": 12,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextExpirationTimeToWorkOn": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "timeoutHandle": -1,
                          },
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "tag": 0,
                            },
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "tag": 0,
                            },
                          },
                        },
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              }
                            }
                          />,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                              class="sc-kAzzGY dxEwPq"
                            >
                              <div
                                class="sc-chPdSV gWxTLm"
                              >
                                <img
                                  bordercolor="white"
                                  bordersize="1px"
                                  class="ui tiny circular image sc-ifAKCX irlmET"
                                  maxheight="65px"
                                  maxwidth="65px"
                                  src="test"
                                />
                                <span
                                  class="sc-kgoBCf gMvtpI"
                                  color="green"
                                />
                              </div>
                              <div
                                class="sc-kGXeez dCpFuT"
                              >
                                <p
                                  class="sc-kpOJdX bxSrEP"
                                >
                                  test
                                </p>
                                <p
                                  class="sc-fjdhpX gAKYZH"
                                />
                              </div>
                              <p
                                class="sc-dxgOiQ eGtYgX"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 12,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "timeoutHandle": -1,
                        },
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                }
                              }
                            />,
                          },
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 0,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <styled.div>
                        <Styled(Image)
                          bordercolor="white"
                          bordersize="1px"
                          circular={true}
                          maxheight="65px"
                          maxwidth="65px"
                          size="tiny"
                          src="test"
                        />
                        <styled.span
                          color="green"
                        />
                      </styled.div>,
                      <styled.div>
                        <styled.p>
                          test
                        </styled.p>
                        <styled.p>
                          
                        </styled.p>
                      </styled.div>,
                      <styled.p>
                        
                      </styled.p>,
                    ],
                    "className": "",
                    "onClick": [MockFunction] {
                      "calls": [Circular],
                    },
                  },
                  "memoizedState": Object {
                    "generatedClassName": "dxEwPq",
                    "theme": null,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <styled.div>
                        <Styled(Image)
                          bordercolor="white"
                          bordersize="1px"
                          circular={true}
                          maxheight="65px"
                          maxwidth="65px"
                          size="tiny"
                          src="test"
                        />
                        <styled.span
                          color="green"
                        />
                      </styled.div>,
                      <styled.div>
                        <styled.p>
                          test
                        </styled.p>
                        <styled.p>
                          
                        </styled.p>
                      </styled.div>,
                      <styled.p>
                        
                      </styled.p>,
                    ],
                    "className": "",
                    "onClick": [MockFunction] {
                      "calls": [Circular],
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 50,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 49,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 47,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": FiberNode {
                          "_debugID": 47,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": [Circular],
                          "child": null,
                          "childExpirationTime": 1,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="sc-kAzzGY dxEwPq"
                              >
                                <div
                                  class="sc-chPdSV gWxTLm"
                                >
                                  <img
                                    bordercolor="white"
                                    bordersize="1px"
                                    class="ui tiny circular image sc-ifAKCX irlmET"
                                    maxheight="65px"
                                    maxwidth="65px"
                                    src="test"
                                  />
                                  <span
                                    class="sc-kgoBCf gMvtpI"
                                    color="green"
                                  />
                                </div>
                                <div
                                  class="sc-kGXeez dCpFuT"
                                >
                                  <p
                                    class="sc-kpOJdX bxSrEP"
                                  >
                                    test
                                  </p>
                                  <p
                                    class="sc-fjdhpX gAKYZH"
                                  />
                                </div>
                                <p
                                  class="sc-dxgOiQ eGtYgX"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "didError": false,
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "expirationTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "interactionThreadID": 12,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextExpirationTimeToWorkOn": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "timeoutHandle": -1,
                          },
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "tag": 0,
                            },
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "tag": 0,
                            },
                          },
                        },
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              }
                            }
                          />,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                              class="sc-kAzzGY dxEwPq"
                            >
                              <div
                                class="sc-chPdSV gWxTLm"
                              >
                                <img
                                  bordercolor="white"
                                  bordersize="1px"
                                  class="ui tiny circular image sc-ifAKCX irlmET"
                                  maxheight="65px"
                                  maxwidth="65px"
                                  src="test"
                                />
                                <span
                                  class="sc-kgoBCf gMvtpI"
                                  color="green"
                                />
                              </div>
                              <div
                                class="sc-kGXeez dCpFuT"
                              >
                                <p
                                  class="sc-kpOJdX bxSrEP"
                                >
                                  test
                                </p>
                                <p
                                  class="sc-fjdhpX gAKYZH"
                                />
                              </div>
                              <p
                                class="sc-dxgOiQ eGtYgX"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 12,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "timeoutHandle": -1,
                        },
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                }
                              }
                            />,
                          },
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "chat": Object {
                        "id": 1,
                        "messages": Array [],
                        "users": Array [
                          Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                          Object {
                            "avatar": "test2",
                            "id": 2,
                            "name": "test2",
                            "status": "Online",
                          },
                        ],
                      },
                      "isActive": "",
                      "onChangeChat": [MockFunction] {
                        "calls": [Circular],
                      },
                      "user": Object {
                        "avatar": "test",
                        "id": 1,
                        "name": "test",
                        "status": "Online",
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "chat": Object {
                        "id": 1,
                        "messages": Array [],
                        "users": Array [
                          Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                          Object {
                            "avatar": "test2",
                            "id": 2,
                            "name": "test2",
                            "status": "Online",
                          },
                        ],
                      },
                      "isActive": "",
                      "onChangeChat": [MockFunction] {
                        "calls": [Circular],
                      },
                      "user": Object {
                        "avatar": "test",
                        "id": 1,
                        "name": "test",
                        "status": "Online",
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 49,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 47,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": FiberNode {
                          "_debugID": 47,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": [Circular],
                          "child": null,
                          "childExpirationTime": 1,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="sc-kAzzGY dxEwPq"
                              >
                                <div
                                  class="sc-chPdSV gWxTLm"
                                >
                                  <img
                                    bordercolor="white"
                                    bordersize="1px"
                                    class="ui tiny circular image sc-ifAKCX irlmET"
                                    maxheight="65px"
                                    maxwidth="65px"
                                    src="test"
                                  />
                                  <span
                                    class="sc-kgoBCf gMvtpI"
                                    color="green"
                                  />
                                </div>
                                <div
                                  class="sc-kGXeez dCpFuT"
                                >
                                  <p
                                    class="sc-kpOJdX bxSrEP"
                                  >
                                    test
                                  </p>
                                  <p
                                    class="sc-fjdhpX gAKYZH"
                                  />
                                </div>
                                <p
                                  class="sc-dxgOiQ eGtYgX"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "didError": false,
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "expirationTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "interactionThreadID": 12,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextExpirationTimeToWorkOn": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "timeoutHandle": -1,
                          },
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "tag": 0,
                            },
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "tag": 0,
                            },
                          },
                        },
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              }
                            }
                          />,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                              class="sc-kAzzGY dxEwPq"
                            >
                              <div
                                class="sc-chPdSV gWxTLm"
                              >
                                <img
                                  bordercolor="white"
                                  bordersize="1px"
                                  class="ui tiny circular image sc-ifAKCX irlmET"
                                  maxheight="65px"
                                  maxwidth="65px"
                                  src="test"
                                />
                                <span
                                  class="sc-kgoBCf gMvtpI"
                                  color="green"
                                />
                              </div>
                              <div
                                class="sc-kGXeez dCpFuT"
                              >
                                <p
                                  class="sc-kpOJdX bxSrEP"
                                >
                                  test
                                </p>
                                <p
                                  class="sc-fjdhpX gAKYZH"
                                />
                              </div>
                              <p
                                class="sc-dxgOiQ eGtYgX"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 12,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "timeoutHandle": -1,
                        },
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                }
                              }
                            />,
                          },
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 0,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": StyledComponent {
                    "__reactInternalMemoizedMaskedChildContext": Object {
                      "__styled-components-stylesheet__": undefined,
                      "__styled-components__": undefined,
                      "__styled-components__next__": undefined,
                    },
                    "__reactInternalMemoizedUnmaskedChildContext": Object {},
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "attrs": Object {},
                    "context": Object {
                      "__styled-components-stylesheet__": undefined,
                      "__styled-components__": undefined,
                      "__styled-components__next__": undefined,
                    },
                    "props": Object {
                      "children": Array [
                        <styled.div>
                          <Styled(Image)
                            bordercolor="white"
                            bordersize="1px"
                            circular={true}
                            maxheight="65px"
                            maxwidth="65px"
                            size="tiny"
                            src="test"
                          />
                          <styled.span
                            color="green"
                          />
                        </styled.div>,
                        <styled.div>
                          <styled.p>
                            test
                          </styled.p>
                          <styled.p>
                            
                          </styled.p>
                        </styled.div>,
                        <styled.p>
                          
                        </styled.p>,
                      ],
                      "className": "",
                      "onClick": [MockFunction] {
                        "calls": [Circular],
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "generatedClassName": "dxEwPq",
                      "theme": null,
                    },
                    "unsubscribeId": -1,
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "baseState": Object {
                      "generatedClassName": "dxEwPq",
                      "theme": null,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 53,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 50,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 49,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 47,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": FiberNode {
                          "_debugID": 47,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": [Circular],
                          "child": null,
                          "childExpirationTime": 1,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="sc-kAzzGY dxEwPq"
                              >
                                <div
                                  class="sc-chPdSV gWxTLm"
                                >
                                  <img
                                    bordercolor="white"
                                    bordersize="1px"
                                    class="ui tiny circular image sc-ifAKCX irlmET"
                                    maxheight="65px"
                                    maxwidth="65px"
                                    src="test"
                                  />
                                  <span
                                    class="sc-kgoBCf gMvtpI"
                                    color="green"
                                  />
                                </div>
                                <div
                                  class="sc-kGXeez dCpFuT"
                                >
                                  <p
                                    class="sc-kpOJdX bxSrEP"
                                  >
                                    test
                                  </p>
                                  <p
                                    class="sc-fjdhpX gAKYZH"
                                  />
                                </div>
                                <p
                                  class="sc-dxgOiQ eGtYgX"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "didError": false,
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "expirationTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "interactionThreadID": 12,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextExpirationTimeToWorkOn": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "timeoutHandle": -1,
                          },
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "tag": 0,
                            },
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "tag": 0,
                            },
                          },
                        },
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              }
                            }
                          />,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                              class="sc-kAzzGY dxEwPq"
                            >
                              <div
                                class="sc-chPdSV gWxTLm"
                              >
                                <img
                                  bordercolor="white"
                                  bordersize="1px"
                                  class="ui tiny circular image sc-ifAKCX irlmET"
                                  maxheight="65px"
                                  maxwidth="65px"
                                  src="test"
                                />
                                <span
                                  class="sc-kgoBCf gMvtpI"
                                  color="green"
                                />
                              </div>
                              <div
                                class="sc-kGXeez dCpFuT"
                              >
                                <p
                                  class="sc-kpOJdX bxSrEP"
                                >
                                  test
                                </p>
                                <p
                                  class="sc-fjdhpX gAKYZH"
                                />
                              </div>
                              <p
                                class="sc-dxgOiQ eGtYgX"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 12,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "timeoutHandle": -1,
                        },
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                }
                              }
                            />,
                          },
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 51,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <styled.div>
                            <Styled(Image)
                              bordercolor="white"
                              bordersize="1px"
                              circular={true}
                              maxheight="65px"
                              maxwidth="65px"
                              size="tiny"
                              src="test"
                            />
                            <styled.span
                              color="green"
                            />
                          </styled.div>,
                          <styled.div>
                            <styled.p>
                              test
                            </styled.p>
                            <styled.p>
                              
                            </styled.p>
                          </styled.div>,
                          <styled.p>
                            
                          </styled.p>,
                        ],
                        "className": "",
                        "onClick": [MockFunction] {
                          "calls": [Circular],
                        },
                      },
                      "memoizedState": Object {
                        "generatedClassName": "dxEwPq",
                        "theme": null,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <styled.div>
                            <Styled(Image)
                              bordercolor="white"
                              bordersize="1px"
                              circular={true}
                              maxheight="65px"
                              maxwidth="65px"
                              size="tiny"
                              src="test"
                            />
                            <styled.span
                              color="green"
                            />
                          </styled.div>,
                          <styled.div>
                            <styled.p>
                              test
                            </styled.p>
                            <styled.p>
                              
                            </styled.p>
                          </styled.div>,
                          <styled.p>
                            
                          </styled.p>,
                        ],
                        "className": "",
                        "onClick": [MockFunction] {
                          "calls": [Circular],
                        },
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": StyledComponent {
                        "__reactInternalMemoizedMaskedChildContext": Object {
                          "__styled-components-stylesheet__": undefined,
                          "__styled-components__": undefined,
                          "__styled-components__next__": undefined,
                        },
                        "__reactInternalMemoizedUnmaskedChildContext": Object {},
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "attrs": Object {},
                        "context": Object {
                          "__styled-components-stylesheet__": undefined,
                          "__styled-components__": undefined,
                          "__styled-components__next__": undefined,
                        },
                        "props": Object {
                          "children": Array [
                            <styled.div>
                              <Styled(Image)
                                bordercolor="white"
                                bordersize="1px"
                                circular={true}
                                maxheight="65px"
                                maxwidth="65px"
                                size="tiny"
                                src="test"
                              />
                              <styled.span
                                color="green"
                              />
                            </styled.div>,
                            <styled.div>
                              <styled.p>
                                test
                              </styled.p>
                              <styled.p>
                                
                              </styled.p>
                            </styled.div>,
                            <styled.p>
                              
                            </styled.p>,
                          ],
                          "className": "",
                          "onClick": [MockFunction] {
                            "calls": [Circular],
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "generatedClassName": "dxEwPq",
                          "theme": null,
                        },
                        "unsubscribeId": -1,
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": Object {
                        "baseState": Object {
                          "generatedClassName": "dxEwPq",
                          "theme": null,
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "childExpirationTime": 0,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "chat": Object {
                        "id": 1,
                        "messages": Array [],
                        "users": Array [
                          Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                          Object {
                            "avatar": "test2",
                            "id": 2,
                            "name": "test2",
                            "status": "Online",
                          },
                        ],
                      },
                      "isActive": "",
                      "onChangeChat": [MockFunction] {
                        "calls": [Circular],
                      },
                      "user": Object {
                        "avatar": "test",
                        "id": 1,
                        "name": "test",
                        "status": "Online",
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "chat": Object {
                        "id": 1,
                        "messages": Array [],
                        "users": Array [
                          Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                          Object {
                            "avatar": "test2",
                            "id": 2,
                            "name": "test2",
                            "status": "Online",
                          },
                        ],
                      },
                      "isActive": "",
                      "onChangeChat": [MockFunction] {
                        "calls": [Circular],
                      },
                      "user": Object {
                        "avatar": "test",
                        "id": 1,
                        "name": "test",
                        "status": "Online",
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 49,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 47,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": FiberNode {
                          "_debugID": 47,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": [Circular],
                          "child": null,
                          "childExpirationTime": 1,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="sc-kAzzGY dxEwPq"
                              >
                                <div
                                  class="sc-chPdSV gWxTLm"
                                >
                                  <img
                                    bordercolor="white"
                                    bordersize="1px"
                                    class="ui tiny circular image sc-ifAKCX irlmET"
                                    maxheight="65px"
                                    maxwidth="65px"
                                    src="test"
                                  />
                                  <span
                                    class="sc-kgoBCf gMvtpI"
                                    color="green"
                                  />
                                </div>
                                <div
                                  class="sc-kGXeez dCpFuT"
                                >
                                  <p
                                    class="sc-kpOJdX bxSrEP"
                                  >
                                    test
                                  </p>
                                  <p
                                    class="sc-fjdhpX gAKYZH"
                                  />
                                </div>
                                <p
                                  class="sc-dxgOiQ eGtYgX"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "didError": false,
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "expirationTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "interactionThreadID": 12,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextExpirationTimeToWorkOn": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "timeoutHandle": -1,
                          },
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "tag": 0,
                            },
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "tag": 0,
                            },
                          },
                        },
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              }
                            }
                          />,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                              class="sc-kAzzGY dxEwPq"
                            >
                              <div
                                class="sc-chPdSV gWxTLm"
                              >
                                <img
                                  bordercolor="white"
                                  bordersize="1px"
                                  class="ui tiny circular image sc-ifAKCX irlmET"
                                  maxheight="65px"
                                  maxwidth="65px"
                                  src="test"
                                />
                                <span
                                  class="sc-kgoBCf gMvtpI"
                                  color="green"
                                />
                              </div>
                              <div
                                class="sc-kGXeez dCpFuT"
                              >
                                <p
                                  class="sc-kpOJdX bxSrEP"
                                >
                                  test
                                </p>
                                <p
                                  class="sc-fjdhpX gAKYZH"
                                />
                              </div>
                              <p
                                class="sc-dxgOiQ eGtYgX"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 12,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "timeoutHandle": -1,
                        },
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                }
                              }
                            />,
                          },
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 0,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 56,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 57,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 50,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 49,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 47,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": [Circular],
                              "child": null,
                              "childExpirationTime": 1,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="sc-kAzzGY dxEwPq"
                                  >
                                    <div
                                      class="sc-chPdSV gWxTLm"
                                    >
                                      <img
                                        bordercolor="white"
                                        bordersize="1px"
                                        class="ui tiny circular image sc-ifAKCX irlmET"
                                        maxheight="65px"
                                        maxwidth="65px"
                                        src="test"
                                      />
                                      <span
                                        class="sc-kgoBCf gMvtpI"
                                        color="green"
                                      />
                                    </div>
                                    <div
                                      class="sc-kGXeez dCpFuT"
                                    >
                                      <p
                                        class="sc-kpOJdX bxSrEP"
                                      >
                                        test
                                      </p>
                                      <p
                                        class="sc-fjdhpX gAKYZH"
                                      />
                                    </div>
                                    <p
                                      class="sc-dxgOiQ eGtYgX"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "chat": Object {
                                            "id": 1,
                                            "messages": Array [],
                                            "users": Array [
                                              Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                              Object {
                                                "avatar": "test2",
                                                "id": 2,
                                                "name": "test2",
                                                "status": "Online",
                                              },
                                            ],
                                          },
                                          "isActive": "",
                                          "onChangeChat": [MockFunction] {
                                            "calls": [Circular],
                                          },
                                          "user": Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                        }
                                      }
                                    />,
                                  },
                                  "tag": 0,
                                },
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "chat": Object {
                                            "id": 1,
                                            "messages": Array [],
                                            "users": Array [
                                              Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                              Object {
                                                "avatar": "test2",
                                                "id": 2,
                                                "name": "test2",
                                                "status": "Online",
                                              },
                                            ],
                                          },
                                          "isActive": "",
                                          "onChangeChat": [MockFunction] {
                                            "calls": [Circular],
                                          },
                                          "user": Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                        }
                                      }
                                    />,
                                  },
                                  "tag": 0,
                                },
                              },
                            },
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="sc-kAzzGY dxEwPq"
                                >
                                  <div
                                    class="sc-chPdSV gWxTLm"
                                  >
                                    <img
                                      bordercolor="white"
                                      bordersize="1px"
                                      class="ui tiny circular image sc-ifAKCX irlmET"
                                      maxheight="65px"
                                      maxwidth="65px"
                                      src="test"
                                    />
                                    <span
                                      class="sc-kgoBCf gMvtpI"
                                      color="green"
                                    />
                                  </div>
                                  <div
                                    class="sc-kGXeez dCpFuT"
                                  >
                                    <p
                                      class="sc-kpOJdX bxSrEP"
                                    >
                                      test
                                    </p>
                                    <p
                                      class="sc-fjdhpX gAKYZH"
                                    />
                                  </div>
                                  <p
                                    class="sc-dxgOiQ eGtYgX"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "didError": false,
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "expirationTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "interactionThreadID": 12,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "memoizedInteractions": Set {},
                              "nextExpirationTimeToWorkOn": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "timeoutHandle": -1,
                            },
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": null,
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": null,
                            },
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 51,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <styled.div>
                                <Styled(Image)
                                  bordercolor="white"
                                  bordersize="1px"
                                  circular={true}
                                  maxheight="65px"
                                  maxwidth="65px"
                                  size="tiny"
                                  src="test"
                                />
                                <styled.span
                                  color="green"
                                />
                              </styled.div>,
                              <styled.div>
                                <styled.p>
                                  test
                                </styled.p>
                                <styled.p>
                                  
                                </styled.p>
                              </styled.div>,
                              <styled.p>
                                
                              </styled.p>,
                            ],
                            "className": "",
                            "onClick": [MockFunction] {
                              "calls": [Circular],
                            },
                          },
                          "memoizedState": Object {
                            "generatedClassName": "dxEwPq",
                            "theme": null,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <styled.div>
                                <Styled(Image)
                                  bordercolor="white"
                                  bordersize="1px"
                                  circular={true}
                                  maxheight="65px"
                                  maxwidth="65px"
                                  size="tiny"
                                  src="test"
                                />
                                <styled.span
                                  color="green"
                                />
                              </styled.div>,
                              <styled.div>
                                <styled.p>
                                  test
                                </styled.p>
                                <styled.p>
                                  
                                </styled.p>
                              </styled.div>,
                              <styled.p>
                                
                              </styled.p>,
                            ],
                            "className": "",
                            "onClick": [MockFunction] {
                              "calls": [Circular],
                            },
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": StyledComponent {
                            "__reactInternalMemoizedMaskedChildContext": Object {
                              "__styled-components-stylesheet__": undefined,
                              "__styled-components__": undefined,
                              "__styled-components__next__": undefined,
                            },
                            "__reactInternalMemoizedUnmaskedChildContext": Object {},
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "attrs": Object {},
                            "context": Object {
                              "__styled-components-stylesheet__": undefined,
                              "__styled-components__": undefined,
                              "__styled-components__next__": undefined,
                            },
                            "props": Object {
                              "children": Array [
                                <styled.div>
                                  <Styled(Image)
                                    bordercolor="white"
                                    bordersize="1px"
                                    circular={true}
                                    maxheight="65px"
                                    maxwidth="65px"
                                    size="tiny"
                                    src="test"
                                  />
                                  <styled.span
                                    color="green"
                                  />
                                </styled.div>,
                                <styled.div>
                                  <styled.p>
                                    test
                                  </styled.p>
                                  <styled.p>
                                    
                                  </styled.p>
                                </styled.div>,
                                <styled.p>
                                  
                                </styled.p>,
                              ],
                              "className": "",
                              "onClick": [MockFunction] {
                                "calls": [Circular],
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "generatedClassName": "dxEwPq",
                              "theme": null,
                            },
                            "unsubscribeId": -1,
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": Object {
                            "baseState": Object {
                              "generatedClassName": "dxEwPq",
                              "theme": null,
                            },
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "childExpirationTime": 0,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 49,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 47,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": [Circular],
                              "child": null,
                              "childExpirationTime": 1,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="sc-kAzzGY dxEwPq"
                                  >
                                    <div
                                      class="sc-chPdSV gWxTLm"
                                    >
                                      <img
                                        bordercolor="white"
                                        bordersize="1px"
                                        class="ui tiny circular image sc-ifAKCX irlmET"
                                        maxheight="65px"
                                        maxwidth="65px"
                                        src="test"
                                      />
                                      <span
                                        class="sc-kgoBCf gMvtpI"
                                        color="green"
                                      />
                                    </div>
                                    <div
                                      class="sc-kGXeez dCpFuT"
                                    >
                                      <p
                                        class="sc-kpOJdX bxSrEP"
                                      >
                                        test
                                      </p>
                                      <p
                                        class="sc-fjdhpX gAKYZH"
                                      />
                                    </div>
                                    <p
                                      class="sc-dxgOiQ eGtYgX"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "chat": Object {
                                            "id": 1,
                                            "messages": Array [],
                                            "users": Array [
                                              Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                              Object {
                                                "avatar": "test2",
                                                "id": 2,
                                                "name": "test2",
                                                "status": "Online",
                                              },
                                            ],
                                          },
                                          "isActive": "",
                                          "onChangeChat": [MockFunction] {
                                            "calls": [Circular],
                                          },
                                          "user": Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                        }
                                      }
                                    />,
                                  },
                                  "tag": 0,
                                },
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "chat": Object {
                                            "id": 1,
                                            "messages": Array [],
                                            "users": Array [
                                              Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                              Object {
                                                "avatar": "test2",
                                                "id": 2,
                                                "name": "test2",
                                                "status": "Online",
                                              },
                                            ],
                                          },
                                          "isActive": "",
                                          "onChangeChat": [MockFunction] {
                                            "calls": [Circular],
                                          },
                                          "user": Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                        }
                                      }
                                    />,
                                  },
                                  "tag": 0,
                                },
                              },
                            },
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="sc-kAzzGY dxEwPq"
                                >
                                  <div
                                    class="sc-chPdSV gWxTLm"
                                  >
                                    <img
                                      bordercolor="white"
                                      bordersize="1px"
                                      class="ui tiny circular image sc-ifAKCX irlmET"
                                      maxheight="65px"
                                      maxwidth="65px"
                                      src="test"
                                    />
                                    <span
                                      class="sc-kgoBCf gMvtpI"
                                      color="green"
                                    />
                                  </div>
                                  <div
                                    class="sc-kGXeez dCpFuT"
                                  >
                                    <p
                                      class="sc-kpOJdX bxSrEP"
                                    >
                                      test
                                    </p>
                                    <p
                                      class="sc-fjdhpX gAKYZH"
                                    />
                                  </div>
                                  <p
                                    class="sc-dxgOiQ eGtYgX"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "didError": false,
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "expirationTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "interactionThreadID": 12,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "memoizedInteractions": Set {},
                              "nextExpirationTimeToWorkOn": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "timeoutHandle": -1,
                            },
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": null,
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": null,
                            },
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 0,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 59,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 60,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "bordercolor": "white",
                            "bordersize": "1px",
                            "className": "ui tiny circular image sc-ifAKCX irlmET",
                            "maxheight": "65px",
                            "maxwidth": "65px",
                            "src": "test",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "bordercolor": "white",
                            "bordersize": "1px",
                            "className": "ui tiny circular image sc-ifAKCX irlmET",
                            "maxheight": "65px",
                            "maxwidth": "65px",
                            "src": "test",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <img
                            bordercolor="white"
                            bordersize="1px"
                            class="ui tiny circular image sc-ifAKCX irlmET"
                            maxheight="65px"
                            maxwidth="65px"
                            src="test"
                          />,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "img",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "as": "img",
                          "bordercolor": "white",
                          "bordersize": "1px",
                          "circular": true,
                          "className": "sc-ifAKCX irlmET",
                          "maxheight": "65px",
                          "maxwidth": "65px",
                          "size": "tiny",
                          "src": "test",
                          "ui": true,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "as": "img",
                          "bordercolor": "white",
                          "bordersize": "1px",
                          "circular": true,
                          "className": "sc-ifAKCX irlmET",
                          "maxheight": "65px",
                          "maxwidth": "65px",
                          "size": "tiny",
                          "src": "test",
                          "ui": true,
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 0,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "bordercolor": "white",
                        "bordersize": "1px",
                        "circular": true,
                        "maxheight": "65px",
                        "maxwidth": "65px",
                        "size": "tiny",
                        "src": "test",
                      },
                      "memoizedState": Object {
                        "generatedClassName": "irlmET",
                        "theme": Object {},
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "bordercolor": "white",
                        "bordersize": "1px",
                        "circular": true,
                        "maxheight": "65px",
                        "maxwidth": "65px",
                        "size": "tiny",
                        "src": "test",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 58,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 50,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 49,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 1,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                      class="sc-kAzzGY dxEwPq"
                                    >
                                      <div
                                        class="sc-chPdSV gWxTLm"
                                      >
                                        <img
                                          bordercolor="white"
                                          bordersize="1px"
                                          class="ui tiny circular image sc-ifAKCX irlmET"
                                          maxheight="65px"
                                          maxwidth="65px"
                                          src="test"
                                        />
                                        <span
                                          class="sc-kgoBCf gMvtpI"
                                          color="green"
                                        />
                                      </div>
                                      <div
                                        class="sc-kGXeez dCpFuT"
                                      >
                                        <p
                                          class="sc-kpOJdX bxSrEP"
                                        >
                                          test
                                        </p>
                                        <p
                                          class="sc-fjdhpX gAKYZH"
                                        />
                                      </div>
                                      <p
                                        class="sc-dxgOiQ eGtYgX"
                                      />
                                    </div>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "chat": Object {
                                              "id": 1,
                                              "messages": Array [],
                                              "users": Array [
                                                Object {
                                                  "avatar": "test",
                                                  "id": 1,
                                                  "name": "test",
                                                  "status": "Online",
                                                },
                                                Object {
                                                  "avatar": "test2",
                                                  "id": 2,
                                                  "name": "test2",
                                                  "status": "Online",
                                                },
                                              ],
                                            },
                                            "isActive": "",
                                            "onChangeChat": [MockFunction] {
                                              "calls": [Circular],
                                            },
                                            "user": Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "chat": Object {
                                              "id": 1,
                                              "messages": Array [],
                                              "users": Array [
                                                Object {
                                                  "avatar": "test",
                                                  "id": 1,
                                                  "name": "test",
                                                  "status": "Online",
                                                },
                                                Object {
                                                  "avatar": "test2",
                                                  "id": 2,
                                                  "name": "test2",
                                                  "status": "Online",
                                                },
                                              ],
                                            },
                                            "isActive": "",
                                            "onChangeChat": [MockFunction] {
                                              "calls": [Circular],
                                            },
                                            "user": Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="sc-kAzzGY dxEwPq"
                                  >
                                    <div
                                      class="sc-chPdSV gWxTLm"
                                    >
                                      <img
                                        bordercolor="white"
                                        bordersize="1px"
                                        class="ui tiny circular image sc-ifAKCX irlmET"
                                        maxheight="65px"
                                        maxwidth="65px"
                                        src="test"
                                      />
                                      <span
                                        class="sc-kgoBCf gMvtpI"
                                        color="green"
                                      />
                                    </div>
                                    <div
                                      class="sc-kGXeez dCpFuT"
                                    >
                                      <p
                                        class="sc-kpOJdX bxSrEP"
                                      >
                                        test
                                      </p>
                                      <p
                                        class="sc-fjdhpX gAKYZH"
                                      />
                                    </div>
                                    <p
                                      class="sc-dxgOiQ eGtYgX"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 51,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <styled.div>
                                  <Styled(Image)
                                    bordercolor="white"
                                    bordersize="1px"
                                    circular={true}
                                    maxheight="65px"
                                    maxwidth="65px"
                                    size="tiny"
                                    src="test"
                                  />
                                  <styled.span
                                    color="green"
                                  />
                                </styled.div>,
                                <styled.div>
                                  <styled.p>
                                    test
                                  </styled.p>
                                  <styled.p>
                                    
                                  </styled.p>
                                </styled.div>,
                                <styled.p>
                                  
                                </styled.p>,
                              ],
                              "className": "",
                              "onClick": [MockFunction] {
                                "calls": [Circular],
                              },
                            },
                            "memoizedState": Object {
                              "generatedClassName": "dxEwPq",
                              "theme": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <styled.div>
                                  <Styled(Image)
                                    bordercolor="white"
                                    bordersize="1px"
                                    circular={true}
                                    maxheight="65px"
                                    maxwidth="65px"
                                    size="tiny"
                                    src="test"
                                  />
                                  <styled.span
                                    color="green"
                                  />
                                </styled.div>,
                                <styled.div>
                                  <styled.p>
                                    test
                                  </styled.p>
                                  <styled.p>
                                    
                                  </styled.p>
                                </styled.div>,
                                <styled.p>
                                  
                                </styled.p>,
                              ],
                              "className": "",
                              "onClick": [MockFunction] {
                                "calls": [Circular],
                              },
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": StyledComponent {
                              "__reactInternalMemoizedMaskedChildContext": Object {
                                "__styled-components-stylesheet__": undefined,
                                "__styled-components__": undefined,
                                "__styled-components__next__": undefined,
                              },
                              "__reactInternalMemoizedUnmaskedChildContext": Object {},
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "attrs": Object {},
                              "context": Object {
                                "__styled-components-stylesheet__": undefined,
                                "__styled-components__": undefined,
                                "__styled-components__next__": undefined,
                              },
                              "props": Object {
                                "children": Array [
                                  <styled.div>
                                    <Styled(Image)
                                      bordercolor="white"
                                      bordersize="1px"
                                      circular={true}
                                      maxheight="65px"
                                      maxwidth="65px"
                                      size="tiny"
                                      src="test"
                                    />
                                    <styled.span
                                      color="green"
                                    />
                                  </styled.div>,
                                  <styled.div>
                                    <styled.p>
                                      test
                                    </styled.p>
                                    <styled.p>
                                      
                                    </styled.p>
                                  </styled.div>,
                                  <styled.p>
                                    
                                  </styled.p>,
                                ],
                                "className": "",
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "generatedClassName": "dxEwPq",
                                "theme": null,
                              },
                              "unsubscribeId": -1,
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": Object {
                              "baseState": Object {
                                "generatedClassName": "dxEwPq",
                                "theme": null,
                              },
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": null,
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": null,
                            },
                          },
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 49,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 1,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                      class="sc-kAzzGY dxEwPq"
                                    >
                                      <div
                                        class="sc-chPdSV gWxTLm"
                                      >
                                        <img
                                          bordercolor="white"
                                          bordersize="1px"
                                          class="ui tiny circular image sc-ifAKCX irlmET"
                                          maxheight="65px"
                                          maxwidth="65px"
                                          src="test"
                                        />
                                        <span
                                          class="sc-kgoBCf gMvtpI"
                                          color="green"
                                        />
                                      </div>
                                      <div
                                        class="sc-kGXeez dCpFuT"
                                      >
                                        <p
                                          class="sc-kpOJdX bxSrEP"
                                        >
                                          test
                                        </p>
                                        <p
                                          class="sc-fjdhpX gAKYZH"
                                        />
                                      </div>
                                      <p
                                        class="sc-dxgOiQ eGtYgX"
                                      />
                                    </div>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "chat": Object {
                                              "id": 1,
                                              "messages": Array [],
                                              "users": Array [
                                                Object {
                                                  "avatar": "test",
                                                  "id": 1,
                                                  "name": "test",
                                                  "status": "Online",
                                                },
                                                Object {
                                                  "avatar": "test2",
                                                  "id": 2,
                                                  "name": "test2",
                                                  "status": "Online",
                                                },
                                              ],
                                            },
                                            "isActive": "",
                                            "onChangeChat": [MockFunction] {
                                              "calls": [Circular],
                                            },
                                            "user": Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "chat": Object {
                                              "id": 1,
                                              "messages": Array [],
                                              "users": Array [
                                                Object {
                                                  "avatar": "test",
                                                  "id": 1,
                                                  "name": "test",
                                                  "status": "Online",
                                                },
                                                Object {
                                                  "avatar": "test2",
                                                  "id": 2,
                                                  "name": "test2",
                                                  "status": "Online",
                                                },
                                              ],
                                            },
                                            "isActive": "",
                                            "onChangeChat": [MockFunction] {
                                              "calls": [Circular],
                                            },
                                            "user": Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="sc-kAzzGY dxEwPq"
                                  >
                                    <div
                                      class="sc-chPdSV gWxTLm"
                                    >
                                      <img
                                        bordercolor="white"
                                        bordersize="1px"
                                        class="ui tiny circular image sc-ifAKCX irlmET"
                                        maxheight="65px"
                                        maxwidth="65px"
                                        src="test"
                                      />
                                      <span
                                        class="sc-kgoBCf gMvtpI"
                                        color="green"
                                      />
                                    </div>
                                    <div
                                      class="sc-kGXeez dCpFuT"
                                    >
                                      <p
                                        class="sc-kpOJdX bxSrEP"
                                      >
                                        test
                                      </p>
                                      <p
                                        class="sc-fjdhpX gAKYZH"
                                      />
                                    </div>
                                    <p
                                      class="sc-dxgOiQ eGtYgX"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 61,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "className": "sc-kgoBCf gMvtpI",
                            "color": "green",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "className": "sc-kgoBCf gMvtpI",
                            "color": "green",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <span
                            class="sc-kgoBCf gMvtpI"
                            color="green"
                          />,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "span",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "color": "green",
                        },
                        "memoizedState": Object {
                          "generatedClassName": "gMvtpI",
                          "theme": Object {},
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "color": "green",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": StyledComponent {
                          "__reactInternalMemoizedMaskedChildContext": Object {
                            "__styled-components-stylesheet__": undefined,
                            "__styled-components__": undefined,
                            "__styled-components__next__": undefined,
                          },
                          "__reactInternalMemoizedUnmaskedChildContext": Object {},
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "attrs": Object {},
                          "context": Object {
                            "__styled-components-stylesheet__": undefined,
                            "__styled-components__": undefined,
                            "__styled-components__next__": undefined,
                          },
                          "props": Object {
                            "color": "green",
                          },
                          "refs": Object {},
                          "state": Object {
                            "generatedClassName": "gMvtpI",
                            "theme": Object {},
                          },
                          "unsubscribeId": -1,
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": Object {
                          "baseState": Object {
                            "generatedClassName": "gMvtpI",
                            "theme": Object {},
                          },
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "stateNode": StyledComponent {
                        "__reactInternalMemoizedMaskedChildContext": Object {
                          "__styled-components-stylesheet__": undefined,
                          "__styled-components__": undefined,
                          "__styled-components__next__": undefined,
                        },
                        "__reactInternalMemoizedUnmaskedChildContext": Object {},
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "attrs": Object {},
                        "context": Object {
                          "__styled-components-stylesheet__": undefined,
                          "__styled-components__": undefined,
                          "__styled-components__next__": undefined,
                        },
                        "props": Object {
                          "bordercolor": "white",
                          "bordersize": "1px",
                          "circular": true,
                          "maxheight": "65px",
                          "maxwidth": "65px",
                          "size": "tiny",
                          "src": "test",
                        },
                        "refs": Object {},
                        "state": Object {
                          "generatedClassName": "irlmET",
                          "theme": Object {},
                        },
                        "unsubscribeId": -1,
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": Object {
                        "baseState": Object {
                          "generatedClassName": "irlmET",
                          "theme": Object {},
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <Styled(Image)
                          bordercolor="white"
                          bordersize="1px"
                          circular={true}
                          maxheight="65px"
                          maxwidth="65px"
                          size="tiny"
                          src="test"
                        />,
                        <styled.span
                          color="green"
                        />,
                      ],
                      "className": "sc-chPdSV gWxTLm",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <Styled(Image)
                          bordercolor="white"
                          bordersize="1px"
                          circular={true}
                          maxheight="65px"
                          maxwidth="65px"
                          size="tiny"
                          src="test"
                        />,
                        <styled.span
                          color="green"
                        />,
                      ],
                      "className": "sc-chPdSV gWxTLm",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="sc-chPdSV gWxTLm"
                    >
                      <img
                        bordercolor="white"
                        bordersize="1px"
                        class="ui tiny circular image sc-ifAKCX irlmET"
                        maxheight="65px"
                        maxwidth="65px"
                        src="test"
                      />
                      <span
                        class="sc-kgoBCf gMvtpI"
                        color="green"
                      />
                    </div>,
                    "tag": 7,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <Styled(Image)
                        bordercolor="white"
                        bordersize="1px"
                        circular={true}
                        maxheight="65px"
                        maxwidth="65px"
                        size="tiny"
                        src="test"
                      />,
                      <styled.span
                        color="green"
                      />,
                    ],
                  },
                  "memoizedState": Object {
                    "generatedClassName": "gWxTLm",
                    "theme": null,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <Styled(Image)
                        bordercolor="white"
                        bordersize="1px"
                        circular={true}
                        maxheight="65px"
                        maxwidth="65px"
                        size="tiny"
                        src="test"
                      />,
                      <styled.span
                        color="green"
                      />,
                    ],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 54,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 50,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 49,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 47,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugID": 47,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childExpirationTime": 1,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="sc-kAzzGY dxEwPq"
                                >
                                  <div
                                    class="sc-chPdSV gWxTLm"
                                  >
                                    <img
                                      bordercolor="white"
                                      bordersize="1px"
                                      class="ui tiny circular image sc-ifAKCX irlmET"
                                      maxheight="65px"
                                      maxwidth="65px"
                                      src="test"
                                    />
                                    <span
                                      class="sc-kgoBCf gMvtpI"
                                      color="green"
                                    />
                                  </div>
                                  <div
                                    class="sc-kGXeez dCpFuT"
                                  >
                                    <p
                                      class="sc-kpOJdX bxSrEP"
                                    >
                                      test
                                    </p>
                                    <p
                                      class="sc-fjdhpX gAKYZH"
                                    />
                                  </div>
                                  <p
                                    class="sc-dxgOiQ eGtYgX"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "didError": false,
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "expirationTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "interactionThreadID": 12,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "memoizedInteractions": Set {},
                              "nextExpirationTimeToWorkOn": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "timeoutHandle": -1,
                            },
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "tag": 0,
                              },
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "tag": 0,
                              },
                            },
                          },
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                }
                              }
                            />,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="sc-kAzzGY dxEwPq"
                              >
                                <div
                                  class="sc-chPdSV gWxTLm"
                                >
                                  <img
                                    bordercolor="white"
                                    bordersize="1px"
                                    class="ui tiny circular image sc-ifAKCX irlmET"
                                    maxheight="65px"
                                    maxwidth="65px"
                                    src="test"
                                  />
                                  <span
                                    class="sc-kgoBCf gMvtpI"
                                    color="green"
                                  />
                                </div>
                                <div
                                  class="sc-kGXeez dCpFuT"
                                >
                                  <p
                                    class="sc-kpOJdX bxSrEP"
                                  >
                                    test
                                  </p>
                                  <p
                                    class="sc-fjdhpX gAKYZH"
                                  />
                                </div>
                                <p
                                  class="sc-dxgOiQ eGtYgX"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "didError": false,
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "expirationTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "interactionThreadID": 12,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextExpirationTimeToWorkOn": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "timeoutHandle": -1,
                          },
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 51,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <styled.div>
                              <Styled(Image)
                                bordercolor="white"
                                bordersize="1px"
                                circular={true}
                                maxheight="65px"
                                maxwidth="65px"
                                size="tiny"
                                src="test"
                              />
                              <styled.span
                                color="green"
                              />
                            </styled.div>,
                            <styled.div>
                              <styled.p>
                                test
                              </styled.p>
                              <styled.p>
                                
                              </styled.p>
                            </styled.div>,
                            <styled.p>
                              
                            </styled.p>,
                          ],
                          "className": "",
                          "onClick": [MockFunction] {
                            "calls": [Circular],
                          },
                        },
                        "memoizedState": Object {
                          "generatedClassName": "dxEwPq",
                          "theme": null,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <styled.div>
                              <Styled(Image)
                                bordercolor="white"
                                bordersize="1px"
                                circular={true}
                                maxheight="65px"
                                maxwidth="65px"
                                size="tiny"
                                src="test"
                              />
                              <styled.span
                                color="green"
                              />
                            </styled.div>,
                            <styled.div>
                              <styled.p>
                                test
                              </styled.p>
                              <styled.p>
                                
                              </styled.p>
                            </styled.div>,
                            <styled.p>
                              
                            </styled.p>,
                          ],
                          "className": "",
                          "onClick": [MockFunction] {
                            "calls": [Circular],
                          },
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": StyledComponent {
                          "__reactInternalMemoizedMaskedChildContext": Object {
                            "__styled-components-stylesheet__": undefined,
                            "__styled-components__": undefined,
                            "__styled-components__next__": undefined,
                          },
                          "__reactInternalMemoizedUnmaskedChildContext": Object {},
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "attrs": Object {},
                          "context": Object {
                            "__styled-components-stylesheet__": undefined,
                            "__styled-components__": undefined,
                            "__styled-components__next__": undefined,
                          },
                          "props": Object {
                            "children": Array [
                              <styled.div>
                                <Styled(Image)
                                  bordercolor="white"
                                  bordersize="1px"
                                  circular={true}
                                  maxheight="65px"
                                  maxwidth="65px"
                                  size="tiny"
                                  src="test"
                                />
                                <styled.span
                                  color="green"
                                />
                              </styled.div>,
                              <styled.div>
                                <styled.p>
                                  test
                                </styled.p>
                                <styled.p>
                                  
                                </styled.p>
                              </styled.div>,
                              <styled.p>
                                
                              </styled.p>,
                            ],
                            "className": "",
                            "onClick": [MockFunction] {
                              "calls": [Circular],
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "generatedClassName": "dxEwPq",
                            "theme": null,
                          },
                          "unsubscribeId": -1,
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": Object {
                          "baseState": Object {
                            "generatedClassName": "dxEwPq",
                            "theme": null,
                          },
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "childExpirationTime": 0,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 49,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 47,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugID": 47,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childExpirationTime": 1,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="sc-kAzzGY dxEwPq"
                                >
                                  <div
                                    class="sc-chPdSV gWxTLm"
                                  >
                                    <img
                                      bordercolor="white"
                                      bordersize="1px"
                                      class="ui tiny circular image sc-ifAKCX irlmET"
                                      maxheight="65px"
                                      maxwidth="65px"
                                      src="test"
                                    />
                                    <span
                                      class="sc-kgoBCf gMvtpI"
                                      color="green"
                                    />
                                  </div>
                                  <div
                                    class="sc-kGXeez dCpFuT"
                                  >
                                    <p
                                      class="sc-kpOJdX bxSrEP"
                                    >
                                      test
                                    </p>
                                    <p
                                      class="sc-fjdhpX gAKYZH"
                                    />
                                  </div>
                                  <p
                                    class="sc-dxgOiQ eGtYgX"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "didError": false,
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "expirationTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "interactionThreadID": 12,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "memoizedInteractions": Set {},
                              "nextExpirationTimeToWorkOn": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "timeoutHandle": -1,
                            },
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "tag": 0,
                              },
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "tag": 0,
                              },
                            },
                          },
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                }
                              }
                            />,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="sc-kAzzGY dxEwPq"
                              >
                                <div
                                  class="sc-chPdSV gWxTLm"
                                >
                                  <img
                                    bordercolor="white"
                                    bordersize="1px"
                                    class="ui tiny circular image sc-ifAKCX irlmET"
                                    maxheight="65px"
                                    maxwidth="65px"
                                    src="test"
                                  />
                                  <span
                                    class="sc-kgoBCf gMvtpI"
                                    color="green"
                                  />
                                </div>
                                <div
                                  class="sc-kGXeez dCpFuT"
                                >
                                  <p
                                    class="sc-kpOJdX bxSrEP"
                                  >
                                    test
                                  </p>
                                  <p
                                    class="sc-fjdhpX gAKYZH"
                                  />
                                </div>
                                <p
                                  class="sc-dxgOiQ eGtYgX"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "didError": false,
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "expirationTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "interactionThreadID": 12,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextExpirationTimeToWorkOn": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "timeoutHandle": -1,
                          },
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 62,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 63,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 50,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 49,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 1,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                      class="sc-kAzzGY dxEwPq"
                                    >
                                      <div
                                        class="sc-chPdSV gWxTLm"
                                      >
                                        <img
                                          bordercolor="white"
                                          bordersize="1px"
                                          class="ui tiny circular image sc-ifAKCX irlmET"
                                          maxheight="65px"
                                          maxwidth="65px"
                                          src="test"
                                        />
                                        <span
                                          class="sc-kgoBCf gMvtpI"
                                          color="green"
                                        />
                                      </div>
                                      <div
                                        class="sc-kGXeez dCpFuT"
                                      >
                                        <p
                                          class="sc-kpOJdX bxSrEP"
                                        >
                                          test
                                        </p>
                                        <p
                                          class="sc-fjdhpX gAKYZH"
                                        />
                                      </div>
                                      <p
                                        class="sc-dxgOiQ eGtYgX"
                                      />
                                    </div>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "chat": Object {
                                              "id": 1,
                                              "messages": Array [],
                                              "users": Array [
                                                Object {
                                                  "avatar": "test",
                                                  "id": 1,
                                                  "name": "test",
                                                  "status": "Online",
                                                },
                                                Object {
                                                  "avatar": "test2",
                                                  "id": 2,
                                                  "name": "test2",
                                                  "status": "Online",
                                                },
                                              ],
                                            },
                                            "isActive": "",
                                            "onChangeChat": [MockFunction] {
                                              "calls": [Circular],
                                            },
                                            "user": Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "chat": Object {
                                              "id": 1,
                                              "messages": Array [],
                                              "users": Array [
                                                Object {
                                                  "avatar": "test",
                                                  "id": 1,
                                                  "name": "test",
                                                  "status": "Online",
                                                },
                                                Object {
                                                  "avatar": "test2",
                                                  "id": 2,
                                                  "name": "test2",
                                                  "status": "Online",
                                                },
                                              ],
                                            },
                                            "isActive": "",
                                            "onChangeChat": [MockFunction] {
                                              "calls": [Circular],
                                            },
                                            "user": Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="sc-kAzzGY dxEwPq"
                                  >
                                    <div
                                      class="sc-chPdSV gWxTLm"
                                    >
                                      <img
                                        bordercolor="white"
                                        bordersize="1px"
                                        class="ui tiny circular image sc-ifAKCX irlmET"
                                        maxheight="65px"
                                        maxwidth="65px"
                                        src="test"
                                      />
                                      <span
                                        class="sc-kgoBCf gMvtpI"
                                        color="green"
                                      />
                                    </div>
                                    <div
                                      class="sc-kGXeez dCpFuT"
                                    >
                                      <p
                                        class="sc-kpOJdX bxSrEP"
                                      >
                                        test
                                      </p>
                                      <p
                                        class="sc-fjdhpX gAKYZH"
                                      />
                                    </div>
                                    <p
                                      class="sc-dxgOiQ eGtYgX"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 51,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <styled.div>
                                  <Styled(Image)
                                    bordercolor="white"
                                    bordersize="1px"
                                    circular={true}
                                    maxheight="65px"
                                    maxwidth="65px"
                                    size="tiny"
                                    src="test"
                                  />
                                  <styled.span
                                    color="green"
                                  />
                                </styled.div>,
                                <styled.div>
                                  <styled.p>
                                    test
                                  </styled.p>
                                  <styled.p>
                                    
                                  </styled.p>
                                </styled.div>,
                                <styled.p>
                                  
                                </styled.p>,
                              ],
                              "className": "",
                              "onClick": [MockFunction] {
                                "calls": [Circular],
                              },
                            },
                            "memoizedState": Object {
                              "generatedClassName": "dxEwPq",
                              "theme": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <styled.div>
                                  <Styled(Image)
                                    bordercolor="white"
                                    bordersize="1px"
                                    circular={true}
                                    maxheight="65px"
                                    maxwidth="65px"
                                    size="tiny"
                                    src="test"
                                  />
                                  <styled.span
                                    color="green"
                                  />
                                </styled.div>,
                                <styled.div>
                                  <styled.p>
                                    test
                                  </styled.p>
                                  <styled.p>
                                    
                                  </styled.p>
                                </styled.div>,
                                <styled.p>
                                  
                                </styled.p>,
                              ],
                              "className": "",
                              "onClick": [MockFunction] {
                                "calls": [Circular],
                              },
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": StyledComponent {
                              "__reactInternalMemoizedMaskedChildContext": Object {
                                "__styled-components-stylesheet__": undefined,
                                "__styled-components__": undefined,
                                "__styled-components__next__": undefined,
                              },
                              "__reactInternalMemoizedUnmaskedChildContext": Object {},
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "attrs": Object {},
                              "context": Object {
                                "__styled-components-stylesheet__": undefined,
                                "__styled-components__": undefined,
                                "__styled-components__next__": undefined,
                              },
                              "props": Object {
                                "children": Array [
                                  <styled.div>
                                    <Styled(Image)
                                      bordercolor="white"
                                      bordersize="1px"
                                      circular={true}
                                      maxheight="65px"
                                      maxwidth="65px"
                                      size="tiny"
                                      src="test"
                                    />
                                    <styled.span
                                      color="green"
                                    />
                                  </styled.div>,
                                  <styled.div>
                                    <styled.p>
                                      test
                                    </styled.p>
                                    <styled.p>
                                      
                                    </styled.p>
                                  </styled.div>,
                                  <styled.p>
                                    
                                  </styled.p>,
                                ],
                                "className": "",
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "generatedClassName": "dxEwPq",
                                "theme": null,
                              },
                              "unsubscribeId": -1,
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": Object {
                              "baseState": Object {
                                "generatedClassName": "dxEwPq",
                                "theme": null,
                              },
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": null,
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": null,
                            },
                          },
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 49,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 1,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                      class="sc-kAzzGY dxEwPq"
                                    >
                                      <div
                                        class="sc-chPdSV gWxTLm"
                                      >
                                        <img
                                          bordercolor="white"
                                          bordersize="1px"
                                          class="ui tiny circular image sc-ifAKCX irlmET"
                                          maxheight="65px"
                                          maxwidth="65px"
                                          src="test"
                                        />
                                        <span
                                          class="sc-kgoBCf gMvtpI"
                                          color="green"
                                        />
                                      </div>
                                      <div
                                        class="sc-kGXeez dCpFuT"
                                      >
                                        <p
                                          class="sc-kpOJdX bxSrEP"
                                        >
                                          test
                                        </p>
                                        <p
                                          class="sc-fjdhpX gAKYZH"
                                        />
                                      </div>
                                      <p
                                        class="sc-dxgOiQ eGtYgX"
                                      />
                                    </div>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "chat": Object {
                                              "id": 1,
                                              "messages": Array [],
                                              "users": Array [
                                                Object {
                                                  "avatar": "test",
                                                  "id": 1,
                                                  "name": "test",
                                                  "status": "Online",
                                                },
                                                Object {
                                                  "avatar": "test2",
                                                  "id": 2,
                                                  "name": "test2",
                                                  "status": "Online",
                                                },
                                              ],
                                            },
                                            "isActive": "",
                                            "onChangeChat": [MockFunction] {
                                              "calls": [Circular],
                                            },
                                            "user": Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "chat": Object {
                                              "id": 1,
                                              "messages": Array [],
                                              "users": Array [
                                                Object {
                                                  "avatar": "test",
                                                  "id": 1,
                                                  "name": "test",
                                                  "status": "Online",
                                                },
                                                Object {
                                                  "avatar": "test2",
                                                  "id": 2,
                                                  "name": "test2",
                                                  "status": "Online",
                                                },
                                              ],
                                            },
                                            "isActive": "",
                                            "onChangeChat": [MockFunction] {
                                              "calls": [Circular],
                                            },
                                            "user": Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="sc-kAzzGY dxEwPq"
                                  >
                                    <div
                                      class="sc-chPdSV gWxTLm"
                                    >
                                      <img
                                        bordercolor="white"
                                        bordersize="1px"
                                        class="ui tiny circular image sc-ifAKCX irlmET"
                                        maxheight="65px"
                                        maxwidth="65px"
                                        src="test"
                                      />
                                      <span
                                        class="sc-kgoBCf gMvtpI"
                                        color="green"
                                      />
                                    </div>
                                    <div
                                      class="sc-kGXeez dCpFuT"
                                    >
                                      <p
                                        class="sc-kpOJdX bxSrEP"
                                      >
                                        test
                                      </p>
                                      <p
                                        class="sc-fjdhpX gAKYZH"
                                      />
                                    </div>
                                    <p
                                      class="sc-dxgOiQ eGtYgX"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 65,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "test",
                            "className": "sc-kpOJdX bxSrEP",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "test",
                            "className": "sc-kpOJdX bxSrEP",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <p
                            class="sc-kpOJdX bxSrEP"
                          >
                            test
                          </p>,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "p",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "test",
                        },
                        "memoizedState": Object {
                          "generatedClassName": "bxSrEP",
                          "theme": null,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "test",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 64,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 50,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": FiberNode {
                              "_debugID": 49,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugID": 47,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 1,
                                  "effectTag": 0,
                                  "expirationTime": 1,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": Object {
                                    "containerInfo": <div>
                                      <div
                                        class="sc-kAzzGY dxEwPq"
                                      >
                                        <div
                                          class="sc-chPdSV gWxTLm"
                                        >
                                          <img
                                            bordercolor="white"
                                            bordersize="1px"
                                            class="ui tiny circular image sc-ifAKCX irlmET"
                                            maxheight="65px"
                                            maxwidth="65px"
                                            src="test"
                                          />
                                          <span
                                            class="sc-kgoBCf gMvtpI"
                                            color="green"
                                          />
                                        </div>
                                        <div
                                          class="sc-kGXeez dCpFuT"
                                        >
                                          <p
                                            class="sc-kpOJdX bxSrEP"
                                          >
                                            test
                                          </p>
                                          <p
                                            class="sc-fjdhpX gAKYZH"
                                          />
                                        </div>
                                        <p
                                          class="sc-dxgOiQ eGtYgX"
                                        />
                                      </div>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "didError": false,
                                    "earliestPendingTime": 0,
                                    "earliestSuspendedTime": 0,
                                    "expirationTime": 0,
                                    "finishedWork": null,
                                    "firstBatch": null,
                                    "hydrate": false,
                                    "interactionThreadID": 12,
                                    "latestPendingTime": 0,
                                    "latestPingedTime": 0,
                                    "latestSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextExpirationTimeToWorkOn": 0,
                                    "nextScheduledRoot": null,
                                    "pendingChildren": null,
                                    "pendingCommitExpirationTime": 0,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "chat": Object {
                                                "id": 1,
                                                "messages": Array [],
                                                "users": Array [
                                                  Object {
                                                    "avatar": "test",
                                                    "id": 1,
                                                    "name": "test",
                                                    "status": "Online",
                                                  },
                                                  Object {
                                                    "avatar": "test2",
                                                    "id": 2,
                                                    "name": "test2",
                                                    "status": "Online",
                                                  },
                                                ],
                                              },
                                              "isActive": "",
                                              "onChangeChat": [MockFunction] {
                                                "calls": [Circular],
                                              },
                                              "user": Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "chat": Object {
                                                "id": 1,
                                                "messages": Array [],
                                                "users": Array [
                                                  Object {
                                                    "avatar": "test",
                                                    "id": 1,
                                                    "name": "test",
                                                    "status": "Online",
                                                  },
                                                  Object {
                                                    "avatar": "test2",
                                                    "id": 2,
                                                    "name": "test2",
                                                    "status": "Online",
                                                  },
                                                ],
                                              },
                                              "isActive": "",
                                              "onChangeChat": [MockFunction] {
                                                "calls": [Circular],
                                              },
                                              "user": Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "effectTag": 32,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                      class="sc-kAzzGY dxEwPq"
                                    >
                                      <div
                                        class="sc-chPdSV gWxTLm"
                                      >
                                        <img
                                          bordercolor="white"
                                          bordersize="1px"
                                          class="ui tiny circular image sc-ifAKCX irlmET"
                                          maxheight="65px"
                                          maxwidth="65px"
                                          src="test"
                                        />
                                        <span
                                          class="sc-kgoBCf gMvtpI"
                                          color="green"
                                        />
                                      </div>
                                      <div
                                        class="sc-kGXeez dCpFuT"
                                      >
                                        <p
                                          class="sc-kpOJdX bxSrEP"
                                        >
                                          test
                                        </p>
                                        <p
                                          class="sc-fjdhpX gAKYZH"
                                        />
                                      </div>
                                      <p
                                        class="sc-dxgOiQ eGtYgX"
                                      />
                                    </div>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "chat": Object {
                                            "id": 1,
                                            "messages": Array [],
                                            "users": Array [
                                              Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                              Object {
                                                "avatar": "test2",
                                                "id": 2,
                                                "name": "test2",
                                                "status": "Online",
                                              },
                                            ],
                                          },
                                          "isActive": "",
                                          "onChangeChat": [MockFunction] {
                                            "calls": [Circular],
                                          },
                                          "user": Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                        }
                                      }
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  },
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  },
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 2,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 51,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <styled.div>
                                    <Styled(Image)
                                      bordercolor="white"
                                      bordersize="1px"
                                      circular={true}
                                      maxheight="65px"
                                      maxwidth="65px"
                                      size="tiny"
                                      src="test"
                                    />
                                    <styled.span
                                      color="green"
                                    />
                                  </styled.div>,
                                  <styled.div>
                                    <styled.p>
                                      test
                                    </styled.p>
                                    <styled.p>
                                      
                                    </styled.p>
                                  </styled.div>,
                                  <styled.p>
                                    
                                  </styled.p>,
                                ],
                                "className": "",
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                },
                              },
                              "memoizedState": Object {
                                "generatedClassName": "dxEwPq",
                                "theme": null,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": Array [
                                  <styled.div>
                                    <Styled(Image)
                                      bordercolor="white"
                                      bordersize="1px"
                                      circular={true}
                                      maxheight="65px"
                                      maxwidth="65px"
                                      size="tiny"
                                      src="test"
                                    />
                                    <styled.span
                                      color="green"
                                    />
                                  </styled.div>,
                                  <styled.div>
                                    <styled.p>
                                      test
                                    </styled.p>
                                    <styled.p>
                                      
                                    </styled.p>
                                  </styled.div>,
                                  <styled.p>
                                    
                                  </styled.p>,
                                ],
                                "className": "",
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                },
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": StyledComponent {
                                "__reactInternalMemoizedMaskedChildContext": Object {
                                  "__styled-components-stylesheet__": undefined,
                                  "__styled-components__": undefined,
                                  "__styled-components__next__": undefined,
                                },
                                "__reactInternalMemoizedUnmaskedChildContext": Object {},
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "attrs": Object {},
                                "context": Object {
                                  "__styled-components-stylesheet__": undefined,
                                  "__styled-components__": undefined,
                                  "__styled-components__next__": undefined,
                                },
                                "props": Object {
                                  "children": Array [
                                    <styled.div>
                                      <Styled(Image)
                                        bordercolor="white"
                                        bordersize="1px"
                                        circular={true}
                                        maxheight="65px"
                                        maxwidth="65px"
                                        size="tiny"
                                        src="test"
                                      />
                                      <styled.span
                                        color="green"
                                      />
                                    </styled.div>,
                                    <styled.div>
                                      <styled.p>
                                        test
                                      </styled.p>
                                      <styled.p>
                                        
                                      </styled.p>
                                    </styled.div>,
                                    <styled.p>
                                      
                                    </styled.p>,
                                  ],
                                  "className": "",
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                },
                                "refs": Object {},
                                "state": Object {
                                  "generatedClassName": "dxEwPq",
                                  "theme": null,
                                },
                                "unsubscribeId": -1,
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 2,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": Object {
                                "baseState": Object {
                                  "generatedClassName": "dxEwPq",
                                  "theme": null,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 49,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugID": 47,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 1,
                                  "effectTag": 0,
                                  "expirationTime": 1,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": Object {
                                    "containerInfo": <div>
                                      <div
                                        class="sc-kAzzGY dxEwPq"
                                      >
                                        <div
                                          class="sc-chPdSV gWxTLm"
                                        >
                                          <img
                                            bordercolor="white"
                                            bordersize="1px"
                                            class="ui tiny circular image sc-ifAKCX irlmET"
                                            maxheight="65px"
                                            maxwidth="65px"
                                            src="test"
                                          />
                                          <span
                                            class="sc-kgoBCf gMvtpI"
                                            color="green"
                                          />
                                        </div>
                                        <div
                                          class="sc-kGXeez dCpFuT"
                                        >
                                          <p
                                            class="sc-kpOJdX bxSrEP"
                                          >
                                            test
                                          </p>
                                          <p
                                            class="sc-fjdhpX gAKYZH"
                                          />
                                        </div>
                                        <p
                                          class="sc-dxgOiQ eGtYgX"
                                        />
                                      </div>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "didError": false,
                                    "earliestPendingTime": 0,
                                    "earliestSuspendedTime": 0,
                                    "expirationTime": 0,
                                    "finishedWork": null,
                                    "firstBatch": null,
                                    "hydrate": false,
                                    "interactionThreadID": 12,
                                    "latestPendingTime": 0,
                                    "latestPingedTime": 0,
                                    "latestSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextExpirationTimeToWorkOn": 0,
                                    "nextScheduledRoot": null,
                                    "pendingChildren": null,
                                    "pendingCommitExpirationTime": 0,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "chat": Object {
                                                "id": 1,
                                                "messages": Array [],
                                                "users": Array [
                                                  Object {
                                                    "avatar": "test",
                                                    "id": 1,
                                                    "name": "test",
                                                    "status": "Online",
                                                  },
                                                  Object {
                                                    "avatar": "test2",
                                                    "id": 2,
                                                    "name": "test2",
                                                    "status": "Online",
                                                  },
                                                ],
                                              },
                                              "isActive": "",
                                              "onChangeChat": [MockFunction] {
                                                "calls": [Circular],
                                              },
                                              "user": Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "chat": Object {
                                                "id": 1,
                                                "messages": Array [],
                                                "users": Array [
                                                  Object {
                                                    "avatar": "test",
                                                    "id": 1,
                                                    "name": "test",
                                                    "status": "Online",
                                                  },
                                                  Object {
                                                    "avatar": "test2",
                                                    "id": 2,
                                                    "name": "test2",
                                                    "status": "Online",
                                                  },
                                                ],
                                              },
                                              "isActive": "",
                                              "onChangeChat": [MockFunction] {
                                                "calls": [Circular],
                                              },
                                              "user": Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "effectTag": 32,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                      class="sc-kAzzGY dxEwPq"
                                    >
                                      <div
                                        class="sc-chPdSV gWxTLm"
                                      >
                                        <img
                                          bordercolor="white"
                                          bordersize="1px"
                                          class="ui tiny circular image sc-ifAKCX irlmET"
                                          maxheight="65px"
                                          maxwidth="65px"
                                          src="test"
                                        />
                                        <span
                                          class="sc-kgoBCf gMvtpI"
                                          color="green"
                                        />
                                      </div>
                                      <div
                                        class="sc-kGXeez dCpFuT"
                                      >
                                        <p
                                          class="sc-kpOJdX bxSrEP"
                                        >
                                          test
                                        </p>
                                        <p
                                          class="sc-fjdhpX gAKYZH"
                                        />
                                      </div>
                                      <p
                                        class="sc-dxgOiQ eGtYgX"
                                      />
                                    </div>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "chat": Object {
                                            "id": 1,
                                            "messages": Array [],
                                            "users": Array [
                                              Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                              Object {
                                                "avatar": "test2",
                                                "id": 2,
                                                "name": "test2",
                                                "status": "Online",
                                              },
                                            ],
                                          },
                                          "isActive": "",
                                          "onChangeChat": [MockFunction] {
                                            "calls": [Circular],
                                          },
                                          "user": Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                        }
                                      }
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  },
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  },
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 2,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": null,
                            "tag": 0,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 66,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "",
                              "className": "sc-fjdhpX gAKYZH",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "",
                              "className": "sc-fjdhpX gAKYZH",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <p
                              class="sc-fjdhpX gAKYZH"
                            />,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "p",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "",
                          },
                          "memoizedState": Object {
                            "generatedClassName": "gAKYZH",
                            "theme": null,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": StyledComponent {
                            "__reactInternalMemoizedMaskedChildContext": Object {
                              "__styled-components-stylesheet__": undefined,
                              "__styled-components__": undefined,
                              "__styled-components__next__": undefined,
                            },
                            "__reactInternalMemoizedUnmaskedChildContext": Object {},
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "attrs": Object {},
                            "context": Object {
                              "__styled-components-stylesheet__": undefined,
                              "__styled-components__": undefined,
                              "__styled-components__next__": undefined,
                            },
                            "props": Object {
                              "children": "",
                            },
                            "refs": Object {},
                            "state": Object {
                              "generatedClassName": "gAKYZH",
                              "theme": null,
                            },
                            "unsubscribeId": -1,
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": Object {
                            "baseState": Object {
                              "generatedClassName": "gAKYZH",
                              "theme": null,
                            },
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "stateNode": StyledComponent {
                          "__reactInternalMemoizedMaskedChildContext": Object {
                            "__styled-components-stylesheet__": undefined,
                            "__styled-components__": undefined,
                            "__styled-components__next__": undefined,
                          },
                          "__reactInternalMemoizedUnmaskedChildContext": Object {},
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "attrs": Object {},
                          "context": Object {
                            "__styled-components-stylesheet__": undefined,
                            "__styled-components__": undefined,
                            "__styled-components__next__": undefined,
                          },
                          "props": Object {
                            "children": "test",
                          },
                          "refs": Object {},
                          "state": Object {
                            "generatedClassName": "bxSrEP",
                            "theme": null,
                          },
                          "unsubscribeId": -1,
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": Object {
                          "baseState": Object {
                            "generatedClassName": "bxSrEP",
                            "theme": null,
                          },
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <styled.p>
                            test
                          </styled.p>,
                          <styled.p>
                            
                          </styled.p>,
                        ],
                        "className": "sc-kGXeez dCpFuT",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <styled.p>
                            test
                          </styled.p>,
                          <styled.p>
                            
                          </styled.p>,
                        ],
                        "className": "sc-kGXeez dCpFuT",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="sc-kGXeez dCpFuT"
                      >
                        <p
                          class="sc-kpOJdX bxSrEP"
                        >
                          test
                        </p>
                        <p
                          class="sc-fjdhpX gAKYZH"
                        />
                      </div>,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <styled.p>
                          test
                        </styled.p>,
                        <styled.p>
                          
                        </styled.p>,
                      ],
                    },
                    "memoizedState": Object {
                      "generatedClassName": "dCpFuT",
                      "theme": null,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <styled.p>
                          test
                        </styled.p>,
                        <styled.p>
                          
                        </styled.p>,
                      ],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 55,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 50,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 49,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 47,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": [Circular],
                              "child": null,
                              "childExpirationTime": 1,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="sc-kAzzGY dxEwPq"
                                  >
                                    <div
                                      class="sc-chPdSV gWxTLm"
                                    >
                                      <img
                                        bordercolor="white"
                                        bordersize="1px"
                                        class="ui tiny circular image sc-ifAKCX irlmET"
                                        maxheight="65px"
                                        maxwidth="65px"
                                        src="test"
                                      />
                                      <span
                                        class="sc-kgoBCf gMvtpI"
                                        color="green"
                                      />
                                    </div>
                                    <div
                                      class="sc-kGXeez dCpFuT"
                                    >
                                      <p
                                        class="sc-kpOJdX bxSrEP"
                                      >
                                        test
                                      </p>
                                      <p
                                        class="sc-fjdhpX gAKYZH"
                                      />
                                    </div>
                                    <p
                                      class="sc-dxgOiQ eGtYgX"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "chat": Object {
                                            "id": 1,
                                            "messages": Array [],
                                            "users": Array [
                                              Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                              Object {
                                                "avatar": "test2",
                                                "id": 2,
                                                "name": "test2",
                                                "status": "Online",
                                              },
                                            ],
                                          },
                                          "isActive": "",
                                          "onChangeChat": [MockFunction] {
                                            "calls": [Circular],
                                          },
                                          "user": Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                        }
                                      }
                                    />,
                                  },
                                  "tag": 0,
                                },
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "chat": Object {
                                            "id": 1,
                                            "messages": Array [],
                                            "users": Array [
                                              Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                              Object {
                                                "avatar": "test2",
                                                "id": 2,
                                                "name": "test2",
                                                "status": "Online",
                                              },
                                            ],
                                          },
                                          "isActive": "",
                                          "onChangeChat": [MockFunction] {
                                            "calls": [Circular],
                                          },
                                          "user": Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                        }
                                      }
                                    />,
                                  },
                                  "tag": 0,
                                },
                              },
                            },
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="sc-kAzzGY dxEwPq"
                                >
                                  <div
                                    class="sc-chPdSV gWxTLm"
                                  >
                                    <img
                                      bordercolor="white"
                                      bordersize="1px"
                                      class="ui tiny circular image sc-ifAKCX irlmET"
                                      maxheight="65px"
                                      maxwidth="65px"
                                      src="test"
                                    />
                                    <span
                                      class="sc-kgoBCf gMvtpI"
                                      color="green"
                                    />
                                  </div>
                                  <div
                                    class="sc-kGXeez dCpFuT"
                                  >
                                    <p
                                      class="sc-kpOJdX bxSrEP"
                                    >
                                      test
                                    </p>
                                    <p
                                      class="sc-fjdhpX gAKYZH"
                                    />
                                  </div>
                                  <p
                                    class="sc-dxgOiQ eGtYgX"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "didError": false,
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "expirationTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "interactionThreadID": 12,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "memoizedInteractions": Set {},
                              "nextExpirationTimeToWorkOn": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "timeoutHandle": -1,
                            },
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": null,
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": null,
                            },
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 51,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <styled.div>
                                <Styled(Image)
                                  bordercolor="white"
                                  bordersize="1px"
                                  circular={true}
                                  maxheight="65px"
                                  maxwidth="65px"
                                  size="tiny"
                                  src="test"
                                />
                                <styled.span
                                  color="green"
                                />
                              </styled.div>,
                              <styled.div>
                                <styled.p>
                                  test
                                </styled.p>
                                <styled.p>
                                  
                                </styled.p>
                              </styled.div>,
                              <styled.p>
                                
                              </styled.p>,
                            ],
                            "className": "",
                            "onClick": [MockFunction] {
                              "calls": [Circular],
                            },
                          },
                          "memoizedState": Object {
                            "generatedClassName": "dxEwPq",
                            "theme": null,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <styled.div>
                                <Styled(Image)
                                  bordercolor="white"
                                  bordersize="1px"
                                  circular={true}
                                  maxheight="65px"
                                  maxwidth="65px"
                                  size="tiny"
                                  src="test"
                                />
                                <styled.span
                                  color="green"
                                />
                              </styled.div>,
                              <styled.div>
                                <styled.p>
                                  test
                                </styled.p>
                                <styled.p>
                                  
                                </styled.p>
                              </styled.div>,
                              <styled.p>
                                
                              </styled.p>,
                            ],
                            "className": "",
                            "onClick": [MockFunction] {
                              "calls": [Circular],
                            },
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": StyledComponent {
                            "__reactInternalMemoizedMaskedChildContext": Object {
                              "__styled-components-stylesheet__": undefined,
                              "__styled-components__": undefined,
                              "__styled-components__next__": undefined,
                            },
                            "__reactInternalMemoizedUnmaskedChildContext": Object {},
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "attrs": Object {},
                            "context": Object {
                              "__styled-components-stylesheet__": undefined,
                              "__styled-components__": undefined,
                              "__styled-components__next__": undefined,
                            },
                            "props": Object {
                              "children": Array [
                                <styled.div>
                                  <Styled(Image)
                                    bordercolor="white"
                                    bordersize="1px"
                                    circular={true}
                                    maxheight="65px"
                                    maxwidth="65px"
                                    size="tiny"
                                    src="test"
                                  />
                                  <styled.span
                                    color="green"
                                  />
                                </styled.div>,
                                <styled.div>
                                  <styled.p>
                                    test
                                  </styled.p>
                                  <styled.p>
                                    
                                  </styled.p>
                                </styled.div>,
                                <styled.p>
                                  
                                </styled.p>,
                              ],
                              "className": "",
                              "onClick": [MockFunction] {
                                "calls": [Circular],
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "generatedClassName": "dxEwPq",
                              "theme": null,
                            },
                            "unsubscribeId": -1,
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": Object {
                            "baseState": Object {
                              "generatedClassName": "dxEwPq",
                              "theme": null,
                            },
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "childExpirationTime": 0,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 49,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 47,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": [Circular],
                              "child": null,
                              "childExpirationTime": 1,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="sc-kAzzGY dxEwPq"
                                  >
                                    <div
                                      class="sc-chPdSV gWxTLm"
                                    >
                                      <img
                                        bordercolor="white"
                                        bordersize="1px"
                                        class="ui tiny circular image sc-ifAKCX irlmET"
                                        maxheight="65px"
                                        maxwidth="65px"
                                        src="test"
                                      />
                                      <span
                                        class="sc-kgoBCf gMvtpI"
                                        color="green"
                                      />
                                    </div>
                                    <div
                                      class="sc-kGXeez dCpFuT"
                                    >
                                      <p
                                        class="sc-kpOJdX bxSrEP"
                                      >
                                        test
                                      </p>
                                      <p
                                        class="sc-fjdhpX gAKYZH"
                                      />
                                    </div>
                                    <p
                                      class="sc-dxgOiQ eGtYgX"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "chat": Object {
                                            "id": 1,
                                            "messages": Array [],
                                            "users": Array [
                                              Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                              Object {
                                                "avatar": "test2",
                                                "id": 2,
                                                "name": "test2",
                                                "status": "Online",
                                              },
                                            ],
                                          },
                                          "isActive": "",
                                          "onChangeChat": [MockFunction] {
                                            "calls": [Circular],
                                          },
                                          "user": Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                        }
                                      }
                                    />,
                                  },
                                  "tag": 0,
                                },
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "chat": Object {
                                            "id": 1,
                                            "messages": Array [],
                                            "users": Array [
                                              Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                              Object {
                                                "avatar": "test2",
                                                "id": 2,
                                                "name": "test2",
                                                "status": "Online",
                                              },
                                            ],
                                          },
                                          "isActive": "",
                                          "onChangeChat": [MockFunction] {
                                            "calls": [Circular],
                                          },
                                          "user": Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                        }
                                      }
                                    />,
                                  },
                                  "tag": 0,
                                },
                              },
                            },
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="sc-kAzzGY dxEwPq"
                                >
                                  <div
                                    class="sc-chPdSV gWxTLm"
                                  >
                                    <img
                                      bordercolor="white"
                                      bordersize="1px"
                                      class="ui tiny circular image sc-ifAKCX irlmET"
                                      maxheight="65px"
                                      maxwidth="65px"
                                      src="test"
                                    />
                                    <span
                                      class="sc-kgoBCf gMvtpI"
                                      color="green"
                                    />
                                  </div>
                                  <div
                                    class="sc-kGXeez dCpFuT"
                                  >
                                    <p
                                      class="sc-kpOJdX bxSrEP"
                                    >
                                      test
                                    </p>
                                    <p
                                      class="sc-fjdhpX gAKYZH"
                                    />
                                  </div>
                                  <p
                                    class="sc-dxgOiQ eGtYgX"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "didError": false,
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "expirationTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "interactionThreadID": 12,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "memoizedInteractions": Set {},
                              "nextExpirationTimeToWorkOn": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "timeoutHandle": -1,
                            },
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": null,
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": null,
                            },
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 0,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 67,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "",
                          "className": "sc-dxgOiQ eGtYgX",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "",
                          "className": "sc-dxgOiQ eGtYgX",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <p
                          class="sc-dxgOiQ eGtYgX"
                        />,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "p",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "",
                      },
                      "memoizedState": Object {
                        "generatedClassName": "eGtYgX",
                        "theme": null,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": StyledComponent {
                        "__reactInternalMemoizedMaskedChildContext": Object {
                          "__styled-components-stylesheet__": undefined,
                          "__styled-components__": undefined,
                          "__styled-components__next__": undefined,
                        },
                        "__reactInternalMemoizedUnmaskedChildContext": Object {},
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "attrs": Object {},
                        "context": Object {
                          "__styled-components-stylesheet__": undefined,
                          "__styled-components__": undefined,
                          "__styled-components__next__": undefined,
                        },
                        "props": Object {
                          "children": "",
                        },
                        "refs": Object {},
                        "state": Object {
                          "generatedClassName": "eGtYgX",
                          "theme": null,
                        },
                        "unsubscribeId": -1,
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": Object {
                        "baseState": Object {
                          "generatedClassName": "eGtYgX",
                          "theme": null,
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "stateNode": StyledComponent {
                      "__reactInternalMemoizedMaskedChildContext": Object {
                        "__styled-components-stylesheet__": undefined,
                        "__styled-components__": undefined,
                        "__styled-components__next__": undefined,
                      },
                      "__reactInternalMemoizedUnmaskedChildContext": Object {},
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "attrs": Object {},
                      "context": Object {
                        "__styled-components-stylesheet__": undefined,
                        "__styled-components__": undefined,
                        "__styled-components__next__": undefined,
                      },
                      "props": Object {
                        "children": Array [
                          <styled.p>
                            test
                          </styled.p>,
                          <styled.p>
                            
                          </styled.p>,
                        ],
                      },
                      "refs": Object {},
                      "state": Object {
                        "generatedClassName": "dCpFuT",
                        "theme": null,
                      },
                      "unsubscribeId": -1,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseState": Object {
                        "generatedClassName": "dCpFuT",
                        "theme": null,
                      },
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": null,
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": null,
                    },
                  },
                  "stateNode": StyledComponent {
                    "__reactInternalMemoizedMaskedChildContext": Object {
                      "__styled-components-stylesheet__": undefined,
                      "__styled-components__": undefined,
                      "__styled-components__next__": undefined,
                    },
                    "__reactInternalMemoizedUnmaskedChildContext": Object {},
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "attrs": Object {},
                    "context": Object {
                      "__styled-components-stylesheet__": undefined,
                      "__styled-components__": undefined,
                      "__styled-components__next__": undefined,
                    },
                    "props": Object {
                      "children": Array [
                        <Styled(Image)
                          bordercolor="white"
                          bordersize="1px"
                          circular={true}
                          maxheight="65px"
                          maxwidth="65px"
                          size="tiny"
                          src="test"
                        />,
                        <styled.span
                          color="green"
                        />,
                      ],
                    },
                    "refs": Object {},
                    "state": Object {
                      "generatedClassName": "gWxTLm",
                      "theme": null,
                    },
                    "unsubscribeId": -1,
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "baseState": Object {
                      "generatedClassName": "gWxTLm",
                      "theme": null,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <styled.div>
                      <Styled(Image)
                        bordercolor="white"
                        bordersize="1px"
                        circular={true}
                        maxheight="65px"
                        maxwidth="65px"
                        size="tiny"
                        src="test"
                      />
                      <styled.span
                        color="green"
                      />
                    </styled.div>,
                    <styled.div>
                      <styled.p>
                        test
                      </styled.p>
                      <styled.p>
                        
                      </styled.p>
                    </styled.div>,
                    <styled.p>
                      
                    </styled.p>,
                  ],
                  "className": "sc-kAzzGY dxEwPq",
                  "onClick": [MockFunction] {
                    "calls": [Circular],
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <styled.div>
                      <Styled(Image)
                        bordercolor="white"
                        bordersize="1px"
                        circular={true}
                        maxheight="65px"
                        maxwidth="65px"
                        size="tiny"
                        src="test"
                      />
                      <styled.span
                        color="green"
                      />
                    </styled.div>,
                    <styled.div>
                      <styled.p>
                        test
                      </styled.p>
                      <styled.p>
                        
                      </styled.p>
                    </styled.div>,
                    <styled.p>
                      
                    </styled.p>,
                  ],
                  "className": "sc-kAzzGY dxEwPq",
                  "onClick": [MockFunction] {
                    "calls": [Circular],
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 51,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 50,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 49,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 47,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": FiberNode {
                          "_debugID": 47,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": [Circular],
                          "child": null,
                          "childExpirationTime": 1,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="sc-kAzzGY dxEwPq"
                              >
                                <div
                                  class="sc-chPdSV gWxTLm"
                                >
                                  <img
                                    bordercolor="white"
                                    bordersize="1px"
                                    class="ui tiny circular image sc-ifAKCX irlmET"
                                    maxheight="65px"
                                    maxwidth="65px"
                                    src="test"
                                  />
                                  <span
                                    class="sc-kgoBCf gMvtpI"
                                    color="green"
                                  />
                                </div>
                                <div
                                  class="sc-kGXeez dCpFuT"
                                >
                                  <p
                                    class="sc-kpOJdX bxSrEP"
                                  >
                                    test
                                  </p>
                                  <p
                                    class="sc-fjdhpX gAKYZH"
                                  />
                                </div>
                                <p
                                  class="sc-dxgOiQ eGtYgX"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "didError": false,
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "expirationTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "interactionThreadID": 12,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextExpirationTimeToWorkOn": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "timeoutHandle": -1,
                          },
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "tag": 0,
                            },
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "tag": 0,
                            },
                          },
                        },
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              }
                            }
                          />,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                              class="sc-kAzzGY dxEwPq"
                            >
                              <div
                                class="sc-chPdSV gWxTLm"
                              >
                                <img
                                  bordercolor="white"
                                  bordersize="1px"
                                  class="ui tiny circular image sc-ifAKCX irlmET"
                                  maxheight="65px"
                                  maxwidth="65px"
                                  src="test"
                                />
                                <span
                                  class="sc-kgoBCf gMvtpI"
                                  color="green"
                                />
                              </div>
                              <div
                                class="sc-kGXeez dCpFuT"
                              >
                                <p
                                  class="sc-kpOJdX bxSrEP"
                                >
                                  test
                                </p>
                                <p
                                  class="sc-fjdhpX gAKYZH"
                                />
                              </div>
                              <p
                                class="sc-dxgOiQ eGtYgX"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 12,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "timeoutHandle": -1,
                        },
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                }
                              }
                            />,
                          },
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "chat": Object {
                        "id": 1,
                        "messages": Array [],
                        "users": Array [
                          Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                          Object {
                            "avatar": "test2",
                            "id": 2,
                            "name": "test2",
                            "status": "Online",
                          },
                        ],
                      },
                      "isActive": "",
                      "onChangeChat": [MockFunction] {
                        "calls": [Circular],
                      },
                      "user": Object {
                        "avatar": "test",
                        "id": 1,
                        "name": "test",
                        "status": "Online",
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "chat": Object {
                        "id": 1,
                        "messages": Array [],
                        "users": Array [
                          Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                          Object {
                            "avatar": "test2",
                            "id": 2,
                            "name": "test2",
                            "status": "Online",
                          },
                        ],
                      },
                      "isActive": "",
                      "onChangeChat": [MockFunction] {
                        "calls": [Circular],
                      },
                      "user": Object {
                        "avatar": "test",
                        "id": 1,
                        "name": "test",
                        "status": "Online",
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 49,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 47,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": FiberNode {
                          "_debugID": 47,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": [Circular],
                          "child": null,
                          "childExpirationTime": 1,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="sc-kAzzGY dxEwPq"
                              >
                                <div
                                  class="sc-chPdSV gWxTLm"
                                >
                                  <img
                                    bordercolor="white"
                                    bordersize="1px"
                                    class="ui tiny circular image sc-ifAKCX irlmET"
                                    maxheight="65px"
                                    maxwidth="65px"
                                    src="test"
                                  />
                                  <span
                                    class="sc-kgoBCf gMvtpI"
                                    color="green"
                                  />
                                </div>
                                <div
                                  class="sc-kGXeez dCpFuT"
                                >
                                  <p
                                    class="sc-kpOJdX bxSrEP"
                                  >
                                    test
                                  </p>
                                  <p
                                    class="sc-fjdhpX gAKYZH"
                                  />
                                </div>
                                <p
                                  class="sc-dxgOiQ eGtYgX"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "didError": false,
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "expirationTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "interactionThreadID": 12,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextExpirationTimeToWorkOn": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "timeoutHandle": -1,
                          },
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "tag": 0,
                            },
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "tag": 0,
                            },
                          },
                        },
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              }
                            }
                          />,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                              class="sc-kAzzGY dxEwPq"
                            >
                              <div
                                class="sc-chPdSV gWxTLm"
                              >
                                <img
                                  bordercolor="white"
                                  bordersize="1px"
                                  class="ui tiny circular image sc-ifAKCX irlmET"
                                  maxheight="65px"
                                  maxwidth="65px"
                                  src="test"
                                />
                                <span
                                  class="sc-kgoBCf gMvtpI"
                                  color="green"
                                />
                              </div>
                              <div
                                class="sc-kGXeez dCpFuT"
                              >
                                <p
                                  class="sc-kpOJdX bxSrEP"
                                >
                                  test
                                </p>
                                <p
                                  class="sc-fjdhpX gAKYZH"
                                />
                              </div>
                              <p
                                class="sc-dxgOiQ eGtYgX"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 12,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "timeoutHandle": -1,
                        },
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                }
                              }
                            />,
                          },
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 0,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <styled.div>
                        <Styled(Image)
                          bordercolor="white"
                          bordersize="1px"
                          circular={true}
                          maxheight="65px"
                          maxwidth="65px"
                          size="tiny"
                          src="test"
                        />
                        <styled.span
                          color="green"
                        />
                      </styled.div>,
                      <styled.div>
                        <styled.p>
                          test
                        </styled.p>
                        <styled.p>
                          
                        </styled.p>
                      </styled.div>,
                      <styled.p>
                        
                      </styled.p>,
                    ],
                    "className": "",
                    "onClick": [MockFunction] {
                      "calls": [Circular],
                    },
                  },
                  "memoizedState": Object {
                    "generatedClassName": "dxEwPq",
                    "theme": null,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <styled.div>
                        <Styled(Image)
                          bordercolor="white"
                          bordersize="1px"
                          circular={true}
                          maxheight="65px"
                          maxwidth="65px"
                          size="tiny"
                          src="test"
                        />
                        <styled.span
                          color="green"
                        />
                      </styled.div>,
                      <styled.div>
                        <styled.p>
                          test
                        </styled.p>
                        <styled.p>
                          
                        </styled.p>
                      </styled.div>,
                      <styled.p>
                        
                      </styled.p>,
                    ],
                    "className": "",
                    "onClick": [MockFunction] {
                      "calls": [Circular],
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 50,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 49,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 47,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": FiberNode {
                          "_debugID": 47,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": [Circular],
                          "child": null,
                          "childExpirationTime": 1,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="sc-kAzzGY dxEwPq"
                              >
                                <div
                                  class="sc-chPdSV gWxTLm"
                                >
                                  <img
                                    bordercolor="white"
                                    bordersize="1px"
                                    class="ui tiny circular image sc-ifAKCX irlmET"
                                    maxheight="65px"
                                    maxwidth="65px"
                                    src="test"
                                  />
                                  <span
                                    class="sc-kgoBCf gMvtpI"
                                    color="green"
                                  />
                                </div>
                                <div
                                  class="sc-kGXeez dCpFuT"
                                >
                                  <p
                                    class="sc-kpOJdX bxSrEP"
                                  >
                                    test
                                  </p>
                                  <p
                                    class="sc-fjdhpX gAKYZH"
                                  />
                                </div>
                                <p
                                  class="sc-dxgOiQ eGtYgX"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "didError": false,
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "expirationTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "interactionThreadID": 12,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextExpirationTimeToWorkOn": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "timeoutHandle": -1,
                          },
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "tag": 0,
                            },
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "tag": 0,
                            },
                          },
                        },
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              }
                            }
                          />,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                              class="sc-kAzzGY dxEwPq"
                            >
                              <div
                                class="sc-chPdSV gWxTLm"
                              >
                                <img
                                  bordercolor="white"
                                  bordersize="1px"
                                  class="ui tiny circular image sc-ifAKCX irlmET"
                                  maxheight="65px"
                                  maxwidth="65px"
                                  src="test"
                                />
                                <span
                                  class="sc-kgoBCf gMvtpI"
                                  color="green"
                                />
                              </div>
                              <div
                                class="sc-kGXeez dCpFuT"
                              >
                                <p
                                  class="sc-kpOJdX bxSrEP"
                                >
                                  test
                                </p>
                                <p
                                  class="sc-fjdhpX gAKYZH"
                                />
                              </div>
                              <p
                                class="sc-dxgOiQ eGtYgX"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 12,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "timeoutHandle": -1,
                        },
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                }
                              }
                            />,
                          },
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "chat": Object {
                        "id": 1,
                        "messages": Array [],
                        "users": Array [
                          Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                          Object {
                            "avatar": "test2",
                            "id": 2,
                            "name": "test2",
                            "status": "Online",
                          },
                        ],
                      },
                      "isActive": "",
                      "onChangeChat": [MockFunction] {
                        "calls": [Circular],
                      },
                      "user": Object {
                        "avatar": "test",
                        "id": 1,
                        "name": "test",
                        "status": "Online",
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "chat": Object {
                        "id": 1,
                        "messages": Array [],
                        "users": Array [
                          Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                          Object {
                            "avatar": "test2",
                            "id": 2,
                            "name": "test2",
                            "status": "Online",
                          },
                        ],
                      },
                      "isActive": "",
                      "onChangeChat": [MockFunction] {
                        "calls": [Circular],
                      },
                      "user": Object {
                        "avatar": "test",
                        "id": 1,
                        "name": "test",
                        "status": "Online",
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 49,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 47,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": FiberNode {
                          "_debugID": 47,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": [Circular],
                          "child": null,
                          "childExpirationTime": 1,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="sc-kAzzGY dxEwPq"
                              >
                                <div
                                  class="sc-chPdSV gWxTLm"
                                >
                                  <img
                                    bordercolor="white"
                                    bordersize="1px"
                                    class="ui tiny circular image sc-ifAKCX irlmET"
                                    maxheight="65px"
                                    maxwidth="65px"
                                    src="test"
                                  />
                                  <span
                                    class="sc-kgoBCf gMvtpI"
                                    color="green"
                                  />
                                </div>
                                <div
                                  class="sc-kGXeez dCpFuT"
                                >
                                  <p
                                    class="sc-kpOJdX bxSrEP"
                                  >
                                    test
                                  </p>
                                  <p
                                    class="sc-fjdhpX gAKYZH"
                                  />
                                </div>
                                <p
                                  class="sc-dxgOiQ eGtYgX"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "didError": false,
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "expirationTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "interactionThreadID": 12,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextExpirationTimeToWorkOn": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "timeoutHandle": -1,
                          },
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "tag": 0,
                            },
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": Object {
                              "callback": null,
                              "expirationTime": 1,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "tag": 0,
                            },
                          },
                        },
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              }
                            }
                          />,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <div
                              class="sc-kAzzGY dxEwPq"
                            >
                              <div
                                class="sc-chPdSV gWxTLm"
                              >
                                <img
                                  bordercolor="white"
                                  bordersize="1px"
                                  class="ui tiny circular image sc-ifAKCX irlmET"
                                  maxheight="65px"
                                  maxwidth="65px"
                                  src="test"
                                />
                                <span
                                  class="sc-kgoBCf gMvtpI"
                                  color="green"
                                />
                              </div>
                              <div
                                class="sc-kGXeez dCpFuT"
                              >
                                <p
                                  class="sc-kpOJdX bxSrEP"
                                >
                                  test
                                </p>
                                <p
                                  class="sc-fjdhpX gAKYZH"
                                />
                              </div>
                              <p
                                class="sc-dxgOiQ eGtYgX"
                              />
                            </div>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "didError": false,
                          "earliestPendingTime": 0,
                          "earliestSuspendedTime": 0,
                          "expirationTime": 0,
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "interactionThreadID": 12,
                          "latestPendingTime": 0,
                          "latestPingedTime": 0,
                          "latestSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextExpirationTimeToWorkOn": 0,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "timeoutHandle": -1,
                        },
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                }
                              }
                            />,
                          },
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 0,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": StyledComponent {
                    "__reactInternalMemoizedMaskedChildContext": Object {
                      "__styled-components-stylesheet__": undefined,
                      "__styled-components__": undefined,
                      "__styled-components__next__": undefined,
                    },
                    "__reactInternalMemoizedUnmaskedChildContext": Object {},
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "attrs": Object {},
                    "context": Object {
                      "__styled-components-stylesheet__": undefined,
                      "__styled-components__": undefined,
                      "__styled-components__next__": undefined,
                    },
                    "props": Object {
                      "children": Array [
                        <styled.div>
                          <Styled(Image)
                            bordercolor="white"
                            bordersize="1px"
                            circular={true}
                            maxheight="65px"
                            maxwidth="65px"
                            size="tiny"
                            src="test"
                          />
                          <styled.span
                            color="green"
                          />
                        </styled.div>,
                        <styled.div>
                          <styled.p>
                            test
                          </styled.p>
                          <styled.p>
                            
                          </styled.p>
                        </styled.div>,
                        <styled.p>
                          
                        </styled.p>,
                      ],
                      "className": "",
                      "onClick": [MockFunction] {
                        "calls": [Circular],
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "generatedClassName": "dxEwPq",
                      "theme": null,
                    },
                    "unsubscribeId": -1,
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "baseState": Object {
                      "generatedClassName": "dxEwPq",
                      "theme": null,
                    },
                    "firstCapturedEffect": null,
                    "firstCapturedUpdate": null,
                    "firstEffect": null,
                    "firstUpdate": null,
                    "lastCapturedEffect": null,
                    "lastCapturedUpdate": null,
                    "lastEffect": null,
                    "lastUpdate": null,
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div
                  class="sc-kAzzGY dxEwPq"
                >
                  <div
                    class="sc-chPdSV gWxTLm"
                  >
                    <img
                      bordercolor="white"
                      bordersize="1px"
                      class="ui tiny circular image sc-ifAKCX irlmET"
                      maxheight="65px"
                      maxwidth="65px"
                      src="test"
                    />
                    <span
                      class="sc-kgoBCf gMvtpI"
                      color="green"
                    />
                  </div>
                  <div
                    class="sc-kGXeez dCpFuT"
                  >
                    <p
                      class="sc-kpOJdX bxSrEP"
                    >
                      test
                    </p>
                    <p
                      class="sc-fjdhpX gAKYZH"
                    />
                  </div>
                  <p
                    class="sc-dxgOiQ eGtYgX"
                  />
                </div>,
                "tag": 7,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "bubbles": undefined,
              "cancelable": undefined,
              "currentTarget": null,
              "defaultPrevented": undefined,
              "dispatchConfig": Object {
                "dependencies": Array [
                  "click",
                ],
                "isInteractive": true,
                "phasedRegistrationNames": Object {
                  "bubbled": "onClick",
                  "captured": "onClickCapture",
                },
              },
              "eventPhase": undefined,
              "isDefaultPrevented": [Function],
              "isPersistent": [Function],
              "isPropagationStopped": [Function],
              "isTrusted": undefined,
              "nativeEvent": Event {
                "target": <div
                  class="sc-kAzzGY dxEwPq"
                >
                  <div
                    class="sc-chPdSV gWxTLm"
                  >
                    <img
                      bordercolor="white"
                      bordersize="1px"
                      class="ui tiny circular image sc-ifAKCX irlmET"
                      maxheight="65px"
                      maxwidth="65px"
                      src="test"
                    />
                    <span
                      class="sc-kgoBCf gMvtpI"
                      color="green"
                    />
                  </div>
                  <div
                    class="sc-kGXeez dCpFuT"
                  >
                    <p
                      class="sc-kpOJdX bxSrEP"
                    >
                      test
                    </p>
                    <p
                      class="sc-fjdhpX gAKYZH"
                    />
                  </div>
                  <p
                    class="sc-dxgOiQ eGtYgX"
                  />
                </div>,
                "type": "click",
              },
              "target": <div
                class="sc-kAzzGY dxEwPq"
              >
                <div
                  class="sc-chPdSV gWxTLm"
                >
                  <img
                    bordercolor="white"
                    bordersize="1px"
                    class="ui tiny circular image sc-ifAKCX irlmET"
                    maxheight="65px"
                    maxwidth="65px"
                    src="test"
                  />
                  <span
                    class="sc-kgoBCf gMvtpI"
                    color="green"
                  />
                </div>
                <div
                  class="sc-kGXeez dCpFuT"
                >
                  <p
                    class="sc-kpOJdX bxSrEP"
                  >
                    test
                  </p>
                  <p
                    class="sc-fjdhpX gAKYZH"
                  />
                </div>
                <p
                  class="sc-dxgOiQ eGtYgX"
                />
              </div>,
              "timeStamp": 2018-11-09T21:00:00.000Z,
              "type": "click",
            },
          ],
        ],
      }
    }
  >
    <div
      className="sc-kAzzGY dxEwPq"
      onClick={
        [MockFunction] {
          "calls": Array [
            Array [
              SyntheticEvent {
                "_dispatchInstances": null,
                "_dispatchListeners": null,
                "_targetInst": FiberNode {
                  "_debugID": 52,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 51,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 50,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 49,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 47,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugID": 47,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childExpirationTime": 1,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="sc-kAzzGY dxEwPq"
                                >
                                  <div
                                    class="sc-chPdSV gWxTLm"
                                  >
                                    <img
                                      bordercolor="white"
                                      bordersize="1px"
                                      class="ui tiny circular image sc-ifAKCX irlmET"
                                      maxheight="65px"
                                      maxwidth="65px"
                                      src="test"
                                    />
                                    <span
                                      class="sc-kgoBCf gMvtpI"
                                      color="green"
                                    />
                                  </div>
                                  <div
                                    class="sc-kGXeez dCpFuT"
                                  >
                                    <p
                                      class="sc-kpOJdX bxSrEP"
                                    >
                                      test
                                    </p>
                                    <p
                                      class="sc-fjdhpX gAKYZH"
                                    />
                                  </div>
                                  <p
                                    class="sc-dxgOiQ eGtYgX"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "didError": false,
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "expirationTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "interactionThreadID": 12,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "memoizedInteractions": Set {},
                              "nextExpirationTimeToWorkOn": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "timeoutHandle": -1,
                            },
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "tag": 0,
                              },
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "tag": 0,
                              },
                            },
                          },
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                }
                              }
                            />,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="sc-kAzzGY dxEwPq"
                              >
                                <div
                                  class="sc-chPdSV gWxTLm"
                                >
                                  <img
                                    bordercolor="white"
                                    bordersize="1px"
                                    class="ui tiny circular image sc-ifAKCX irlmET"
                                    maxheight="65px"
                                    maxwidth="65px"
                                    src="test"
                                  />
                                  <span
                                    class="sc-kgoBCf gMvtpI"
                                    color="green"
                                  />
                                </div>
                                <div
                                  class="sc-kGXeez dCpFuT"
                                >
                                  <p
                                    class="sc-kpOJdX bxSrEP"
                                  >
                                    test
                                  </p>
                                  <p
                                    class="sc-fjdhpX gAKYZH"
                                  />
                                </div>
                                <p
                                  class="sc-dxgOiQ eGtYgX"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "didError": false,
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "expirationTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "interactionThreadID": 12,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextExpirationTimeToWorkOn": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "timeoutHandle": -1,
                          },
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 49,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 47,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugID": 47,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childExpirationTime": 1,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="sc-kAzzGY dxEwPq"
                                >
                                  <div
                                    class="sc-chPdSV gWxTLm"
                                  >
                                    <img
                                      bordercolor="white"
                                      bordersize="1px"
                                      class="ui tiny circular image sc-ifAKCX irlmET"
                                      maxheight="65px"
                                      maxwidth="65px"
                                      src="test"
                                    />
                                    <span
                                      class="sc-kgoBCf gMvtpI"
                                      color="green"
                                    />
                                  </div>
                                  <div
                                    class="sc-kGXeez dCpFuT"
                                  >
                                    <p
                                      class="sc-kpOJdX bxSrEP"
                                    >
                                      test
                                    </p>
                                    <p
                                      class="sc-fjdhpX gAKYZH"
                                    />
                                  </div>
                                  <p
                                    class="sc-dxgOiQ eGtYgX"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "didError": false,
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "expirationTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "interactionThreadID": 12,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "memoizedInteractions": Set {},
                              "nextExpirationTimeToWorkOn": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "timeoutHandle": -1,
                            },
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "tag": 0,
                              },
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "tag": 0,
                              },
                            },
                          },
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                }
                              }
                            />,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="sc-kAzzGY dxEwPq"
                              >
                                <div
                                  class="sc-chPdSV gWxTLm"
                                >
                                  <img
                                    bordercolor="white"
                                    bordersize="1px"
                                    class="ui tiny circular image sc-ifAKCX irlmET"
                                    maxheight="65px"
                                    maxwidth="65px"
                                    src="test"
                                  />
                                  <span
                                    class="sc-kgoBCf gMvtpI"
                                    color="green"
                                  />
                                </div>
                                <div
                                  class="sc-kGXeez dCpFuT"
                                >
                                  <p
                                    class="sc-kpOJdX bxSrEP"
                                  >
                                    test
                                  </p>
                                  <p
                                    class="sc-fjdhpX gAKYZH"
                                  />
                                </div>
                                <p
                                  class="sc-dxgOiQ eGtYgX"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "didError": false,
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "expirationTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "interactionThreadID": 12,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextExpirationTimeToWorkOn": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "timeoutHandle": -1,
                          },
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <styled.div>
                          <Styled(Image)
                            bordercolor="white"
                            bordersize="1px"
                            circular={true}
                            maxheight="65px"
                            maxwidth="65px"
                            size="tiny"
                            src="test"
                          />
                          <styled.span
                            color="green"
                          />
                        </styled.div>,
                        <styled.div>
                          <styled.p>
                            test
                          </styled.p>
                          <styled.p>
                            
                          </styled.p>
                        </styled.div>,
                        <styled.p>
                          
                        </styled.p>,
                      ],
                      "className": "",
                      "onClick": [MockFunction] {
                        "calls": [Circular],
                      },
                    },
                    "memoizedState": Object {
                      "generatedClassName": "dxEwPq",
                      "theme": null,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <styled.div>
                          <Styled(Image)
                            bordercolor="white"
                            bordersize="1px"
                            circular={true}
                            maxheight="65px"
                            maxwidth="65px"
                            size="tiny"
                            src="test"
                          />
                          <styled.span
                            color="green"
                          />
                        </styled.div>,
                        <styled.div>
                          <styled.p>
                            test
                          </styled.p>
                          <styled.p>
                            
                          </styled.p>
                        </styled.div>,
                        <styled.p>
                          
                        </styled.p>,
                      ],
                      "className": "",
                      "onClick": [MockFunction] {
                        "calls": [Circular],
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 50,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 49,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 47,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugID": 47,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childExpirationTime": 1,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="sc-kAzzGY dxEwPq"
                                >
                                  <div
                                    class="sc-chPdSV gWxTLm"
                                  >
                                    <img
                                      bordercolor="white"
                                      bordersize="1px"
                                      class="ui tiny circular image sc-ifAKCX irlmET"
                                      maxheight="65px"
                                      maxwidth="65px"
                                      src="test"
                                    />
                                    <span
                                      class="sc-kgoBCf gMvtpI"
                                      color="green"
                                    />
                                  </div>
                                  <div
                                    class="sc-kGXeez dCpFuT"
                                  >
                                    <p
                                      class="sc-kpOJdX bxSrEP"
                                    >
                                      test
                                    </p>
                                    <p
                                      class="sc-fjdhpX gAKYZH"
                                    />
                                  </div>
                                  <p
                                    class="sc-dxgOiQ eGtYgX"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "didError": false,
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "expirationTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "interactionThreadID": 12,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "memoizedInteractions": Set {},
                              "nextExpirationTimeToWorkOn": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "timeoutHandle": -1,
                            },
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "tag": 0,
                              },
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "tag": 0,
                              },
                            },
                          },
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                }
                              }
                            />,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="sc-kAzzGY dxEwPq"
                              >
                                <div
                                  class="sc-chPdSV gWxTLm"
                                >
                                  <img
                                    bordercolor="white"
                                    bordersize="1px"
                                    class="ui tiny circular image sc-ifAKCX irlmET"
                                    maxheight="65px"
                                    maxwidth="65px"
                                    src="test"
                                  />
                                  <span
                                    class="sc-kgoBCf gMvtpI"
                                    color="green"
                                  />
                                </div>
                                <div
                                  class="sc-kGXeez dCpFuT"
                                >
                                  <p
                                    class="sc-kpOJdX bxSrEP"
                                  >
                                    test
                                  </p>
                                  <p
                                    class="sc-fjdhpX gAKYZH"
                                  />
                                </div>
                                <p
                                  class="sc-dxgOiQ eGtYgX"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "didError": false,
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "expirationTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "interactionThreadID": 12,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextExpirationTimeToWorkOn": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "timeoutHandle": -1,
                          },
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 49,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 47,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugID": 47,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childExpirationTime": 1,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="sc-kAzzGY dxEwPq"
                                >
                                  <div
                                    class="sc-chPdSV gWxTLm"
                                  >
                                    <img
                                      bordercolor="white"
                                      bordersize="1px"
                                      class="ui tiny circular image sc-ifAKCX irlmET"
                                      maxheight="65px"
                                      maxwidth="65px"
                                      src="test"
                                    />
                                    <span
                                      class="sc-kgoBCf gMvtpI"
                                      color="green"
                                    />
                                  </div>
                                  <div
                                    class="sc-kGXeez dCpFuT"
                                  >
                                    <p
                                      class="sc-kpOJdX bxSrEP"
                                    >
                                      test
                                    </p>
                                    <p
                                      class="sc-fjdhpX gAKYZH"
                                    />
                                  </div>
                                  <p
                                    class="sc-dxgOiQ eGtYgX"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "didError": false,
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "expirationTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "interactionThreadID": 12,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "memoizedInteractions": Set {},
                              "nextExpirationTimeToWorkOn": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "timeoutHandle": -1,
                            },
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "tag": 0,
                              },
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "tag": 0,
                              },
                            },
                          },
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                }
                              }
                            />,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="sc-kAzzGY dxEwPq"
                              >
                                <div
                                  class="sc-chPdSV gWxTLm"
                                >
                                  <img
                                    bordercolor="white"
                                    bordersize="1px"
                                    class="ui tiny circular image sc-ifAKCX irlmET"
                                    maxheight="65px"
                                    maxwidth="65px"
                                    src="test"
                                  />
                                  <span
                                    class="sc-kgoBCf gMvtpI"
                                    color="green"
                                  />
                                </div>
                                <div
                                  class="sc-kGXeez dCpFuT"
                                >
                                  <p
                                    class="sc-kpOJdX bxSrEP"
                                  >
                                    test
                                  </p>
                                  <p
                                    class="sc-fjdhpX gAKYZH"
                                  />
                                </div>
                                <p
                                  class="sc-dxgOiQ eGtYgX"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "didError": false,
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "expirationTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "interactionThreadID": 12,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextExpirationTimeToWorkOn": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "timeoutHandle": -1,
                          },
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": StyledComponent {
                      "__reactInternalMemoizedMaskedChildContext": Object {
                        "__styled-components-stylesheet__": undefined,
                        "__styled-components__": undefined,
                        "__styled-components__next__": undefined,
                      },
                      "__reactInternalMemoizedUnmaskedChildContext": Object {},
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "attrs": Object {},
                      "context": Object {
                        "__styled-components-stylesheet__": undefined,
                        "__styled-components__": undefined,
                        "__styled-components__next__": undefined,
                      },
                      "props": Object {
                        "children": Array [
                          <styled.div>
                            <Styled(Image)
                              bordercolor="white"
                              bordersize="1px"
                              circular={true}
                              maxheight="65px"
                              maxwidth="65px"
                              size="tiny"
                              src="test"
                            />
                            <styled.span
                              color="green"
                            />
                          </styled.div>,
                          <styled.div>
                            <styled.p>
                              test
                            </styled.p>
                            <styled.p>
                              
                            </styled.p>
                          </styled.div>,
                          <styled.p>
                            
                          </styled.p>,
                        ],
                        "className": "",
                        "onClick": [MockFunction] {
                          "calls": [Circular],
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "generatedClassName": "dxEwPq",
                        "theme": null,
                      },
                      "unsubscribeId": -1,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseState": Object {
                        "generatedClassName": "dxEwPq",
                        "theme": null,
                      },
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": null,
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": null,
                    },
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 53,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 50,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 49,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 47,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugID": 47,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childExpirationTime": 1,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="sc-kAzzGY dxEwPq"
                                >
                                  <div
                                    class="sc-chPdSV gWxTLm"
                                  >
                                    <img
                                      bordercolor="white"
                                      bordersize="1px"
                                      class="ui tiny circular image sc-ifAKCX irlmET"
                                      maxheight="65px"
                                      maxwidth="65px"
                                      src="test"
                                    />
                                    <span
                                      class="sc-kgoBCf gMvtpI"
                                      color="green"
                                    />
                                  </div>
                                  <div
                                    class="sc-kGXeez dCpFuT"
                                  >
                                    <p
                                      class="sc-kpOJdX bxSrEP"
                                    >
                                      test
                                    </p>
                                    <p
                                      class="sc-fjdhpX gAKYZH"
                                    />
                                  </div>
                                  <p
                                    class="sc-dxgOiQ eGtYgX"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "didError": false,
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "expirationTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "interactionThreadID": 12,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "memoizedInteractions": Set {},
                              "nextExpirationTimeToWorkOn": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "timeoutHandle": -1,
                            },
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "tag": 0,
                              },
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "tag": 0,
                              },
                            },
                          },
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                }
                              }
                            />,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="sc-kAzzGY dxEwPq"
                              >
                                <div
                                  class="sc-chPdSV gWxTLm"
                                >
                                  <img
                                    bordercolor="white"
                                    bordersize="1px"
                                    class="ui tiny circular image sc-ifAKCX irlmET"
                                    maxheight="65px"
                                    maxwidth="65px"
                                    src="test"
                                  />
                                  <span
                                    class="sc-kgoBCf gMvtpI"
                                    color="green"
                                  />
                                </div>
                                <div
                                  class="sc-kGXeez dCpFuT"
                                >
                                  <p
                                    class="sc-kpOJdX bxSrEP"
                                  >
                                    test
                                  </p>
                                  <p
                                    class="sc-fjdhpX gAKYZH"
                                  />
                                </div>
                                <p
                                  class="sc-dxgOiQ eGtYgX"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "didError": false,
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "expirationTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "interactionThreadID": 12,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextExpirationTimeToWorkOn": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "timeoutHandle": -1,
                          },
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 51,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <styled.div>
                              <Styled(Image)
                                bordercolor="white"
                                bordersize="1px"
                                circular={true}
                                maxheight="65px"
                                maxwidth="65px"
                                size="tiny"
                                src="test"
                              />
                              <styled.span
                                color="green"
                              />
                            </styled.div>,
                            <styled.div>
                              <styled.p>
                                test
                              </styled.p>
                              <styled.p>
                                
                              </styled.p>
                            </styled.div>,
                            <styled.p>
                              
                            </styled.p>,
                          ],
                          "className": "",
                          "onClick": [MockFunction] {
                            "calls": [Circular],
                          },
                        },
                        "memoizedState": Object {
                          "generatedClassName": "dxEwPq",
                          "theme": null,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <styled.div>
                              <Styled(Image)
                                bordercolor="white"
                                bordersize="1px"
                                circular={true}
                                maxheight="65px"
                                maxwidth="65px"
                                size="tiny"
                                src="test"
                              />
                              <styled.span
                                color="green"
                              />
                            </styled.div>,
                            <styled.div>
                              <styled.p>
                                test
                              </styled.p>
                              <styled.p>
                                
                              </styled.p>
                            </styled.div>,
                            <styled.p>
                              
                            </styled.p>,
                          ],
                          "className": "",
                          "onClick": [MockFunction] {
                            "calls": [Circular],
                          },
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": StyledComponent {
                          "__reactInternalMemoizedMaskedChildContext": Object {
                            "__styled-components-stylesheet__": undefined,
                            "__styled-components__": undefined,
                            "__styled-components__next__": undefined,
                          },
                          "__reactInternalMemoizedUnmaskedChildContext": Object {},
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "attrs": Object {},
                          "context": Object {
                            "__styled-components-stylesheet__": undefined,
                            "__styled-components__": undefined,
                            "__styled-components__next__": undefined,
                          },
                          "props": Object {
                            "children": Array [
                              <styled.div>
                                <Styled(Image)
                                  bordercolor="white"
                                  bordersize="1px"
                                  circular={true}
                                  maxheight="65px"
                                  maxwidth="65px"
                                  size="tiny"
                                  src="test"
                                />
                                <styled.span
                                  color="green"
                                />
                              </styled.div>,
                              <styled.div>
                                <styled.p>
                                  test
                                </styled.p>
                                <styled.p>
                                  
                                </styled.p>
                              </styled.div>,
                              <styled.p>
                                
                              </styled.p>,
                            ],
                            "className": "",
                            "onClick": [MockFunction] {
                              "calls": [Circular],
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "generatedClassName": "dxEwPq",
                            "theme": null,
                          },
                          "unsubscribeId": -1,
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": Object {
                          "baseState": Object {
                            "generatedClassName": "dxEwPq",
                            "theme": null,
                          },
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "childExpirationTime": 0,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 49,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 47,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugID": 47,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childExpirationTime": 1,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="sc-kAzzGY dxEwPq"
                                >
                                  <div
                                    class="sc-chPdSV gWxTLm"
                                  >
                                    <img
                                      bordercolor="white"
                                      bordersize="1px"
                                      class="ui tiny circular image sc-ifAKCX irlmET"
                                      maxheight="65px"
                                      maxwidth="65px"
                                      src="test"
                                    />
                                    <span
                                      class="sc-kgoBCf gMvtpI"
                                      color="green"
                                    />
                                  </div>
                                  <div
                                    class="sc-kGXeez dCpFuT"
                                  >
                                    <p
                                      class="sc-kpOJdX bxSrEP"
                                    >
                                      test
                                    </p>
                                    <p
                                      class="sc-fjdhpX gAKYZH"
                                    />
                                  </div>
                                  <p
                                    class="sc-dxgOiQ eGtYgX"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "didError": false,
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "expirationTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "interactionThreadID": 12,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "memoizedInteractions": Set {},
                              "nextExpirationTimeToWorkOn": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "timeoutHandle": -1,
                            },
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "tag": 0,
                              },
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "tag": 0,
                              },
                            },
                          },
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                }
                              }
                            />,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="sc-kAzzGY dxEwPq"
                              >
                                <div
                                  class="sc-chPdSV gWxTLm"
                                >
                                  <img
                                    bordercolor="white"
                                    bordersize="1px"
                                    class="ui tiny circular image sc-ifAKCX irlmET"
                                    maxheight="65px"
                                    maxwidth="65px"
                                    src="test"
                                  />
                                  <span
                                    class="sc-kgoBCf gMvtpI"
                                    color="green"
                                  />
                                </div>
                                <div
                                  class="sc-kGXeez dCpFuT"
                                >
                                  <p
                                    class="sc-kpOJdX bxSrEP"
                                  >
                                    test
                                  </p>
                                  <p
                                    class="sc-fjdhpX gAKYZH"
                                  />
                                </div>
                                <p
                                  class="sc-dxgOiQ eGtYgX"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "didError": false,
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "expirationTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "interactionThreadID": 12,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextExpirationTimeToWorkOn": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "timeoutHandle": -1,
                          },
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 56,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 57,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 50,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 49,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 1,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                      class="sc-kAzzGY dxEwPq"
                                    >
                                      <div
                                        class="sc-chPdSV gWxTLm"
                                      >
                                        <img
                                          bordercolor="white"
                                          bordersize="1px"
                                          class="ui tiny circular image sc-ifAKCX irlmET"
                                          maxheight="65px"
                                          maxwidth="65px"
                                          src="test"
                                        />
                                        <span
                                          class="sc-kgoBCf gMvtpI"
                                          color="green"
                                        />
                                      </div>
                                      <div
                                        class="sc-kGXeez dCpFuT"
                                      >
                                        <p
                                          class="sc-kpOJdX bxSrEP"
                                        >
                                          test
                                        </p>
                                        <p
                                          class="sc-fjdhpX gAKYZH"
                                        />
                                      </div>
                                      <p
                                        class="sc-dxgOiQ eGtYgX"
                                      />
                                    </div>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "chat": Object {
                                              "id": 1,
                                              "messages": Array [],
                                              "users": Array [
                                                Object {
                                                  "avatar": "test",
                                                  "id": 1,
                                                  "name": "test",
                                                  "status": "Online",
                                                },
                                                Object {
                                                  "avatar": "test2",
                                                  "id": 2,
                                                  "name": "test2",
                                                  "status": "Online",
                                                },
                                              ],
                                            },
                                            "isActive": "",
                                            "onChangeChat": [MockFunction] {
                                              "calls": [Circular],
                                            },
                                            "user": Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "chat": Object {
                                              "id": 1,
                                              "messages": Array [],
                                              "users": Array [
                                                Object {
                                                  "avatar": "test",
                                                  "id": 1,
                                                  "name": "test",
                                                  "status": "Online",
                                                },
                                                Object {
                                                  "avatar": "test2",
                                                  "id": 2,
                                                  "name": "test2",
                                                  "status": "Online",
                                                },
                                              ],
                                            },
                                            "isActive": "",
                                            "onChangeChat": [MockFunction] {
                                              "calls": [Circular],
                                            },
                                            "user": Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="sc-kAzzGY dxEwPq"
                                  >
                                    <div
                                      class="sc-chPdSV gWxTLm"
                                    >
                                      <img
                                        bordercolor="white"
                                        bordersize="1px"
                                        class="ui tiny circular image sc-ifAKCX irlmET"
                                        maxheight="65px"
                                        maxwidth="65px"
                                        src="test"
                                      />
                                      <span
                                        class="sc-kgoBCf gMvtpI"
                                        color="green"
                                      />
                                    </div>
                                    <div
                                      class="sc-kGXeez dCpFuT"
                                    >
                                      <p
                                        class="sc-kpOJdX bxSrEP"
                                      >
                                        test
                                      </p>
                                      <p
                                        class="sc-fjdhpX gAKYZH"
                                      />
                                    </div>
                                    <p
                                      class="sc-dxgOiQ eGtYgX"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 51,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <styled.div>
                                  <Styled(Image)
                                    bordercolor="white"
                                    bordersize="1px"
                                    circular={true}
                                    maxheight="65px"
                                    maxwidth="65px"
                                    size="tiny"
                                    src="test"
                                  />
                                  <styled.span
                                    color="green"
                                  />
                                </styled.div>,
                                <styled.div>
                                  <styled.p>
                                    test
                                  </styled.p>
                                  <styled.p>
                                    
                                  </styled.p>
                                </styled.div>,
                                <styled.p>
                                  
                                </styled.p>,
                              ],
                              "className": "",
                              "onClick": [MockFunction] {
                                "calls": [Circular],
                              },
                            },
                            "memoizedState": Object {
                              "generatedClassName": "dxEwPq",
                              "theme": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <styled.div>
                                  <Styled(Image)
                                    bordercolor="white"
                                    bordersize="1px"
                                    circular={true}
                                    maxheight="65px"
                                    maxwidth="65px"
                                    size="tiny"
                                    src="test"
                                  />
                                  <styled.span
                                    color="green"
                                  />
                                </styled.div>,
                                <styled.div>
                                  <styled.p>
                                    test
                                  </styled.p>
                                  <styled.p>
                                    
                                  </styled.p>
                                </styled.div>,
                                <styled.p>
                                  
                                </styled.p>,
                              ],
                              "className": "",
                              "onClick": [MockFunction] {
                                "calls": [Circular],
                              },
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": StyledComponent {
                              "__reactInternalMemoizedMaskedChildContext": Object {
                                "__styled-components-stylesheet__": undefined,
                                "__styled-components__": undefined,
                                "__styled-components__next__": undefined,
                              },
                              "__reactInternalMemoizedUnmaskedChildContext": Object {},
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "attrs": Object {},
                              "context": Object {
                                "__styled-components-stylesheet__": undefined,
                                "__styled-components__": undefined,
                                "__styled-components__next__": undefined,
                              },
                              "props": Object {
                                "children": Array [
                                  <styled.div>
                                    <Styled(Image)
                                      bordercolor="white"
                                      bordersize="1px"
                                      circular={true}
                                      maxheight="65px"
                                      maxwidth="65px"
                                      size="tiny"
                                      src="test"
                                    />
                                    <styled.span
                                      color="green"
                                    />
                                  </styled.div>,
                                  <styled.div>
                                    <styled.p>
                                      test
                                    </styled.p>
                                    <styled.p>
                                      
                                    </styled.p>
                                  </styled.div>,
                                  <styled.p>
                                    
                                  </styled.p>,
                                ],
                                "className": "",
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "generatedClassName": "dxEwPq",
                                "theme": null,
                              },
                              "unsubscribeId": -1,
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": Object {
                              "baseState": Object {
                                "generatedClassName": "dxEwPq",
                                "theme": null,
                              },
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": null,
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": null,
                            },
                          },
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 49,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 1,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                      class="sc-kAzzGY dxEwPq"
                                    >
                                      <div
                                        class="sc-chPdSV gWxTLm"
                                      >
                                        <img
                                          bordercolor="white"
                                          bordersize="1px"
                                          class="ui tiny circular image sc-ifAKCX irlmET"
                                          maxheight="65px"
                                          maxwidth="65px"
                                          src="test"
                                        />
                                        <span
                                          class="sc-kgoBCf gMvtpI"
                                          color="green"
                                        />
                                      </div>
                                      <div
                                        class="sc-kGXeez dCpFuT"
                                      >
                                        <p
                                          class="sc-kpOJdX bxSrEP"
                                        >
                                          test
                                        </p>
                                        <p
                                          class="sc-fjdhpX gAKYZH"
                                        />
                                      </div>
                                      <p
                                        class="sc-dxgOiQ eGtYgX"
                                      />
                                    </div>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "chat": Object {
                                              "id": 1,
                                              "messages": Array [],
                                              "users": Array [
                                                Object {
                                                  "avatar": "test",
                                                  "id": 1,
                                                  "name": "test",
                                                  "status": "Online",
                                                },
                                                Object {
                                                  "avatar": "test2",
                                                  "id": 2,
                                                  "name": "test2",
                                                  "status": "Online",
                                                },
                                              ],
                                            },
                                            "isActive": "",
                                            "onChangeChat": [MockFunction] {
                                              "calls": [Circular],
                                            },
                                            "user": Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "chat": Object {
                                              "id": 1,
                                              "messages": Array [],
                                              "users": Array [
                                                Object {
                                                  "avatar": "test",
                                                  "id": 1,
                                                  "name": "test",
                                                  "status": "Online",
                                                },
                                                Object {
                                                  "avatar": "test2",
                                                  "id": 2,
                                                  "name": "test2",
                                                  "status": "Online",
                                                },
                                              ],
                                            },
                                            "isActive": "",
                                            "onChangeChat": [MockFunction] {
                                              "calls": [Circular],
                                            },
                                            "user": Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="sc-kAzzGY dxEwPq"
                                  >
                                    <div
                                      class="sc-chPdSV gWxTLm"
                                    >
                                      <img
                                        bordercolor="white"
                                        bordersize="1px"
                                        class="ui tiny circular image sc-ifAKCX irlmET"
                                        maxheight="65px"
                                        maxwidth="65px"
                                        src="test"
                                      />
                                      <span
                                        class="sc-kgoBCf gMvtpI"
                                        color="green"
                                      />
                                    </div>
                                    <div
                                      class="sc-kGXeez dCpFuT"
                                    >
                                      <p
                                        class="sc-kpOJdX bxSrEP"
                                      >
                                        test
                                      </p>
                                      <p
                                        class="sc-fjdhpX gAKYZH"
                                      />
                                    </div>
                                    <p
                                      class="sc-dxgOiQ eGtYgX"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 59,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 60,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "bordercolor": "white",
                              "bordersize": "1px",
                              "className": "ui tiny circular image sc-ifAKCX irlmET",
                              "maxheight": "65px",
                              "maxwidth": "65px",
                              "src": "test",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "bordercolor": "white",
                              "bordersize": "1px",
                              "className": "ui tiny circular image sc-ifAKCX irlmET",
                              "maxheight": "65px",
                              "maxwidth": "65px",
                              "src": "test",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <img
                              bordercolor="white"
                              bordersize="1px"
                              class="ui tiny circular image sc-ifAKCX irlmET"
                              maxheight="65px"
                              maxwidth="65px"
                              src="test"
                            />,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "img",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "as": "img",
                            "bordercolor": "white",
                            "bordersize": "1px",
                            "circular": true,
                            "className": "sc-ifAKCX irlmET",
                            "maxheight": "65px",
                            "maxwidth": "65px",
                            "size": "tiny",
                            "src": "test",
                            "ui": true,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "as": "img",
                            "bordercolor": "white",
                            "bordersize": "1px",
                            "circular": true,
                            "className": "sc-ifAKCX irlmET",
                            "maxheight": "65px",
                            "maxwidth": "65px",
                            "size": "tiny",
                            "src": "test",
                            "ui": true,
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "bordercolor": "white",
                          "bordersize": "1px",
                          "circular": true,
                          "maxheight": "65px",
                          "maxwidth": "65px",
                          "size": "tiny",
                          "src": "test",
                        },
                        "memoizedState": Object {
                          "generatedClassName": "irlmET",
                          "theme": Object {},
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "bordercolor": "white",
                          "bordersize": "1px",
                          "circular": true,
                          "maxheight": "65px",
                          "maxwidth": "65px",
                          "size": "tiny",
                          "src": "test",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 58,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 50,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": FiberNode {
                              "_debugID": 49,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugID": 47,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 1,
                                  "effectTag": 0,
                                  "expirationTime": 1,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": Object {
                                    "containerInfo": <div>
                                      <div
                                        class="sc-kAzzGY dxEwPq"
                                      >
                                        <div
                                          class="sc-chPdSV gWxTLm"
                                        >
                                          <img
                                            bordercolor="white"
                                            bordersize="1px"
                                            class="ui tiny circular image sc-ifAKCX irlmET"
                                            maxheight="65px"
                                            maxwidth="65px"
                                            src="test"
                                          />
                                          <span
                                            class="sc-kgoBCf gMvtpI"
                                            color="green"
                                          />
                                        </div>
                                        <div
                                          class="sc-kGXeez dCpFuT"
                                        >
                                          <p
                                            class="sc-kpOJdX bxSrEP"
                                          >
                                            test
                                          </p>
                                          <p
                                            class="sc-fjdhpX gAKYZH"
                                          />
                                        </div>
                                        <p
                                          class="sc-dxgOiQ eGtYgX"
                                        />
                                      </div>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "didError": false,
                                    "earliestPendingTime": 0,
                                    "earliestSuspendedTime": 0,
                                    "expirationTime": 0,
                                    "finishedWork": null,
                                    "firstBatch": null,
                                    "hydrate": false,
                                    "interactionThreadID": 12,
                                    "latestPendingTime": 0,
                                    "latestPingedTime": 0,
                                    "latestSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextExpirationTimeToWorkOn": 0,
                                    "nextScheduledRoot": null,
                                    "pendingChildren": null,
                                    "pendingCommitExpirationTime": 0,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "chat": Object {
                                                "id": 1,
                                                "messages": Array [],
                                                "users": Array [
                                                  Object {
                                                    "avatar": "test",
                                                    "id": 1,
                                                    "name": "test",
                                                    "status": "Online",
                                                  },
                                                  Object {
                                                    "avatar": "test2",
                                                    "id": 2,
                                                    "name": "test2",
                                                    "status": "Online",
                                                  },
                                                ],
                                              },
                                              "isActive": "",
                                              "onChangeChat": [MockFunction] {
                                                "calls": [Circular],
                                              },
                                              "user": Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "chat": Object {
                                                "id": 1,
                                                "messages": Array [],
                                                "users": Array [
                                                  Object {
                                                    "avatar": "test",
                                                    "id": 1,
                                                    "name": "test",
                                                    "status": "Online",
                                                  },
                                                  Object {
                                                    "avatar": "test2",
                                                    "id": 2,
                                                    "name": "test2",
                                                    "status": "Online",
                                                  },
                                                ],
                                              },
                                              "isActive": "",
                                              "onChangeChat": [MockFunction] {
                                                "calls": [Circular],
                                              },
                                              "user": Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "effectTag": 32,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                      class="sc-kAzzGY dxEwPq"
                                    >
                                      <div
                                        class="sc-chPdSV gWxTLm"
                                      >
                                        <img
                                          bordercolor="white"
                                          bordersize="1px"
                                          class="ui tiny circular image sc-ifAKCX irlmET"
                                          maxheight="65px"
                                          maxwidth="65px"
                                          src="test"
                                        />
                                        <span
                                          class="sc-kgoBCf gMvtpI"
                                          color="green"
                                        />
                                      </div>
                                      <div
                                        class="sc-kGXeez dCpFuT"
                                      >
                                        <p
                                          class="sc-kpOJdX bxSrEP"
                                        >
                                          test
                                        </p>
                                        <p
                                          class="sc-fjdhpX gAKYZH"
                                        />
                                      </div>
                                      <p
                                        class="sc-dxgOiQ eGtYgX"
                                      />
                                    </div>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "chat": Object {
                                            "id": 1,
                                            "messages": Array [],
                                            "users": Array [
                                              Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                              Object {
                                                "avatar": "test2",
                                                "id": 2,
                                                "name": "test2",
                                                "status": "Online",
                                              },
                                            ],
                                          },
                                          "isActive": "",
                                          "onChangeChat": [MockFunction] {
                                            "calls": [Circular],
                                          },
                                          "user": Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                        }
                                      }
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  },
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  },
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 2,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 51,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <styled.div>
                                    <Styled(Image)
                                      bordercolor="white"
                                      bordersize="1px"
                                      circular={true}
                                      maxheight="65px"
                                      maxwidth="65px"
                                      size="tiny"
                                      src="test"
                                    />
                                    <styled.span
                                      color="green"
                                    />
                                  </styled.div>,
                                  <styled.div>
                                    <styled.p>
                                      test
                                    </styled.p>
                                    <styled.p>
                                      
                                    </styled.p>
                                  </styled.div>,
                                  <styled.p>
                                    
                                  </styled.p>,
                                ],
                                "className": "",
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                },
                              },
                              "memoizedState": Object {
                                "generatedClassName": "dxEwPq",
                                "theme": null,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": Array [
                                  <styled.div>
                                    <Styled(Image)
                                      bordercolor="white"
                                      bordersize="1px"
                                      circular={true}
                                      maxheight="65px"
                                      maxwidth="65px"
                                      size="tiny"
                                      src="test"
                                    />
                                    <styled.span
                                      color="green"
                                    />
                                  </styled.div>,
                                  <styled.div>
                                    <styled.p>
                                      test
                                    </styled.p>
                                    <styled.p>
                                      
                                    </styled.p>
                                  </styled.div>,
                                  <styled.p>
                                    
                                  </styled.p>,
                                ],
                                "className": "",
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                },
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": StyledComponent {
                                "__reactInternalMemoizedMaskedChildContext": Object {
                                  "__styled-components-stylesheet__": undefined,
                                  "__styled-components__": undefined,
                                  "__styled-components__next__": undefined,
                                },
                                "__reactInternalMemoizedUnmaskedChildContext": Object {},
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "attrs": Object {},
                                "context": Object {
                                  "__styled-components-stylesheet__": undefined,
                                  "__styled-components__": undefined,
                                  "__styled-components__next__": undefined,
                                },
                                "props": Object {
                                  "children": Array [
                                    <styled.div>
                                      <Styled(Image)
                                        bordercolor="white"
                                        bordersize="1px"
                                        circular={true}
                                        maxheight="65px"
                                        maxwidth="65px"
                                        size="tiny"
                                        src="test"
                                      />
                                      <styled.span
                                        color="green"
                                      />
                                    </styled.div>,
                                    <styled.div>
                                      <styled.p>
                                        test
                                      </styled.p>
                                      <styled.p>
                                        
                                      </styled.p>
                                    </styled.div>,
                                    <styled.p>
                                      
                                    </styled.p>,
                                  ],
                                  "className": "",
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                },
                                "refs": Object {},
                                "state": Object {
                                  "generatedClassName": "dxEwPq",
                                  "theme": null,
                                },
                                "unsubscribeId": -1,
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 2,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": Object {
                                "baseState": Object {
                                  "generatedClassName": "dxEwPq",
                                  "theme": null,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 49,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugID": 47,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 1,
                                  "effectTag": 0,
                                  "expirationTime": 1,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": Object {
                                    "containerInfo": <div>
                                      <div
                                        class="sc-kAzzGY dxEwPq"
                                      >
                                        <div
                                          class="sc-chPdSV gWxTLm"
                                        >
                                          <img
                                            bordercolor="white"
                                            bordersize="1px"
                                            class="ui tiny circular image sc-ifAKCX irlmET"
                                            maxheight="65px"
                                            maxwidth="65px"
                                            src="test"
                                          />
                                          <span
                                            class="sc-kgoBCf gMvtpI"
                                            color="green"
                                          />
                                        </div>
                                        <div
                                          class="sc-kGXeez dCpFuT"
                                        >
                                          <p
                                            class="sc-kpOJdX bxSrEP"
                                          >
                                            test
                                          </p>
                                          <p
                                            class="sc-fjdhpX gAKYZH"
                                          />
                                        </div>
                                        <p
                                          class="sc-dxgOiQ eGtYgX"
                                        />
                                      </div>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "didError": false,
                                    "earliestPendingTime": 0,
                                    "earliestSuspendedTime": 0,
                                    "expirationTime": 0,
                                    "finishedWork": null,
                                    "firstBatch": null,
                                    "hydrate": false,
                                    "interactionThreadID": 12,
                                    "latestPendingTime": 0,
                                    "latestPingedTime": 0,
                                    "latestSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextExpirationTimeToWorkOn": 0,
                                    "nextScheduledRoot": null,
                                    "pendingChildren": null,
                                    "pendingCommitExpirationTime": 0,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "chat": Object {
                                                "id": 1,
                                                "messages": Array [],
                                                "users": Array [
                                                  Object {
                                                    "avatar": "test",
                                                    "id": 1,
                                                    "name": "test",
                                                    "status": "Online",
                                                  },
                                                  Object {
                                                    "avatar": "test2",
                                                    "id": 2,
                                                    "name": "test2",
                                                    "status": "Online",
                                                  },
                                                ],
                                              },
                                              "isActive": "",
                                              "onChangeChat": [MockFunction] {
                                                "calls": [Circular],
                                              },
                                              "user": Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "chat": Object {
                                                "id": 1,
                                                "messages": Array [],
                                                "users": Array [
                                                  Object {
                                                    "avatar": "test",
                                                    "id": 1,
                                                    "name": "test",
                                                    "status": "Online",
                                                  },
                                                  Object {
                                                    "avatar": "test2",
                                                    "id": 2,
                                                    "name": "test2",
                                                    "status": "Online",
                                                  },
                                                ],
                                              },
                                              "isActive": "",
                                              "onChangeChat": [MockFunction] {
                                                "calls": [Circular],
                                              },
                                              "user": Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "effectTag": 32,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                      class="sc-kAzzGY dxEwPq"
                                    >
                                      <div
                                        class="sc-chPdSV gWxTLm"
                                      >
                                        <img
                                          bordercolor="white"
                                          bordersize="1px"
                                          class="ui tiny circular image sc-ifAKCX irlmET"
                                          maxheight="65px"
                                          maxwidth="65px"
                                          src="test"
                                        />
                                        <span
                                          class="sc-kgoBCf gMvtpI"
                                          color="green"
                                        />
                                      </div>
                                      <div
                                        class="sc-kGXeez dCpFuT"
                                      >
                                        <p
                                          class="sc-kpOJdX bxSrEP"
                                        >
                                          test
                                        </p>
                                        <p
                                          class="sc-fjdhpX gAKYZH"
                                        />
                                      </div>
                                      <p
                                        class="sc-dxgOiQ eGtYgX"
                                      />
                                    </div>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "chat": Object {
                                            "id": 1,
                                            "messages": Array [],
                                            "users": Array [
                                              Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                              Object {
                                                "avatar": "test2",
                                                "id": 2,
                                                "name": "test2",
                                                "status": "Online",
                                              },
                                            ],
                                          },
                                          "isActive": "",
                                          "onChangeChat": [MockFunction] {
                                            "calls": [Circular],
                                          },
                                          "user": Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                        }
                                      }
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  },
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  },
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 2,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": null,
                            "tag": 0,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 61,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "className": "sc-kgoBCf gMvtpI",
                              "color": "green",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "className": "sc-kgoBCf gMvtpI",
                              "color": "green",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <span
                              class="sc-kgoBCf gMvtpI"
                              color="green"
                            />,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "span",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "color": "green",
                          },
                          "memoizedState": Object {
                            "generatedClassName": "gMvtpI",
                            "theme": Object {},
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "color": "green",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": StyledComponent {
                            "__reactInternalMemoizedMaskedChildContext": Object {
                              "__styled-components-stylesheet__": undefined,
                              "__styled-components__": undefined,
                              "__styled-components__next__": undefined,
                            },
                            "__reactInternalMemoizedUnmaskedChildContext": Object {},
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "attrs": Object {},
                            "context": Object {
                              "__styled-components-stylesheet__": undefined,
                              "__styled-components__": undefined,
                              "__styled-components__next__": undefined,
                            },
                            "props": Object {
                              "color": "green",
                            },
                            "refs": Object {},
                            "state": Object {
                              "generatedClassName": "gMvtpI",
                              "theme": Object {},
                            },
                            "unsubscribeId": -1,
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": Object {
                            "baseState": Object {
                              "generatedClassName": "gMvtpI",
                              "theme": Object {},
                            },
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "stateNode": StyledComponent {
                          "__reactInternalMemoizedMaskedChildContext": Object {
                            "__styled-components-stylesheet__": undefined,
                            "__styled-components__": undefined,
                            "__styled-components__next__": undefined,
                          },
                          "__reactInternalMemoizedUnmaskedChildContext": Object {},
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "attrs": Object {},
                          "context": Object {
                            "__styled-components-stylesheet__": undefined,
                            "__styled-components__": undefined,
                            "__styled-components__next__": undefined,
                          },
                          "props": Object {
                            "bordercolor": "white",
                            "bordersize": "1px",
                            "circular": true,
                            "maxheight": "65px",
                            "maxwidth": "65px",
                            "size": "tiny",
                            "src": "test",
                          },
                          "refs": Object {},
                          "state": Object {
                            "generatedClassName": "irlmET",
                            "theme": Object {},
                          },
                          "unsubscribeId": -1,
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": Object {
                          "baseState": Object {
                            "generatedClassName": "irlmET",
                            "theme": Object {},
                          },
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <Styled(Image)
                            bordercolor="white"
                            bordersize="1px"
                            circular={true}
                            maxheight="65px"
                            maxwidth="65px"
                            size="tiny"
                            src="test"
                          />,
                          <styled.span
                            color="green"
                          />,
                        ],
                        "className": "sc-chPdSV gWxTLm",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <Styled(Image)
                            bordercolor="white"
                            bordersize="1px"
                            circular={true}
                            maxheight="65px"
                            maxwidth="65px"
                            size="tiny"
                            src="test"
                          />,
                          <styled.span
                            color="green"
                          />,
                        ],
                        "className": "sc-chPdSV gWxTLm",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="sc-chPdSV gWxTLm"
                      >
                        <img
                          bordercolor="white"
                          bordersize="1px"
                          class="ui tiny circular image sc-ifAKCX irlmET"
                          maxheight="65px"
                          maxwidth="65px"
                          src="test"
                        />
                        <span
                          class="sc-kgoBCf gMvtpI"
                          color="green"
                        />
                      </div>,
                      "tag": 7,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <Styled(Image)
                          bordercolor="white"
                          bordersize="1px"
                          circular={true}
                          maxheight="65px"
                          maxwidth="65px"
                          size="tiny"
                          src="test"
                        />,
                        <styled.span
                          color="green"
                        />,
                      ],
                    },
                    "memoizedState": Object {
                      "generatedClassName": "gWxTLm",
                      "theme": null,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <Styled(Image)
                          bordercolor="white"
                          bordersize="1px"
                          circular={true}
                          maxheight="65px"
                          maxwidth="65px"
                          size="tiny"
                          src="test"
                        />,
                        <styled.span
                          color="green"
                        />,
                      ],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 54,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 50,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 49,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 47,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": [Circular],
                              "child": null,
                              "childExpirationTime": 1,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="sc-kAzzGY dxEwPq"
                                  >
                                    <div
                                      class="sc-chPdSV gWxTLm"
                                    >
                                      <img
                                        bordercolor="white"
                                        bordersize="1px"
                                        class="ui tiny circular image sc-ifAKCX irlmET"
                                        maxheight="65px"
                                        maxwidth="65px"
                                        src="test"
                                      />
                                      <span
                                        class="sc-kgoBCf gMvtpI"
                                        color="green"
                                      />
                                    </div>
                                    <div
                                      class="sc-kGXeez dCpFuT"
                                    >
                                      <p
                                        class="sc-kpOJdX bxSrEP"
                                      >
                                        test
                                      </p>
                                      <p
                                        class="sc-fjdhpX gAKYZH"
                                      />
                                    </div>
                                    <p
                                      class="sc-dxgOiQ eGtYgX"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "chat": Object {
                                            "id": 1,
                                            "messages": Array [],
                                            "users": Array [
                                              Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                              Object {
                                                "avatar": "test2",
                                                "id": 2,
                                                "name": "test2",
                                                "status": "Online",
                                              },
                                            ],
                                          },
                                          "isActive": "",
                                          "onChangeChat": [MockFunction] {
                                            "calls": [Circular],
                                          },
                                          "user": Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                        }
                                      }
                                    />,
                                  },
                                  "tag": 0,
                                },
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "chat": Object {
                                            "id": 1,
                                            "messages": Array [],
                                            "users": Array [
                                              Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                              Object {
                                                "avatar": "test2",
                                                "id": 2,
                                                "name": "test2",
                                                "status": "Online",
                                              },
                                            ],
                                          },
                                          "isActive": "",
                                          "onChangeChat": [MockFunction] {
                                            "calls": [Circular],
                                          },
                                          "user": Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                        }
                                      }
                                    />,
                                  },
                                  "tag": 0,
                                },
                              },
                            },
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="sc-kAzzGY dxEwPq"
                                >
                                  <div
                                    class="sc-chPdSV gWxTLm"
                                  >
                                    <img
                                      bordercolor="white"
                                      bordersize="1px"
                                      class="ui tiny circular image sc-ifAKCX irlmET"
                                      maxheight="65px"
                                      maxwidth="65px"
                                      src="test"
                                    />
                                    <span
                                      class="sc-kgoBCf gMvtpI"
                                      color="green"
                                    />
                                  </div>
                                  <div
                                    class="sc-kGXeez dCpFuT"
                                  >
                                    <p
                                      class="sc-kpOJdX bxSrEP"
                                    >
                                      test
                                    </p>
                                    <p
                                      class="sc-fjdhpX gAKYZH"
                                    />
                                  </div>
                                  <p
                                    class="sc-dxgOiQ eGtYgX"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "didError": false,
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "expirationTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "interactionThreadID": 12,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "memoizedInteractions": Set {},
                              "nextExpirationTimeToWorkOn": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "timeoutHandle": -1,
                            },
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": null,
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": null,
                            },
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 51,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <styled.div>
                                <Styled(Image)
                                  bordercolor="white"
                                  bordersize="1px"
                                  circular={true}
                                  maxheight="65px"
                                  maxwidth="65px"
                                  size="tiny"
                                  src="test"
                                />
                                <styled.span
                                  color="green"
                                />
                              </styled.div>,
                              <styled.div>
                                <styled.p>
                                  test
                                </styled.p>
                                <styled.p>
                                  
                                </styled.p>
                              </styled.div>,
                              <styled.p>
                                
                              </styled.p>,
                            ],
                            "className": "",
                            "onClick": [MockFunction] {
                              "calls": [Circular],
                            },
                          },
                          "memoizedState": Object {
                            "generatedClassName": "dxEwPq",
                            "theme": null,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <styled.div>
                                <Styled(Image)
                                  bordercolor="white"
                                  bordersize="1px"
                                  circular={true}
                                  maxheight="65px"
                                  maxwidth="65px"
                                  size="tiny"
                                  src="test"
                                />
                                <styled.span
                                  color="green"
                                />
                              </styled.div>,
                              <styled.div>
                                <styled.p>
                                  test
                                </styled.p>
                                <styled.p>
                                  
                                </styled.p>
                              </styled.div>,
                              <styled.p>
                                
                              </styled.p>,
                            ],
                            "className": "",
                            "onClick": [MockFunction] {
                              "calls": [Circular],
                            },
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": StyledComponent {
                            "__reactInternalMemoizedMaskedChildContext": Object {
                              "__styled-components-stylesheet__": undefined,
                              "__styled-components__": undefined,
                              "__styled-components__next__": undefined,
                            },
                            "__reactInternalMemoizedUnmaskedChildContext": Object {},
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "attrs": Object {},
                            "context": Object {
                              "__styled-components-stylesheet__": undefined,
                              "__styled-components__": undefined,
                              "__styled-components__next__": undefined,
                            },
                            "props": Object {
                              "children": Array [
                                <styled.div>
                                  <Styled(Image)
                                    bordercolor="white"
                                    bordersize="1px"
                                    circular={true}
                                    maxheight="65px"
                                    maxwidth="65px"
                                    size="tiny"
                                    src="test"
                                  />
                                  <styled.span
                                    color="green"
                                  />
                                </styled.div>,
                                <styled.div>
                                  <styled.p>
                                    test
                                  </styled.p>
                                  <styled.p>
                                    
                                  </styled.p>
                                </styled.div>,
                                <styled.p>
                                  
                                </styled.p>,
                              ],
                              "className": "",
                              "onClick": [MockFunction] {
                                "calls": [Circular],
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "generatedClassName": "dxEwPq",
                              "theme": null,
                            },
                            "unsubscribeId": -1,
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": Object {
                            "baseState": Object {
                              "generatedClassName": "dxEwPq",
                              "theme": null,
                            },
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "childExpirationTime": 0,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "chat": Object {
                            "id": 1,
                            "messages": Array [],
                            "users": Array [
                              Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                              Object {
                                "avatar": "test2",
                                "id": 2,
                                "name": "test2",
                                "status": "Online",
                              },
                            ],
                          },
                          "isActive": "",
                          "onChangeChat": [MockFunction] {
                            "calls": [Circular],
                          },
                          "user": Object {
                            "avatar": "test",
                            "id": 1,
                            "name": "test",
                            "status": "Online",
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 49,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "memoizedState": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 47,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": [Circular],
                              "child": null,
                              "childExpirationTime": 1,
                              "effectTag": 0,
                              "expirationTime": 1,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="sc-kAzzGY dxEwPq"
                                  >
                                    <div
                                      class="sc-chPdSV gWxTLm"
                                    >
                                      <img
                                        bordercolor="white"
                                        bordersize="1px"
                                        class="ui tiny circular image sc-ifAKCX irlmET"
                                        maxheight="65px"
                                        maxwidth="65px"
                                        src="test"
                                      />
                                      <span
                                        class="sc-kgoBCf gMvtpI"
                                        color="green"
                                      />
                                    </div>
                                    <div
                                      class="sc-kGXeez dCpFuT"
                                    >
                                      <p
                                        class="sc-kpOJdX bxSrEP"
                                      >
                                        test
                                      </p>
                                      <p
                                        class="sc-fjdhpX gAKYZH"
                                      />
                                    </div>
                                    <p
                                      class="sc-dxgOiQ eGtYgX"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": null,
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "chat": Object {
                                            "id": 1,
                                            "messages": Array [],
                                            "users": Array [
                                              Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                              Object {
                                                "avatar": "test2",
                                                "id": 2,
                                                "name": "test2",
                                                "status": "Online",
                                              },
                                            ],
                                          },
                                          "isActive": "",
                                          "onChangeChat": [MockFunction] {
                                            "calls": [Circular],
                                          },
                                          "user": Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                        }
                                      }
                                    />,
                                  },
                                  "tag": 0,
                                },
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": Object {
                                  "callback": null,
                                  "expirationTime": 1,
                                  "next": null,
                                  "nextEffect": null,
                                  "payload": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "chat": Object {
                                            "id": 1,
                                            "messages": Array [],
                                            "users": Array [
                                              Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                              Object {
                                                "avatar": "test2",
                                                "id": 2,
                                                "name": "test2",
                                                "status": "Online",
                                              },
                                            ],
                                          },
                                          "isActive": "",
                                          "onChangeChat": [MockFunction] {
                                            "calls": [Circular],
                                          },
                                          "user": Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                        }
                                      }
                                    />,
                                  },
                                  "tag": 0,
                                },
                              },
                            },
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 32,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="sc-kAzzGY dxEwPq"
                                >
                                  <div
                                    class="sc-chPdSV gWxTLm"
                                  >
                                    <img
                                      bordercolor="white"
                                      bordersize="1px"
                                      class="ui tiny circular image sc-ifAKCX irlmET"
                                      maxheight="65px"
                                      maxwidth="65px"
                                      src="test"
                                    />
                                    <span
                                      class="sc-kgoBCf gMvtpI"
                                      color="green"
                                    />
                                  </div>
                                  <div
                                    class="sc-kGXeez dCpFuT"
                                  >
                                    <p
                                      class="sc-kpOJdX bxSrEP"
                                    >
                                      test
                                    </p>
                                    <p
                                      class="sc-fjdhpX gAKYZH"
                                    />
                                  </div>
                                  <p
                                    class="sc-dxgOiQ eGtYgX"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "didError": false,
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "expirationTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "interactionThreadID": 12,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "memoizedInteractions": Set {},
                              "nextExpirationTimeToWorkOn": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "timeoutHandle": -1,
                            },
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": null,
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": null,
                            },
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 0,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 62,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 63,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 50,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": FiberNode {
                              "_debugID": 49,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugID": 47,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 1,
                                  "effectTag": 0,
                                  "expirationTime": 1,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": Object {
                                    "containerInfo": <div>
                                      <div
                                        class="sc-kAzzGY dxEwPq"
                                      >
                                        <div
                                          class="sc-chPdSV gWxTLm"
                                        >
                                          <img
                                            bordercolor="white"
                                            bordersize="1px"
                                            class="ui tiny circular image sc-ifAKCX irlmET"
                                            maxheight="65px"
                                            maxwidth="65px"
                                            src="test"
                                          />
                                          <span
                                            class="sc-kgoBCf gMvtpI"
                                            color="green"
                                          />
                                        </div>
                                        <div
                                          class="sc-kGXeez dCpFuT"
                                        >
                                          <p
                                            class="sc-kpOJdX bxSrEP"
                                          >
                                            test
                                          </p>
                                          <p
                                            class="sc-fjdhpX gAKYZH"
                                          />
                                        </div>
                                        <p
                                          class="sc-dxgOiQ eGtYgX"
                                        />
                                      </div>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "didError": false,
                                    "earliestPendingTime": 0,
                                    "earliestSuspendedTime": 0,
                                    "expirationTime": 0,
                                    "finishedWork": null,
                                    "firstBatch": null,
                                    "hydrate": false,
                                    "interactionThreadID": 12,
                                    "latestPendingTime": 0,
                                    "latestPingedTime": 0,
                                    "latestSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextExpirationTimeToWorkOn": 0,
                                    "nextScheduledRoot": null,
                                    "pendingChildren": null,
                                    "pendingCommitExpirationTime": 0,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "chat": Object {
                                                "id": 1,
                                                "messages": Array [],
                                                "users": Array [
                                                  Object {
                                                    "avatar": "test",
                                                    "id": 1,
                                                    "name": "test",
                                                    "status": "Online",
                                                  },
                                                  Object {
                                                    "avatar": "test2",
                                                    "id": 2,
                                                    "name": "test2",
                                                    "status": "Online",
                                                  },
                                                ],
                                              },
                                              "isActive": "",
                                              "onChangeChat": [MockFunction] {
                                                "calls": [Circular],
                                              },
                                              "user": Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "chat": Object {
                                                "id": 1,
                                                "messages": Array [],
                                                "users": Array [
                                                  Object {
                                                    "avatar": "test",
                                                    "id": 1,
                                                    "name": "test",
                                                    "status": "Online",
                                                  },
                                                  Object {
                                                    "avatar": "test2",
                                                    "id": 2,
                                                    "name": "test2",
                                                    "status": "Online",
                                                  },
                                                ],
                                              },
                                              "isActive": "",
                                              "onChangeChat": [MockFunction] {
                                                "calls": [Circular],
                                              },
                                              "user": Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "effectTag": 32,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                      class="sc-kAzzGY dxEwPq"
                                    >
                                      <div
                                        class="sc-chPdSV gWxTLm"
                                      >
                                        <img
                                          bordercolor="white"
                                          bordersize="1px"
                                          class="ui tiny circular image sc-ifAKCX irlmET"
                                          maxheight="65px"
                                          maxwidth="65px"
                                          src="test"
                                        />
                                        <span
                                          class="sc-kgoBCf gMvtpI"
                                          color="green"
                                        />
                                      </div>
                                      <div
                                        class="sc-kGXeez dCpFuT"
                                      >
                                        <p
                                          class="sc-kpOJdX bxSrEP"
                                        >
                                          test
                                        </p>
                                        <p
                                          class="sc-fjdhpX gAKYZH"
                                        />
                                      </div>
                                      <p
                                        class="sc-dxgOiQ eGtYgX"
                                      />
                                    </div>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "chat": Object {
                                            "id": 1,
                                            "messages": Array [],
                                            "users": Array [
                                              Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                              Object {
                                                "avatar": "test2",
                                                "id": 2,
                                                "name": "test2",
                                                "status": "Online",
                                              },
                                            ],
                                          },
                                          "isActive": "",
                                          "onChangeChat": [MockFunction] {
                                            "calls": [Circular],
                                          },
                                          "user": Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                        }
                                      }
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  },
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  },
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 2,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 51,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <styled.div>
                                    <Styled(Image)
                                      bordercolor="white"
                                      bordersize="1px"
                                      circular={true}
                                      maxheight="65px"
                                      maxwidth="65px"
                                      size="tiny"
                                      src="test"
                                    />
                                    <styled.span
                                      color="green"
                                    />
                                  </styled.div>,
                                  <styled.div>
                                    <styled.p>
                                      test
                                    </styled.p>
                                    <styled.p>
                                      
                                    </styled.p>
                                  </styled.div>,
                                  <styled.p>
                                    
                                  </styled.p>,
                                ],
                                "className": "",
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                },
                              },
                              "memoizedState": Object {
                                "generatedClassName": "dxEwPq",
                                "theme": null,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": Array [
                                  <styled.div>
                                    <Styled(Image)
                                      bordercolor="white"
                                      bordersize="1px"
                                      circular={true}
                                      maxheight="65px"
                                      maxwidth="65px"
                                      size="tiny"
                                      src="test"
                                    />
                                    <styled.span
                                      color="green"
                                    />
                                  </styled.div>,
                                  <styled.div>
                                    <styled.p>
                                      test
                                    </styled.p>
                                    <styled.p>
                                      
                                    </styled.p>
                                  </styled.div>,
                                  <styled.p>
                                    
                                  </styled.p>,
                                ],
                                "className": "",
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                },
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": StyledComponent {
                                "__reactInternalMemoizedMaskedChildContext": Object {
                                  "__styled-components-stylesheet__": undefined,
                                  "__styled-components__": undefined,
                                  "__styled-components__next__": undefined,
                                },
                                "__reactInternalMemoizedUnmaskedChildContext": Object {},
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "attrs": Object {},
                                "context": Object {
                                  "__styled-components-stylesheet__": undefined,
                                  "__styled-components__": undefined,
                                  "__styled-components__next__": undefined,
                                },
                                "props": Object {
                                  "children": Array [
                                    <styled.div>
                                      <Styled(Image)
                                        bordercolor="white"
                                        bordersize="1px"
                                        circular={true}
                                        maxheight="65px"
                                        maxwidth="65px"
                                        size="tiny"
                                        src="test"
                                      />
                                      <styled.span
                                        color="green"
                                      />
                                    </styled.div>,
                                    <styled.div>
                                      <styled.p>
                                        test
                                      </styled.p>
                                      <styled.p>
                                        
                                      </styled.p>
                                    </styled.div>,
                                    <styled.p>
                                      
                                    </styled.p>,
                                  ],
                                  "className": "",
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                },
                                "refs": Object {},
                                "state": Object {
                                  "generatedClassName": "dxEwPq",
                                  "theme": null,
                                },
                                "unsubscribeId": -1,
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 2,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": Object {
                                "baseState": Object {
                                  "generatedClassName": "dxEwPq",
                                  "theme": null,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 49,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugID": 47,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 1,
                                  "effectTag": 0,
                                  "expirationTime": 1,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": Object {
                                    "containerInfo": <div>
                                      <div
                                        class="sc-kAzzGY dxEwPq"
                                      >
                                        <div
                                          class="sc-chPdSV gWxTLm"
                                        >
                                          <img
                                            bordercolor="white"
                                            bordersize="1px"
                                            class="ui tiny circular image sc-ifAKCX irlmET"
                                            maxheight="65px"
                                            maxwidth="65px"
                                            src="test"
                                          />
                                          <span
                                            class="sc-kgoBCf gMvtpI"
                                            color="green"
                                          />
                                        </div>
                                        <div
                                          class="sc-kGXeez dCpFuT"
                                        >
                                          <p
                                            class="sc-kpOJdX bxSrEP"
                                          >
                                            test
                                          </p>
                                          <p
                                            class="sc-fjdhpX gAKYZH"
                                          />
                                        </div>
                                        <p
                                          class="sc-dxgOiQ eGtYgX"
                                        />
                                      </div>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "didError": false,
                                    "earliestPendingTime": 0,
                                    "earliestSuspendedTime": 0,
                                    "expirationTime": 0,
                                    "finishedWork": null,
                                    "firstBatch": null,
                                    "hydrate": false,
                                    "interactionThreadID": 12,
                                    "latestPendingTime": 0,
                                    "latestPingedTime": 0,
                                    "latestSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextExpirationTimeToWorkOn": 0,
                                    "nextScheduledRoot": null,
                                    "pendingChildren": null,
                                    "pendingCommitExpirationTime": 0,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "chat": Object {
                                                "id": 1,
                                                "messages": Array [],
                                                "users": Array [
                                                  Object {
                                                    "avatar": "test",
                                                    "id": 1,
                                                    "name": "test",
                                                    "status": "Online",
                                                  },
                                                  Object {
                                                    "avatar": "test2",
                                                    "id": 2,
                                                    "name": "test2",
                                                    "status": "Online",
                                                  },
                                                ],
                                              },
                                              "isActive": "",
                                              "onChangeChat": [MockFunction] {
                                                "calls": [Circular],
                                              },
                                              "user": Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "chat": Object {
                                                "id": 1,
                                                "messages": Array [],
                                                "users": Array [
                                                  Object {
                                                    "avatar": "test",
                                                    "id": 1,
                                                    "name": "test",
                                                    "status": "Online",
                                                  },
                                                  Object {
                                                    "avatar": "test2",
                                                    "id": 2,
                                                    "name": "test2",
                                                    "status": "Online",
                                                  },
                                                ],
                                              },
                                              "isActive": "",
                                              "onChangeChat": [MockFunction] {
                                                "calls": [Circular],
                                              },
                                              "user": Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                            }
                                          }
                                        />,
                                      },
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "effectTag": 32,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                      class="sc-kAzzGY dxEwPq"
                                    >
                                      <div
                                        class="sc-chPdSV gWxTLm"
                                      >
                                        <img
                                          bordercolor="white"
                                          bordersize="1px"
                                          class="ui tiny circular image sc-ifAKCX irlmET"
                                          maxheight="65px"
                                          maxwidth="65px"
                                          src="test"
                                        />
                                        <span
                                          class="sc-kgoBCf gMvtpI"
                                          color="green"
                                        />
                                      </div>
                                      <div
                                        class="sc-kGXeez dCpFuT"
                                      >
                                        <p
                                          class="sc-kpOJdX bxSrEP"
                                        >
                                          test
                                        </p>
                                        <p
                                          class="sc-fjdhpX gAKYZH"
                                        />
                                      </div>
                                      <p
                                        class="sc-dxgOiQ eGtYgX"
                                      />
                                    </div>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "chat": Object {
                                            "id": 1,
                                            "messages": Array [],
                                            "users": Array [
                                              Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                              Object {
                                                "avatar": "test2",
                                                "id": 2,
                                                "name": "test2",
                                                "status": "Online",
                                              },
                                            ],
                                          },
                                          "isActive": "",
                                          "onChangeChat": [MockFunction] {
                                            "calls": [Circular],
                                          },
                                          "user": Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                        }
                                      }
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  },
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  },
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 2,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": null,
                            "tag": 0,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 65,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "test",
                              "className": "sc-kpOJdX bxSrEP",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "test",
                              "className": "sc-kpOJdX bxSrEP",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <p
                              class="sc-kpOJdX bxSrEP"
                            >
                              test
                            </p>,
                            "tag": 7,
                            "treeBaseDuration": 0,
                            "type": "p",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "test",
                          },
                          "memoizedState": Object {
                            "generatedClassName": "bxSrEP",
                            "theme": null,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "test",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 64,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": FiberNode {
                              "_debugID": 50,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": FiberNode {
                                "_debugID": 49,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "effectTag": 1,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  },
                                },
                                "memoizedState": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  },
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  },
                                },
                                "ref": null,
                                "return": FiberNode {
                                  "_debugID": 47,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": FiberNode {
                                    "_debugID": 47,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": [Circular],
                                    "child": null,
                                    "childExpirationTime": 1,
                                    "effectTag": 0,
                                    "expirationTime": 1,
                                    "firstContextDependency": null,
                                    "firstEffect": null,
                                    "index": 0,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": null,
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": null,
                                    "ref": null,
                                    "return": null,
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": Object {
                                      "containerInfo": <div>
                                        <div
                                          class="sc-kAzzGY dxEwPq"
                                        >
                                          <div
                                            class="sc-chPdSV gWxTLm"
                                          >
                                            <img
                                              bordercolor="white"
                                              bordersize="1px"
                                              class="ui tiny circular image sc-ifAKCX irlmET"
                                              maxheight="65px"
                                              maxwidth="65px"
                                              src="test"
                                            />
                                            <span
                                              class="sc-kgoBCf gMvtpI"
                                              color="green"
                                            />
                                          </div>
                                          <div
                                            class="sc-kGXeez dCpFuT"
                                          >
                                            <p
                                              class="sc-kpOJdX bxSrEP"
                                            >
                                              test
                                            </p>
                                            <p
                                              class="sc-fjdhpX gAKYZH"
                                            />
                                          </div>
                                          <p
                                            class="sc-dxgOiQ eGtYgX"
                                          />
                                        </div>
                                      </div>,
                                      "context": Object {},
                                      "current": [Circular],
                                      "didError": false,
                                      "earliestPendingTime": 0,
                                      "earliestSuspendedTime": 0,
                                      "expirationTime": 0,
                                      "finishedWork": null,
                                      "firstBatch": null,
                                      "hydrate": false,
                                      "interactionThreadID": 12,
                                      "latestPendingTime": 0,
                                      "latestPingedTime": 0,
                                      "latestSuspendedTime": 0,
                                      "memoizedInteractions": Set {},
                                      "nextExpirationTimeToWorkOn": 0,
                                      "nextScheduledRoot": null,
                                      "pendingChildren": null,
                                      "pendingCommitExpirationTime": 0,
                                      "pendingContext": null,
                                      "pendingInteractionMap": Map {},
                                      "timeoutHandle": -1,
                                    },
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": Object {
                                      "baseState": null,
                                      "firstCapturedEffect": null,
                                      "firstCapturedUpdate": null,
                                      "firstEffect": null,
                                      "firstUpdate": Object {
                                        "callback": null,
                                        "expirationTime": 1,
                                        "next": null,
                                        "nextEffect": null,
                                        "payload": Object {
                                          "element": <WrapperComponent
                                            Component={[Function]}
                                            context={null}
                                            props={
                                              Object {
                                                "chat": Object {
                                                  "id": 1,
                                                  "messages": Array [],
                                                  "users": Array [
                                                    Object {
                                                      "avatar": "test",
                                                      "id": 1,
                                                      "name": "test",
                                                      "status": "Online",
                                                    },
                                                    Object {
                                                      "avatar": "test2",
                                                      "id": 2,
                                                      "name": "test2",
                                                      "status": "Online",
                                                    },
                                                  ],
                                                },
                                                "isActive": "",
                                                "onChangeChat": [MockFunction] {
                                                  "calls": [Circular],
                                                },
                                                "user": Object {
                                                  "avatar": "test",
                                                  "id": 1,
                                                  "name": "test",
                                                  "status": "Online",
                                                },
                                              }
                                            }
                                          />,
                                        },
                                        "tag": 0,
                                      },
                                      "lastCapturedEffect": null,
                                      "lastCapturedUpdate": null,
                                      "lastEffect": null,
                                      "lastUpdate": Object {
                                        "callback": null,
                                        "expirationTime": 1,
                                        "next": null,
                                        "nextEffect": null,
                                        "payload": Object {
                                          "element": <WrapperComponent
                                            Component={[Function]}
                                            context={null}
                                            props={
                                              Object {
                                                "chat": Object {
                                                  "id": 1,
                                                  "messages": Array [],
                                                  "users": Array [
                                                    Object {
                                                      "avatar": "test",
                                                      "id": 1,
                                                      "name": "test",
                                                      "status": "Online",
                                                    },
                                                    Object {
                                                      "avatar": "test2",
                                                      "id": 2,
                                                      "name": "test2",
                                                      "status": "Online",
                                                    },
                                                  ],
                                                },
                                                "isActive": "",
                                                "onChangeChat": [MockFunction] {
                                                  "calls": [Circular],
                                                },
                                                "user": Object {
                                                  "avatar": "test",
                                                  "id": 1,
                                                  "name": "test",
                                                  "status": "Online",
                                                },
                                              }
                                            }
                                          />,
                                        },
                                        "tag": 0,
                                      },
                                    },
                                  },
                                  "child": [Circular],
                                  "childExpirationTime": 0,
                                  "effectTag": 32,
                                  "expirationTime": 0,
                                  "firstContextDependency": null,
                                  "firstEffect": [Circular],
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": [Circular],
                                  "memoizedProps": null,
                                  "memoizedState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "chat": Object {
                                            "id": 1,
                                            "messages": Array [],
                                            "users": Array [
                                              Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                              Object {
                                                "avatar": "test2",
                                                "id": 2,
                                                "name": "test2",
                                                "status": "Online",
                                              },
                                            ],
                                          },
                                          "isActive": "",
                                          "onChangeChat": [MockFunction] {
                                            "calls": [Circular],
                                          },
                                          "user": Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                        }
                                      }
                                    />,
                                  },
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": Object {
                                    "containerInfo": <div>
                                      <div
                                        class="sc-kAzzGY dxEwPq"
                                      >
                                        <div
                                          class="sc-chPdSV gWxTLm"
                                        >
                                          <img
                                            bordercolor="white"
                                            bordersize="1px"
                                            class="ui tiny circular image sc-ifAKCX irlmET"
                                            maxheight="65px"
                                            maxwidth="65px"
                                            src="test"
                                          />
                                          <span
                                            class="sc-kgoBCf gMvtpI"
                                            color="green"
                                          />
                                        </div>
                                        <div
                                          class="sc-kGXeez dCpFuT"
                                        >
                                          <p
                                            class="sc-kpOJdX bxSrEP"
                                          >
                                            test
                                          </p>
                                          <p
                                            class="sc-fjdhpX gAKYZH"
                                          />
                                        </div>
                                        <p
                                          class="sc-dxgOiQ eGtYgX"
                                        />
                                      </div>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "didError": false,
                                    "earliestPendingTime": 0,
                                    "earliestSuspendedTime": 0,
                                    "expirationTime": 0,
                                    "finishedWork": null,
                                    "firstBatch": null,
                                    "hydrate": false,
                                    "interactionThreadID": 12,
                                    "latestPendingTime": 0,
                                    "latestPingedTime": 0,
                                    "latestSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextExpirationTimeToWorkOn": 0,
                                    "nextScheduledRoot": null,
                                    "pendingChildren": null,
                                    "pendingCommitExpirationTime": 0,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "chat": Object {
                                              "id": 1,
                                              "messages": Array [],
                                              "users": Array [
                                                Object {
                                                  "avatar": "test",
                                                  "id": 1,
                                                  "name": "test",
                                                  "status": "Online",
                                                },
                                                Object {
                                                  "avatar": "test2",
                                                  "id": 2,
                                                  "name": "test2",
                                                  "status": "Online",
                                                },
                                              ],
                                            },
                                            "isActive": "",
                                            "onChangeChat": [MockFunction] {
                                              "calls": [Circular],
                                            },
                                            "user": Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                          }
                                        }
                                      />,
                                    },
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": null,
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": null,
                                  },
                                },
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": WrapperComponent {
                                  "_reactInternalFiber": [Circular],
                                  "_reactInternalInstance": Object {},
                                  "context": Object {},
                                  "props": Object {
                                    "Component": [Function],
                                    "context": null,
                                    "props": Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    },
                                  },
                                  "refs": Object {},
                                  "state": Object {
                                    "context": null,
                                    "mount": true,
                                    "props": Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    },
                                  },
                                  "updater": Object {
                                    "enqueueForceUpdate": [Function],
                                    "enqueueReplaceState": [Function],
                                    "enqueueSetState": [Function],
                                    "isMounted": [Function],
                                  },
                                },
                                "tag": 2,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": null,
                              },
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 51,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "effectTag": 1,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    <styled.div>
                                      <Styled(Image)
                                        bordercolor="white"
                                        bordersize="1px"
                                        circular={true}
                                        maxheight="65px"
                                        maxwidth="65px"
                                        size="tiny"
                                        src="test"
                                      />
                                      <styled.span
                                        color="green"
                                      />
                                    </styled.div>,
                                    <styled.div>
                                      <styled.p>
                                        test
                                      </styled.p>
                                      <styled.p>
                                        
                                      </styled.p>
                                    </styled.div>,
                                    <styled.p>
                                      
                                    </styled.p>,
                                  ],
                                  "className": "",
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                },
                                "memoizedState": Object {
                                  "generatedClassName": "dxEwPq",
                                  "theme": null,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": Array [
                                    <styled.div>
                                      <Styled(Image)
                                        bordercolor="white"
                                        bordersize="1px"
                                        circular={true}
                                        maxheight="65px"
                                        maxwidth="65px"
                                        size="tiny"
                                        src="test"
                                      />
                                      <styled.span
                                        color="green"
                                      />
                                    </styled.div>,
                                    <styled.div>
                                      <styled.p>
                                        test
                                      </styled.p>
                                      <styled.p>
                                        
                                      </styled.p>
                                    </styled.div>,
                                    <styled.p>
                                      
                                    </styled.p>,
                                  ],
                                  "className": "",
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": StyledComponent {
                                  "__reactInternalMemoizedMaskedChildContext": Object {
                                    "__styled-components-stylesheet__": undefined,
                                    "__styled-components__": undefined,
                                    "__styled-components__next__": undefined,
                                  },
                                  "__reactInternalMemoizedUnmaskedChildContext": Object {},
                                  "_reactInternalFiber": [Circular],
                                  "_reactInternalInstance": Object {},
                                  "attrs": Object {},
                                  "context": Object {
                                    "__styled-components-stylesheet__": undefined,
                                    "__styled-components__": undefined,
                                    "__styled-components__next__": undefined,
                                  },
                                  "props": Object {
                                    "children": Array [
                                      <styled.div>
                                        <Styled(Image)
                                          bordercolor="white"
                                          bordersize="1px"
                                          circular={true}
                                          maxheight="65px"
                                          maxwidth="65px"
                                          size="tiny"
                                          src="test"
                                        />
                                        <styled.span
                                          color="green"
                                        />
                                      </styled.div>,
                                      <styled.div>
                                        <styled.p>
                                          test
                                        </styled.p>
                                        <styled.p>
                                          
                                        </styled.p>
                                      </styled.div>,
                                      <styled.p>
                                        
                                      </styled.p>,
                                    ],
                                    "className": "",
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                  },
                                  "refs": Object {},
                                  "state": Object {
                                    "generatedClassName": "dxEwPq",
                                    "theme": null,
                                  },
                                  "unsubscribeId": -1,
                                  "updater": Object {
                                    "enqueueForceUpdate": [Function],
                                    "enqueueReplaceState": [Function],
                                    "enqueueSetState": [Function],
                                    "isMounted": [Function],
                                  },
                                },
                                "tag": 2,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "generatedClassName": "dxEwPq",
                                    "theme": null,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "childExpirationTime": 0,
                              "effectTag": 1,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugID": 49,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "effectTag": 1,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  },
                                },
                                "memoizedState": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  },
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  },
                                },
                                "ref": null,
                                "return": FiberNode {
                                  "_debugID": 47,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": FiberNode {
                                    "_debugID": 47,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": [Circular],
                                    "child": null,
                                    "childExpirationTime": 1,
                                    "effectTag": 0,
                                    "expirationTime": 1,
                                    "firstContextDependency": null,
                                    "firstEffect": null,
                                    "index": 0,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": null,
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": null,
                                    "ref": null,
                                    "return": null,
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": Object {
                                      "containerInfo": <div>
                                        <div
                                          class="sc-kAzzGY dxEwPq"
                                        >
                                          <div
                                            class="sc-chPdSV gWxTLm"
                                          >
                                            <img
                                              bordercolor="white"
                                              bordersize="1px"
                                              class="ui tiny circular image sc-ifAKCX irlmET"
                                              maxheight="65px"
                                              maxwidth="65px"
                                              src="test"
                                            />
                                            <span
                                              class="sc-kgoBCf gMvtpI"
                                              color="green"
                                            />
                                          </div>
                                          <div
                                            class="sc-kGXeez dCpFuT"
                                          >
                                            <p
                                              class="sc-kpOJdX bxSrEP"
                                            >
                                              test
                                            </p>
                                            <p
                                              class="sc-fjdhpX gAKYZH"
                                            />
                                          </div>
                                          <p
                                            class="sc-dxgOiQ eGtYgX"
                                          />
                                        </div>
                                      </div>,
                                      "context": Object {},
                                      "current": [Circular],
                                      "didError": false,
                                      "earliestPendingTime": 0,
                                      "earliestSuspendedTime": 0,
                                      "expirationTime": 0,
                                      "finishedWork": null,
                                      "firstBatch": null,
                                      "hydrate": false,
                                      "interactionThreadID": 12,
                                      "latestPendingTime": 0,
                                      "latestPingedTime": 0,
                                      "latestSuspendedTime": 0,
                                      "memoizedInteractions": Set {},
                                      "nextExpirationTimeToWorkOn": 0,
                                      "nextScheduledRoot": null,
                                      "pendingChildren": null,
                                      "pendingCommitExpirationTime": 0,
                                      "pendingContext": null,
                                      "pendingInteractionMap": Map {},
                                      "timeoutHandle": -1,
                                    },
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": Object {
                                      "baseState": null,
                                      "firstCapturedEffect": null,
                                      "firstCapturedUpdate": null,
                                      "firstEffect": null,
                                      "firstUpdate": Object {
                                        "callback": null,
                                        "expirationTime": 1,
                                        "next": null,
                                        "nextEffect": null,
                                        "payload": Object {
                                          "element": <WrapperComponent
                                            Component={[Function]}
                                            context={null}
                                            props={
                                              Object {
                                                "chat": Object {
                                                  "id": 1,
                                                  "messages": Array [],
                                                  "users": Array [
                                                    Object {
                                                      "avatar": "test",
                                                      "id": 1,
                                                      "name": "test",
                                                      "status": "Online",
                                                    },
                                                    Object {
                                                      "avatar": "test2",
                                                      "id": 2,
                                                      "name": "test2",
                                                      "status": "Online",
                                                    },
                                                  ],
                                                },
                                                "isActive": "",
                                                "onChangeChat": [MockFunction] {
                                                  "calls": [Circular],
                                                },
                                                "user": Object {
                                                  "avatar": "test",
                                                  "id": 1,
                                                  "name": "test",
                                                  "status": "Online",
                                                },
                                              }
                                            }
                                          />,
                                        },
                                        "tag": 0,
                                      },
                                      "lastCapturedEffect": null,
                                      "lastCapturedUpdate": null,
                                      "lastEffect": null,
                                      "lastUpdate": Object {
                                        "callback": null,
                                        "expirationTime": 1,
                                        "next": null,
                                        "nextEffect": null,
                                        "payload": Object {
                                          "element": <WrapperComponent
                                            Component={[Function]}
                                            context={null}
                                            props={
                                              Object {
                                                "chat": Object {
                                                  "id": 1,
                                                  "messages": Array [],
                                                  "users": Array [
                                                    Object {
                                                      "avatar": "test",
                                                      "id": 1,
                                                      "name": "test",
                                                      "status": "Online",
                                                    },
                                                    Object {
                                                      "avatar": "test2",
                                                      "id": 2,
                                                      "name": "test2",
                                                      "status": "Online",
                                                    },
                                                  ],
                                                },
                                                "isActive": "",
                                                "onChangeChat": [MockFunction] {
                                                  "calls": [Circular],
                                                },
                                                "user": Object {
                                                  "avatar": "test",
                                                  "id": 1,
                                                  "name": "test",
                                                  "status": "Online",
                                                },
                                              }
                                            }
                                          />,
                                        },
                                        "tag": 0,
                                      },
                                    },
                                  },
                                  "child": [Circular],
                                  "childExpirationTime": 0,
                                  "effectTag": 32,
                                  "expirationTime": 0,
                                  "firstContextDependency": null,
                                  "firstEffect": [Circular],
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": [Circular],
                                  "memoizedProps": null,
                                  "memoizedState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "chat": Object {
                                            "id": 1,
                                            "messages": Array [],
                                            "users": Array [
                                              Object {
                                                "avatar": "test",
                                                "id": 1,
                                                "name": "test",
                                                "status": "Online",
                                              },
                                              Object {
                                                "avatar": "test2",
                                                "id": 2,
                                                "name": "test2",
                                                "status": "Online",
                                              },
                                            ],
                                          },
                                          "isActive": "",
                                          "onChangeChat": [MockFunction] {
                                            "calls": [Circular],
                                          },
                                          "user": Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                        }
                                      }
                                    />,
                                  },
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": Object {
                                    "containerInfo": <div>
                                      <div
                                        class="sc-kAzzGY dxEwPq"
                                      >
                                        <div
                                          class="sc-chPdSV gWxTLm"
                                        >
                                          <img
                                            bordercolor="white"
                                            bordersize="1px"
                                            class="ui tiny circular image sc-ifAKCX irlmET"
                                            maxheight="65px"
                                            maxwidth="65px"
                                            src="test"
                                          />
                                          <span
                                            class="sc-kgoBCf gMvtpI"
                                            color="green"
                                          />
                                        </div>
                                        <div
                                          class="sc-kGXeez dCpFuT"
                                        >
                                          <p
                                            class="sc-kpOJdX bxSrEP"
                                          >
                                            test
                                          </p>
                                          <p
                                            class="sc-fjdhpX gAKYZH"
                                          />
                                        </div>
                                        <p
                                          class="sc-dxgOiQ eGtYgX"
                                        />
                                      </div>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "didError": false,
                                    "earliestPendingTime": 0,
                                    "earliestSuspendedTime": 0,
                                    "expirationTime": 0,
                                    "finishedWork": null,
                                    "firstBatch": null,
                                    "hydrate": false,
                                    "interactionThreadID": 12,
                                    "latestPendingTime": 0,
                                    "latestPingedTime": 0,
                                    "latestSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextExpirationTimeToWorkOn": 0,
                                    "nextScheduledRoot": null,
                                    "pendingChildren": null,
                                    "pendingCommitExpirationTime": 0,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "chat": Object {
                                              "id": 1,
                                              "messages": Array [],
                                              "users": Array [
                                                Object {
                                                  "avatar": "test",
                                                  "id": 1,
                                                  "name": "test",
                                                  "status": "Online",
                                                },
                                                Object {
                                                  "avatar": "test2",
                                                  "id": 2,
                                                  "name": "test2",
                                                  "status": "Online",
                                                },
                                              ],
                                            },
                                            "isActive": "",
                                            "onChangeChat": [MockFunction] {
                                              "calls": [Circular],
                                            },
                                            "user": Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                          }
                                        }
                                      />,
                                    },
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": null,
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": null,
                                  },
                                },
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": WrapperComponent {
                                  "_reactInternalFiber": [Circular],
                                  "_reactInternalInstance": Object {},
                                  "context": Object {},
                                  "props": Object {
                                    "Component": [Function],
                                    "context": null,
                                    "props": Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    },
                                  },
                                  "refs": Object {},
                                  "state": Object {
                                    "context": null,
                                    "mount": true,
                                    "props": Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    },
                                  },
                                  "updater": Object {
                                    "enqueueForceUpdate": [Function],
                                    "enqueueReplaceState": [Function],
                                    "enqueueSetState": [Function],
                                    "isMounted": [Function],
                                  },
                                },
                                "tag": 2,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": null,
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": null,
                              "tag": 0,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 66,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "",
                                "className": "sc-fjdhpX gAKYZH",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "",
                                "className": "sc-fjdhpX gAKYZH",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <p
                                class="sc-fjdhpX gAKYZH"
                              />,
                              "tag": 7,
                              "treeBaseDuration": 0,
                              "type": "p",
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "",
                            },
                            "memoizedState": Object {
                              "generatedClassName": "gAKYZH",
                              "theme": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": StyledComponent {
                              "__reactInternalMemoizedMaskedChildContext": Object {
                                "__styled-components-stylesheet__": undefined,
                                "__styled-components__": undefined,
                                "__styled-components__next__": undefined,
                              },
                              "__reactInternalMemoizedUnmaskedChildContext": Object {},
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "attrs": Object {},
                              "context": Object {
                                "__styled-components-stylesheet__": undefined,
                                "__styled-components__": undefined,
                                "__styled-components__next__": undefined,
                              },
                              "props": Object {
                                "children": "",
                              },
                              "refs": Object {},
                              "state": Object {
                                "generatedClassName": "gAKYZH",
                                "theme": null,
                              },
                              "unsubscribeId": -1,
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": Object {
                              "baseState": Object {
                                "generatedClassName": "gAKYZH",
                                "theme": null,
                              },
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": null,
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": null,
                            },
                          },
                          "stateNode": StyledComponent {
                            "__reactInternalMemoizedMaskedChildContext": Object {
                              "__styled-components-stylesheet__": undefined,
                              "__styled-components__": undefined,
                              "__styled-components__next__": undefined,
                            },
                            "__reactInternalMemoizedUnmaskedChildContext": Object {},
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "attrs": Object {},
                            "context": Object {
                              "__styled-components-stylesheet__": undefined,
                              "__styled-components__": undefined,
                              "__styled-components__next__": undefined,
                            },
                            "props": Object {
                              "children": "test",
                            },
                            "refs": Object {},
                            "state": Object {
                              "generatedClassName": "bxSrEP",
                              "theme": null,
                            },
                            "unsubscribeId": -1,
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": Object {
                            "baseState": Object {
                              "generatedClassName": "bxSrEP",
                              "theme": null,
                            },
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <styled.p>
                              test
                            </styled.p>,
                            <styled.p>
                              
                            </styled.p>,
                          ],
                          "className": "sc-kGXeez dCpFuT",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <styled.p>
                              test
                            </styled.p>,
                            <styled.p>
                              
                            </styled.p>,
                          ],
                          "className": "sc-kGXeez dCpFuT",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="sc-kGXeez dCpFuT"
                        >
                          <p
                            class="sc-kpOJdX bxSrEP"
                          >
                            test
                          </p>
                          <p
                            class="sc-fjdhpX gAKYZH"
                          />
                        </div>,
                        "tag": 7,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <styled.p>
                            test
                          </styled.p>,
                          <styled.p>
                            
                          </styled.p>,
                        ],
                      },
                      "memoizedState": Object {
                        "generatedClassName": "dCpFuT",
                        "theme": null,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <styled.p>
                            test
                          </styled.p>,
                          <styled.p>
                            
                          </styled.p>,
                        ],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 55,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 50,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": FiberNode {
                            "_debugID": 49,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 1,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                      class="sc-kAzzGY dxEwPq"
                                    >
                                      <div
                                        class="sc-chPdSV gWxTLm"
                                      >
                                        <img
                                          bordercolor="white"
                                          bordersize="1px"
                                          class="ui tiny circular image sc-ifAKCX irlmET"
                                          maxheight="65px"
                                          maxwidth="65px"
                                          src="test"
                                        />
                                        <span
                                          class="sc-kgoBCf gMvtpI"
                                          color="green"
                                        />
                                      </div>
                                      <div
                                        class="sc-kGXeez dCpFuT"
                                      >
                                        <p
                                          class="sc-kpOJdX bxSrEP"
                                        >
                                          test
                                        </p>
                                        <p
                                          class="sc-fjdhpX gAKYZH"
                                        />
                                      </div>
                                      <p
                                        class="sc-dxgOiQ eGtYgX"
                                      />
                                    </div>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "chat": Object {
                                              "id": 1,
                                              "messages": Array [],
                                              "users": Array [
                                                Object {
                                                  "avatar": "test",
                                                  "id": 1,
                                                  "name": "test",
                                                  "status": "Online",
                                                },
                                                Object {
                                                  "avatar": "test2",
                                                  "id": 2,
                                                  "name": "test2",
                                                  "status": "Online",
                                                },
                                              ],
                                            },
                                            "isActive": "",
                                            "onChangeChat": [MockFunction] {
                                              "calls": [Circular],
                                            },
                                            "user": Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "chat": Object {
                                              "id": 1,
                                              "messages": Array [],
                                              "users": Array [
                                                Object {
                                                  "avatar": "test",
                                                  "id": 1,
                                                  "name": "test",
                                                  "status": "Online",
                                                },
                                                Object {
                                                  "avatar": "test2",
                                                  "id": 2,
                                                  "name": "test2",
                                                  "status": "Online",
                                                },
                                              ],
                                            },
                                            "isActive": "",
                                            "onChangeChat": [MockFunction] {
                                              "calls": [Circular],
                                            },
                                            "user": Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="sc-kAzzGY dxEwPq"
                                  >
                                    <div
                                      class="sc-chPdSV gWxTLm"
                                    >
                                      <img
                                        bordercolor="white"
                                        bordersize="1px"
                                        class="ui tiny circular image sc-ifAKCX irlmET"
                                        maxheight="65px"
                                        maxwidth="65px"
                                        src="test"
                                      />
                                      <span
                                        class="sc-kgoBCf gMvtpI"
                                        color="green"
                                      />
                                    </div>
                                    <div
                                      class="sc-kGXeez dCpFuT"
                                    >
                                      <p
                                        class="sc-kpOJdX bxSrEP"
                                      >
                                        test
                                      </p>
                                      <p
                                        class="sc-fjdhpX gAKYZH"
                                      />
                                    </div>
                                    <p
                                      class="sc-dxgOiQ eGtYgX"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 51,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <styled.div>
                                  <Styled(Image)
                                    bordercolor="white"
                                    bordersize="1px"
                                    circular={true}
                                    maxheight="65px"
                                    maxwidth="65px"
                                    size="tiny"
                                    src="test"
                                  />
                                  <styled.span
                                    color="green"
                                  />
                                </styled.div>,
                                <styled.div>
                                  <styled.p>
                                    test
                                  </styled.p>
                                  <styled.p>
                                    
                                  </styled.p>
                                </styled.div>,
                                <styled.p>
                                  
                                </styled.p>,
                              ],
                              "className": "",
                              "onClick": [MockFunction] {
                                "calls": [Circular],
                              },
                            },
                            "memoizedState": Object {
                              "generatedClassName": "dxEwPq",
                              "theme": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <styled.div>
                                  <Styled(Image)
                                    bordercolor="white"
                                    bordersize="1px"
                                    circular={true}
                                    maxheight="65px"
                                    maxwidth="65px"
                                    size="tiny"
                                    src="test"
                                  />
                                  <styled.span
                                    color="green"
                                  />
                                </styled.div>,
                                <styled.div>
                                  <styled.p>
                                    test
                                  </styled.p>
                                  <styled.p>
                                    
                                  </styled.p>
                                </styled.div>,
                                <styled.p>
                                  
                                </styled.p>,
                              ],
                              "className": "",
                              "onClick": [MockFunction] {
                                "calls": [Circular],
                              },
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": StyledComponent {
                              "__reactInternalMemoizedMaskedChildContext": Object {
                                "__styled-components-stylesheet__": undefined,
                                "__styled-components__": undefined,
                                "__styled-components__next__": undefined,
                              },
                              "__reactInternalMemoizedUnmaskedChildContext": Object {},
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "attrs": Object {},
                              "context": Object {
                                "__styled-components-stylesheet__": undefined,
                                "__styled-components__": undefined,
                                "__styled-components__next__": undefined,
                              },
                              "props": Object {
                                "children": Array [
                                  <styled.div>
                                    <Styled(Image)
                                      bordercolor="white"
                                      bordersize="1px"
                                      circular={true}
                                      maxheight="65px"
                                      maxwidth="65px"
                                      size="tiny"
                                      src="test"
                                    />
                                    <styled.span
                                      color="green"
                                    />
                                  </styled.div>,
                                  <styled.div>
                                    <styled.p>
                                      test
                                    </styled.p>
                                    <styled.p>
                                      
                                    </styled.p>
                                  </styled.div>,
                                  <styled.p>
                                    
                                  </styled.p>,
                                ],
                                "className": "",
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "generatedClassName": "dxEwPq",
                                "theme": null,
                              },
                              "unsubscribeId": -1,
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": Object {
                              "baseState": Object {
                                "generatedClassName": "dxEwPq",
                                "theme": null,
                              },
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": null,
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": null,
                            },
                          },
                          "childExpirationTime": 0,
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 49,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "chat": Object {
                                  "id": 1,
                                  "messages": Array [],
                                  "users": Array [
                                    Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                    Object {
                                      "avatar": "test2",
                                      "id": 2,
                                      "name": "test2",
                                      "status": "Online",
                                    },
                                  ],
                                },
                                "isActive": "",
                                "onChangeChat": [MockFunction] {
                                  "calls": [Circular],
                                },
                                "user": Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugID": 47,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugID": 47,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 1,
                                "effectTag": 0,
                                "expirationTime": 1,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Object {
                                  "containerInfo": <div>
                                    <div
                                      class="sc-kAzzGY dxEwPq"
                                    >
                                      <div
                                        class="sc-chPdSV gWxTLm"
                                      >
                                        <img
                                          bordercolor="white"
                                          bordersize="1px"
                                          class="ui tiny circular image sc-ifAKCX irlmET"
                                          maxheight="65px"
                                          maxwidth="65px"
                                          src="test"
                                        />
                                        <span
                                          class="sc-kgoBCf gMvtpI"
                                          color="green"
                                        />
                                      </div>
                                      <div
                                        class="sc-kGXeez dCpFuT"
                                      >
                                        <p
                                          class="sc-kpOJdX bxSrEP"
                                        >
                                          test
                                        </p>
                                        <p
                                          class="sc-fjdhpX gAKYZH"
                                        />
                                      </div>
                                      <p
                                        class="sc-dxgOiQ eGtYgX"
                                      />
                                    </div>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "didError": false,
                                  "earliestPendingTime": 0,
                                  "earliestSuspendedTime": 0,
                                  "expirationTime": 0,
                                  "finishedWork": null,
                                  "firstBatch": null,
                                  "hydrate": false,
                                  "interactionThreadID": 12,
                                  "latestPendingTime": 0,
                                  "latestPingedTime": 0,
                                  "latestSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextExpirationTimeToWorkOn": 0,
                                  "nextScheduledRoot": null,
                                  "pendingChildren": null,
                                  "pendingCommitExpirationTime": 0,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "timeoutHandle": -1,
                                },
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "chat": Object {
                                              "id": 1,
                                              "messages": Array [],
                                              "users": Array [
                                                Object {
                                                  "avatar": "test",
                                                  "id": 1,
                                                  "name": "test",
                                                  "status": "Online",
                                                },
                                                Object {
                                                  "avatar": "test2",
                                                  "id": 2,
                                                  "name": "test2",
                                                  "status": "Online",
                                                },
                                              ],
                                            },
                                            "isActive": "",
                                            "onChangeChat": [MockFunction] {
                                              "calls": [Circular],
                                            },
                                            "user": Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "chat": Object {
                                              "id": 1,
                                              "messages": Array [],
                                              "users": Array [
                                                Object {
                                                  "avatar": "test",
                                                  "id": 1,
                                                  "name": "test",
                                                  "status": "Online",
                                                },
                                                Object {
                                                  "avatar": "test2",
                                                  "id": 2,
                                                  "name": "test2",
                                                  "status": "Online",
                                                },
                                              ],
                                            },
                                            "isActive": "",
                                            "onChangeChat": [MockFunction] {
                                              "calls": [Circular],
                                            },
                                            "user": Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                          }
                                        }
                                      />,
                                    },
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "effectTag": 32,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "chat": Object {
                                        "id": 1,
                                        "messages": Array [],
                                        "users": Array [
                                          Object {
                                            "avatar": "test",
                                            "id": 1,
                                            "name": "test",
                                            "status": "Online",
                                          },
                                          Object {
                                            "avatar": "test2",
                                            "id": 2,
                                            "name": "test2",
                                            "status": "Online",
                                          },
                                        ],
                                      },
                                      "isActive": "",
                                      "onChangeChat": [MockFunction] {
                                        "calls": [Circular],
                                      },
                                      "user": Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                    }
                                  }
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <div
                                    class="sc-kAzzGY dxEwPq"
                                  >
                                    <div
                                      class="sc-chPdSV gWxTLm"
                                    >
                                      <img
                                        bordercolor="white"
                                        bordersize="1px"
                                        class="ui tiny circular image sc-ifAKCX irlmET"
                                        maxheight="65px"
                                        maxwidth="65px"
                                        src="test"
                                      />
                                      <span
                                        class="sc-kgoBCf gMvtpI"
                                        color="green"
                                      />
                                    </div>
                                    <div
                                      class="sc-kGXeez dCpFuT"
                                    >
                                      <p
                                        class="sc-kpOJdX bxSrEP"
                                      >
                                        test
                                      </p>
                                      <p
                                        class="sc-fjdhpX gAKYZH"
                                      />
                                    </div>
                                    <p
                                      class="sc-dxgOiQ eGtYgX"
                                    />
                                  </div>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "didError": false,
                                "earliestPendingTime": 0,
                                "earliestSuspendedTime": 0,
                                "expirationTime": 0,
                                "finishedWork": null,
                                "firstBatch": null,
                                "hydrate": false,
                                "interactionThreadID": 12,
                                "latestPendingTime": 0,
                                "latestPingedTime": 0,
                                "latestSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextExpirationTimeToWorkOn": 0,
                                "nextScheduledRoot": null,
                                "pendingChildren": null,
                                "pendingCommitExpirationTime": 0,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "timeoutHandle": -1,
                              },
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                },
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 67,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "",
                            "className": "sc-dxgOiQ eGtYgX",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "",
                            "className": "sc-dxgOiQ eGtYgX",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <p
                            class="sc-dxgOiQ eGtYgX"
                          />,
                          "tag": 7,
                          "treeBaseDuration": 0,
                          "type": "p",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 2,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "",
                        },
                        "memoizedState": Object {
                          "generatedClassName": "eGtYgX",
                          "theme": null,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": StyledComponent {
                          "__reactInternalMemoizedMaskedChildContext": Object {
                            "__styled-components-stylesheet__": undefined,
                            "__styled-components__": undefined,
                            "__styled-components__next__": undefined,
                          },
                          "__reactInternalMemoizedUnmaskedChildContext": Object {},
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "attrs": Object {},
                          "context": Object {
                            "__styled-components-stylesheet__": undefined,
                            "__styled-components__": undefined,
                            "__styled-components__next__": undefined,
                          },
                          "props": Object {
                            "children": "",
                          },
                          "refs": Object {},
                          "state": Object {
                            "generatedClassName": "eGtYgX",
                            "theme": null,
                          },
                          "unsubscribeId": -1,
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": Object {
                          "baseState": Object {
                            "generatedClassName": "eGtYgX",
                            "theme": null,
                          },
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "stateNode": StyledComponent {
                        "__reactInternalMemoizedMaskedChildContext": Object {
                          "__styled-components-stylesheet__": undefined,
                          "__styled-components__": undefined,
                          "__styled-components__next__": undefined,
                        },
                        "__reactInternalMemoizedUnmaskedChildContext": Object {},
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "attrs": Object {},
                        "context": Object {
                          "__styled-components-stylesheet__": undefined,
                          "__styled-components__": undefined,
                          "__styled-components__next__": undefined,
                        },
                        "props": Object {
                          "children": Array [
                            <styled.p>
                              test
                            </styled.p>,
                            <styled.p>
                              
                            </styled.p>,
                          ],
                        },
                        "refs": Object {},
                        "state": Object {
                          "generatedClassName": "dCpFuT",
                          "theme": null,
                        },
                        "unsubscribeId": -1,
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": Object {
                        "baseState": Object {
                          "generatedClassName": "dCpFuT",
                          "theme": null,
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "stateNode": StyledComponent {
                      "__reactInternalMemoizedMaskedChildContext": Object {
                        "__styled-components-stylesheet__": undefined,
                        "__styled-components__": undefined,
                        "__styled-components__next__": undefined,
                      },
                      "__reactInternalMemoizedUnmaskedChildContext": Object {},
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "attrs": Object {},
                      "context": Object {
                        "__styled-components-stylesheet__": undefined,
                        "__styled-components__": undefined,
                        "__styled-components__next__": undefined,
                      },
                      "props": Object {
                        "children": Array [
                          <Styled(Image)
                            bordercolor="white"
                            bordersize="1px"
                            circular={true}
                            maxheight="65px"
                            maxwidth="65px"
                            size="tiny"
                            src="test"
                          />,
                          <styled.span
                            color="green"
                          />,
                        ],
                      },
                      "refs": Object {},
                      "state": Object {
                        "generatedClassName": "gWxTLm",
                        "theme": null,
                      },
                      "unsubscribeId": -1,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseState": Object {
                        "generatedClassName": "gWxTLm",
                        "theme": null,
                      },
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": null,
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": null,
                    },
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <styled.div>
                        <Styled(Image)
                          bordercolor="white"
                          bordersize="1px"
                          circular={true}
                          maxheight="65px"
                          maxwidth="65px"
                          size="tiny"
                          src="test"
                        />
                        <styled.span
                          color="green"
                        />
                      </styled.div>,
                      <styled.div>
                        <styled.p>
                          test
                        </styled.p>
                        <styled.p>
                          
                        </styled.p>
                      </styled.div>,
                      <styled.p>
                        
                      </styled.p>,
                    ],
                    "className": "sc-kAzzGY dxEwPq",
                    "onClick": [MockFunction] {
                      "calls": [Circular],
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <styled.div>
                        <Styled(Image)
                          bordercolor="white"
                          bordersize="1px"
                          circular={true}
                          maxheight="65px"
                          maxwidth="65px"
                          size="tiny"
                          src="test"
                        />
                        <styled.span
                          color="green"
                        />
                      </styled.div>,
                      <styled.div>
                        <styled.p>
                          test
                        </styled.p>
                        <styled.p>
                          
                        </styled.p>
                      </styled.div>,
                      <styled.p>
                        
                      </styled.p>,
                    ],
                    "className": "sc-kAzzGY dxEwPq",
                    "onClick": [MockFunction] {
                      "calls": [Circular],
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 51,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 50,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 49,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 47,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugID": 47,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childExpirationTime": 1,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="sc-kAzzGY dxEwPq"
                                >
                                  <div
                                    class="sc-chPdSV gWxTLm"
                                  >
                                    <img
                                      bordercolor="white"
                                      bordersize="1px"
                                      class="ui tiny circular image sc-ifAKCX irlmET"
                                      maxheight="65px"
                                      maxwidth="65px"
                                      src="test"
                                    />
                                    <span
                                      class="sc-kgoBCf gMvtpI"
                                      color="green"
                                    />
                                  </div>
                                  <div
                                    class="sc-kGXeez dCpFuT"
                                  >
                                    <p
                                      class="sc-kpOJdX bxSrEP"
                                    >
                                      test
                                    </p>
                                    <p
                                      class="sc-fjdhpX gAKYZH"
                                    />
                                  </div>
                                  <p
                                    class="sc-dxgOiQ eGtYgX"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "didError": false,
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "expirationTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "interactionThreadID": 12,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "memoizedInteractions": Set {},
                              "nextExpirationTimeToWorkOn": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "timeoutHandle": -1,
                            },
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "tag": 0,
                              },
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "tag": 0,
                              },
                            },
                          },
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                }
                              }
                            />,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="sc-kAzzGY dxEwPq"
                              >
                                <div
                                  class="sc-chPdSV gWxTLm"
                                >
                                  <img
                                    bordercolor="white"
                                    bordersize="1px"
                                    class="ui tiny circular image sc-ifAKCX irlmET"
                                    maxheight="65px"
                                    maxwidth="65px"
                                    src="test"
                                  />
                                  <span
                                    class="sc-kgoBCf gMvtpI"
                                    color="green"
                                  />
                                </div>
                                <div
                                  class="sc-kGXeez dCpFuT"
                                >
                                  <p
                                    class="sc-kpOJdX bxSrEP"
                                  >
                                    test
                                  </p>
                                  <p
                                    class="sc-fjdhpX gAKYZH"
                                  />
                                </div>
                                <p
                                  class="sc-dxgOiQ eGtYgX"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "didError": false,
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "expirationTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "interactionThreadID": 12,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextExpirationTimeToWorkOn": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "timeoutHandle": -1,
                          },
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 49,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 47,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugID": 47,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childExpirationTime": 1,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="sc-kAzzGY dxEwPq"
                                >
                                  <div
                                    class="sc-chPdSV gWxTLm"
                                  >
                                    <img
                                      bordercolor="white"
                                      bordersize="1px"
                                      class="ui tiny circular image sc-ifAKCX irlmET"
                                      maxheight="65px"
                                      maxwidth="65px"
                                      src="test"
                                    />
                                    <span
                                      class="sc-kgoBCf gMvtpI"
                                      color="green"
                                    />
                                  </div>
                                  <div
                                    class="sc-kGXeez dCpFuT"
                                  >
                                    <p
                                      class="sc-kpOJdX bxSrEP"
                                    >
                                      test
                                    </p>
                                    <p
                                      class="sc-fjdhpX gAKYZH"
                                    />
                                  </div>
                                  <p
                                    class="sc-dxgOiQ eGtYgX"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "didError": false,
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "expirationTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "interactionThreadID": 12,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "memoizedInteractions": Set {},
                              "nextExpirationTimeToWorkOn": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "timeoutHandle": -1,
                            },
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "tag": 0,
                              },
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "tag": 0,
                              },
                            },
                          },
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                }
                              }
                            />,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="sc-kAzzGY dxEwPq"
                              >
                                <div
                                  class="sc-chPdSV gWxTLm"
                                >
                                  <img
                                    bordercolor="white"
                                    bordersize="1px"
                                    class="ui tiny circular image sc-ifAKCX irlmET"
                                    maxheight="65px"
                                    maxwidth="65px"
                                    src="test"
                                  />
                                  <span
                                    class="sc-kgoBCf gMvtpI"
                                    color="green"
                                  />
                                </div>
                                <div
                                  class="sc-kGXeez dCpFuT"
                                >
                                  <p
                                    class="sc-kpOJdX bxSrEP"
                                  >
                                    test
                                  </p>
                                  <p
                                    class="sc-fjdhpX gAKYZH"
                                  />
                                </div>
                                <p
                                  class="sc-dxgOiQ eGtYgX"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "didError": false,
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "expirationTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "interactionThreadID": 12,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextExpirationTimeToWorkOn": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "timeoutHandle": -1,
                          },
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <styled.div>
                          <Styled(Image)
                            bordercolor="white"
                            bordersize="1px"
                            circular={true}
                            maxheight="65px"
                            maxwidth="65px"
                            size="tiny"
                            src="test"
                          />
                          <styled.span
                            color="green"
                          />
                        </styled.div>,
                        <styled.div>
                          <styled.p>
                            test
                          </styled.p>
                          <styled.p>
                            
                          </styled.p>
                        </styled.div>,
                        <styled.p>
                          
                        </styled.p>,
                      ],
                      "className": "",
                      "onClick": [MockFunction] {
                        "calls": [Circular],
                      },
                    },
                    "memoizedState": Object {
                      "generatedClassName": "dxEwPq",
                      "theme": null,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <styled.div>
                          <Styled(Image)
                            bordercolor="white"
                            bordersize="1px"
                            circular={true}
                            maxheight="65px"
                            maxwidth="65px"
                            size="tiny"
                            src="test"
                          />
                          <styled.span
                            color="green"
                          />
                        </styled.div>,
                        <styled.div>
                          <styled.p>
                            test
                          </styled.p>
                          <styled.p>
                            
                          </styled.p>
                        </styled.div>,
                        <styled.p>
                          
                        </styled.p>,
                      ],
                      "className": "",
                      "onClick": [MockFunction] {
                        "calls": [Circular],
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 50,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 49,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 47,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugID": 47,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childExpirationTime": 1,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="sc-kAzzGY dxEwPq"
                                >
                                  <div
                                    class="sc-chPdSV gWxTLm"
                                  >
                                    <img
                                      bordercolor="white"
                                      bordersize="1px"
                                      class="ui tiny circular image sc-ifAKCX irlmET"
                                      maxheight="65px"
                                      maxwidth="65px"
                                      src="test"
                                    />
                                    <span
                                      class="sc-kgoBCf gMvtpI"
                                      color="green"
                                    />
                                  </div>
                                  <div
                                    class="sc-kGXeez dCpFuT"
                                  >
                                    <p
                                      class="sc-kpOJdX bxSrEP"
                                    >
                                      test
                                    </p>
                                    <p
                                      class="sc-fjdhpX gAKYZH"
                                    />
                                  </div>
                                  <p
                                    class="sc-dxgOiQ eGtYgX"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "didError": false,
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "expirationTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "interactionThreadID": 12,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "memoizedInteractions": Set {},
                              "nextExpirationTimeToWorkOn": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "timeoutHandle": -1,
                            },
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "tag": 0,
                              },
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "tag": 0,
                              },
                            },
                          },
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                }
                              }
                            />,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="sc-kAzzGY dxEwPq"
                              >
                                <div
                                  class="sc-chPdSV gWxTLm"
                                >
                                  <img
                                    bordercolor="white"
                                    bordersize="1px"
                                    class="ui tiny circular image sc-ifAKCX irlmET"
                                    maxheight="65px"
                                    maxwidth="65px"
                                    src="test"
                                  />
                                  <span
                                    class="sc-kgoBCf gMvtpI"
                                    color="green"
                                  />
                                </div>
                                <div
                                  class="sc-kGXeez dCpFuT"
                                >
                                  <p
                                    class="sc-kpOJdX bxSrEP"
                                  >
                                    test
                                  </p>
                                  <p
                                    class="sc-fjdhpX gAKYZH"
                                  />
                                </div>
                                <p
                                  class="sc-dxgOiQ eGtYgX"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "didError": false,
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "expirationTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "interactionThreadID": 12,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextExpirationTimeToWorkOn": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "timeoutHandle": -1,
                          },
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "chat": Object {
                          "id": 1,
                          "messages": Array [],
                          "users": Array [
                            Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                            Object {
                              "avatar": "test2",
                              "id": 2,
                              "name": "test2",
                              "status": "Online",
                            },
                          ],
                        },
                        "isActive": "",
                        "onChangeChat": [MockFunction] {
                          "calls": [Circular],
                        },
                        "user": Object {
                          "avatar": "test",
                          "id": 1,
                          "name": "test",
                          "status": "Online",
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 49,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "chat": Object {
                              "id": 1,
                              "messages": Array [],
                              "users": Array [
                                Object {
                                  "avatar": "test",
                                  "id": 1,
                                  "name": "test",
                                  "status": "Online",
                                },
                                Object {
                                  "avatar": "test2",
                                  "id": 2,
                                  "name": "test2",
                                  "status": "Online",
                                },
                              ],
                            },
                            "isActive": "",
                            "onChangeChat": [MockFunction] {
                              "calls": [Circular],
                            },
                            "user": Object {
                              "avatar": "test",
                              "id": 1,
                              "name": "test",
                              "status": "Online",
                            },
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 47,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugID": 47,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childExpirationTime": 1,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <div
                                  class="sc-kAzzGY dxEwPq"
                                >
                                  <div
                                    class="sc-chPdSV gWxTLm"
                                  >
                                    <img
                                      bordercolor="white"
                                      bordersize="1px"
                                      class="ui tiny circular image sc-ifAKCX irlmET"
                                      maxheight="65px"
                                      maxwidth="65px"
                                      src="test"
                                    />
                                    <span
                                      class="sc-kgoBCf gMvtpI"
                                      color="green"
                                    />
                                  </div>
                                  <div
                                    class="sc-kGXeez dCpFuT"
                                  >
                                    <p
                                      class="sc-kpOJdX bxSrEP"
                                    >
                                      test
                                    </p>
                                    <p
                                      class="sc-fjdhpX gAKYZH"
                                    />
                                  </div>
                                  <p
                                    class="sc-dxgOiQ eGtYgX"
                                  />
                                </div>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "didError": false,
                              "earliestPendingTime": 0,
                              "earliestSuspendedTime": 0,
                              "expirationTime": 0,
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "interactionThreadID": 12,
                              "latestPendingTime": 0,
                              "latestPingedTime": 0,
                              "latestSuspendedTime": 0,
                              "memoizedInteractions": Set {},
                              "nextExpirationTimeToWorkOn": 0,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "timeoutHandle": -1,
                            },
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "firstCapturedEffect": null,
                              "firstCapturedUpdate": null,
                              "firstEffect": null,
                              "firstUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "tag": 0,
                              },
                              "lastCapturedEffect": null,
                              "lastCapturedUpdate": null,
                              "lastEffect": null,
                              "lastUpdate": Object {
                                "callback": null,
                                "expirationTime": 1,
                                "next": null,
                                "nextEffect": null,
                                "payload": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "chat": Object {
                                          "id": 1,
                                          "messages": Array [],
                                          "users": Array [
                                            Object {
                                              "avatar": "test",
                                              "id": 1,
                                              "name": "test",
                                              "status": "Online",
                                            },
                                            Object {
                                              "avatar": "test2",
                                              "id": 2,
                                              "name": "test2",
                                              "status": "Online",
                                            },
                                          ],
                                        },
                                        "isActive": "",
                                        "onChangeChat": [MockFunction] {
                                          "calls": [Circular],
                                        },
                                        "user": Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                      }
                                    }
                                  />,
                                },
                                "tag": 0,
                              },
                            },
                          },
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "chat": Object {
                                    "id": 1,
                                    "messages": Array [],
                                    "users": Array [
                                      Object {
                                        "avatar": "test",
                                        "id": 1,
                                        "name": "test",
                                        "status": "Online",
                                      },
                                      Object {
                                        "avatar": "test2",
                                        "id": 2,
                                        "name": "test2",
                                        "status": "Online",
                                      },
                                    ],
                                  },
                                  "isActive": "",
                                  "onChangeChat": [MockFunction] {
                                    "calls": [Circular],
                                  },
                                  "user": Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                }
                              }
                            />,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <div
                                class="sc-kAzzGY dxEwPq"
                              >
                                <div
                                  class="sc-chPdSV gWxTLm"
                                >
                                  <img
                                    bordercolor="white"
                                    bordersize="1px"
                                    class="ui tiny circular image sc-ifAKCX irlmET"
                                    maxheight="65px"
                                    maxwidth="65px"
                                    src="test"
                                  />
                                  <span
                                    class="sc-kgoBCf gMvtpI"
                                    color="green"
                                  />
                                </div>
                                <div
                                  class="sc-kGXeez dCpFuT"
                                >
                                  <p
                                    class="sc-kpOJdX bxSrEP"
                                  >
                                    test
                                  </p>
                                  <p
                                    class="sc-fjdhpX gAKYZH"
                                  />
                                </div>
                                <p
                                  class="sc-dxgOiQ eGtYgX"
                                />
                              </div>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "didError": false,
                            "earliestPendingTime": 0,
                            "earliestSuspendedTime": 0,
                            "expirationTime": 0,
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "interactionThreadID": 12,
                            "latestPendingTime": 0,
                            "latestPingedTime": 0,
                            "latestSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextExpirationTimeToWorkOn": 0,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "timeoutHandle": -1,
                          },
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "chat": Object {
                                      "id": 1,
                                      "messages": Array [],
                                      "users": Array [
                                        Object {
                                          "avatar": "test",
                                          "id": 1,
                                          "name": "test",
                                          "status": "Online",
                                        },
                                        Object {
                                          "avatar": "test2",
                                          "id": 2,
                                          "name": "test2",
                                          "status": "Online",
                                        },
                                      ],
                                    },
                                    "isActive": "",
                                    "onChangeChat": [MockFunction] {
                                      "calls": [Circular],
                                    },
                                    "user": Object {
                                      "avatar": "test",
                                      "id": 1,
                                      "name": "test",
                                      "status": "Online",
                                    },
                                  }
                                }
                              />,
                            },
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": null,
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": null,
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "chat": Object {
                                "id": 1,
                                "messages": Array [],
                                "users": Array [
                                  Object {
                                    "avatar": "test",
                                    "id": 1,
                                    "name": "test",
                                    "status": "Online",
                                  },
                                  Object {
                                    "avatar": "test2",
                                    "id": 2,
                                    "name": "test2",
                                    "status": "Online",
                                  },
                                ],
                              },
                              "isActive": "",
                              "onChangeChat": [MockFunction] {
                                "calls": [Circular],
                              },
                              "user": Object {
                                "avatar": "test",
                                "id": 1,
                                "name": "test",
                                "status": "Online",
                              },
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": StyledComponent {
                      "__reactInternalMemoizedMaskedChildContext": Object {
                        "__styled-components-stylesheet__": undefined,
                        "__styled-components__": undefined,
                        "__styled-components__next__": undefined,
                      },
                      "__reactInternalMemoizedUnmaskedChildContext": Object {},
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "attrs": Object {},
                      "context": Object {
                        "__styled-components-stylesheet__": undefined,
                        "__styled-components__": undefined,
                        "__styled-components__next__": undefined,
                      },
                      "props": Object {
                        "children": Array [
                          <styled.div>
                            <Styled(Image)
                              bordercolor="white"
                              bordersize="1px"
                              circular={true}
                              maxheight="65px"
                              maxwidth="65px"
                              size="tiny"
                              src="test"
                            />
                            <styled.span
                              color="green"
                            />
                          </styled.div>,
                          <styled.div>
                            <styled.p>
                              test
                            </styled.p>
                            <styled.p>
                              
                            </styled.p>
                          </styled.div>,
                          <styled.p>
                            
                          </styled.p>,
                        ],
                        "className": "",
                        "onClick": [MockFunction] {
                          "calls": [Circular],
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "generatedClassName": "dxEwPq",
                        "theme": null,
                      },
                      "unsubscribeId": -1,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseState": Object {
                        "generatedClassName": "dxEwPq",
                        "theme": null,
                      },
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": null,
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": null,
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="sc-kAzzGY dxEwPq"
                  >
                    <div
                      class="sc-chPdSV gWxTLm"
                    >
                      <img
                        bordercolor="white"
                        bordersize="1px"
                        class="ui tiny circular image sc-ifAKCX irlmET"
                        maxheight="65px"
                        maxwidth="65px"
                        src="test"
                      />
                      <span
                        class="sc-kgoBCf gMvtpI"
                        color="green"
                      />
                    </div>
                    <div
                      class="sc-kGXeez dCpFuT"
                    >
                      <p
                        class="sc-kpOJdX bxSrEP"
                      >
                        test
                      </p>
                      <p
                        class="sc-fjdhpX gAKYZH"
                      />
                    </div>
                    <p
                      class="sc-dxgOiQ eGtYgX"
                    />
                  </div>,
                  "tag": 7,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "bubbles": undefined,
                "cancelable": undefined,
                "currentTarget": null,
                "defaultPrevented": undefined,
                "dispatchConfig": Object {
                  "dependencies": Array [
                    "click",
                  ],
                  "isInteractive": true,
                  "phasedRegistrationNames": Object {
                    "bubbled": "onClick",
                    "captured": "onClickCapture",
                  },
                },
                "eventPhase": undefined,
                "isDefaultPrevented": [Function],
                "isPersistent": [Function],
                "isPropagationStopped": [Function],
                "isTrusted": undefined,
                "nativeEvent": Event {
                  "target": <div
                    class="sc-kAzzGY dxEwPq"
                  >
                    <div
                      class="sc-chPdSV gWxTLm"
                    >
                      <img
                        bordercolor="white"
                        bordersize="1px"
                        class="ui tiny circular image sc-ifAKCX irlmET"
                        maxheight="65px"
                        maxwidth="65px"
                        src="test"
                      />
                      <span
                        class="sc-kgoBCf gMvtpI"
                        color="green"
                      />
                    </div>
                    <div
                      class="sc-kGXeez dCpFuT"
                    >
                      <p
                        class="sc-kpOJdX bxSrEP"
                      >
                        test
                      </p>
                      <p
                        class="sc-fjdhpX gAKYZH"
                      />
                    </div>
                    <p
                      class="sc-dxgOiQ eGtYgX"
                    />
                  </div>,
                  "type": "click",
                },
                "target": <div
                  class="sc-kAzzGY dxEwPq"
                >
                  <div
                    class="sc-chPdSV gWxTLm"
                  >
                    <img
                      bordercolor="white"
                      bordersize="1px"
                      class="ui tiny circular image sc-ifAKCX irlmET"
                      maxheight="65px"
                      maxwidth="65px"
                      src="test"
                    />
                    <span
                      class="sc-kgoBCf gMvtpI"
                      color="green"
                    />
                  </div>
                  <div
                    class="sc-kGXeez dCpFuT"
                  >
                    <p
                      class="sc-kpOJdX bxSrEP"
                    >
                      test
                    </p>
                    <p
                      class="sc-fjdhpX gAKYZH"
                    />
                  </div>
                  <p
                    class="sc-dxgOiQ eGtYgX"
                  />
                </div>,
                "timeStamp": 2018-11-09T21:00:00.000Z,
                "type": "click",
              },
            ],
          ],
        }
      }
    >
      <styled.div>
        <div
          className="sc-chPdSV gWxTLm"
        >
          <Styled(Image)
            bordercolor="white"
            bordersize="1px"
            circular={true}
            maxheight="65px"
            maxwidth="65px"
            size="tiny"
            src="test"
          >
            <Image
              as="img"
              bordercolor="white"
              bordersize="1px"
              circular={true}
              className="sc-ifAKCX irlmET"
              maxheight="65px"
              maxwidth="65px"
              size="tiny"
              src="test"
              ui={true}
            >
              <img
                bordercolor="white"
                bordersize="1px"
                className="ui tiny circular image sc-ifAKCX irlmET"
                maxheight="65px"
                maxwidth="65px"
                src="test"
              />
            </Image>
          </Styled(Image)>
          <styled.span
            color="green"
          >
            <span
              className="sc-kgoBCf gMvtpI"
              color="green"
            />
          </styled.span>
        </div>
      </styled.div>
      <styled.div>
        <div
          className="sc-kGXeez dCpFuT"
        >
          <styled.p>
            <p
              className="sc-kpOJdX bxSrEP"
            >
              test
            </p>
          </styled.p>
          <styled.p>
            <p
              className="sc-fjdhpX gAKYZH"
            />
          </styled.p>
        </div>
      </styled.div>
      <styled.p>
        <p
          className="sc-dxgOiQ eGtYgX"
        />
      </styled.p>
    </div>
  </styled.div>
</ChatCard>
`;
